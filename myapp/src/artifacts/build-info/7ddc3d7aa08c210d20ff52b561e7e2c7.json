{"id":"7ddc3d7aa08c210d20ff52b561e7e2c7","_format":"hh-sol-build-info-1","solcVersion":"0.8.18","solcLongVersion":"0.8.18+commit.87f61d96","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(address from, address to, uint256 amount) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../extensions/IERC20Permit.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Compatible with tokens that require the approval to be set to\n     * 0 before setting it to a non-zero value.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n     * Revert on invalid signature.\n     */\n    function safePermit(\n        IERC20Permit token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && Address.isContract(address(token));\n    }\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"contracts/Prime.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.9;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\ncontract Prime is ERC20,Ownable  {\r\n    constructor(uint amount) ERC20(\"MyToken\", \"MTK\") {\r\n        _mint(msg.sender, amount);\r\n    }\r\n    \r\n    function mintToken(address to,uint amount) external onlyOwner {\r\n        _mint(to, amount);\r\n    }\r\n}\r\n"},"contracts/Staking_Contract.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.18;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\n\r\n/// @title Stacking Contract\r\n/// @notice A smart contract for staking tokens and earning rewards\r\ncontract Stacking is ERC20,ReentrancyGuard {\r\n    using SafeERC20 for IERC20;\r\n   \r\n    // Error definitions\r\n    error Insuffient_balance();\r\n    error InvalidPool();\r\n    error ClaimedUpToPool();\r\n    error NothingStaked();\r\n    \r\n    // Events\r\n    event StakeDetails(\r\n        address indexed from,\r\n        uint256 newAmount,\r\n        uint256 newWeightAmount\r\n    );\r\n\r\n    event Unstaked(address from ,uint amount);\r\n    \r\n    // Structs\r\n\r\n    /// @dev Represents stake details for a user\r\n    struct Stake {\r\n        uint256 amountStaked;           // Amount of tokens staked by the user\r\n        uint256 lastInteraction;        // Timestamp of the last interaction with the stake\r\n        uint256 weightAtLastInteraction; // Stake weight at the time of the last interaction\r\n    }\r\n\r\n    /// @dev Represents a staking pool\r\n    struct Pool {\r\n        uint256 volume;         // Total volume of tokens in the pool\r\n        uint256 totalClaimed;   // Total tokens claimed from the pool\r\n        uint256 startTime;      // Start time of the pool\r\n        uint256 endTime;        // End time of the pool\r\n        uint256 weightAtEnd;    // Stake weight at the end of the pool\r\n    }\r\n   // State variables\r\n    uint256 public poolId;               // ID of the current pool\r\n    uint256 public totalStaked;          // Total amount of tokens staked\r\n    uint256 public timeToDouble;         // Time period for doubling stake weight\r\n    address public immutable prime;      // Address of the prime contract\r\n    uint256 public lastInteraction;      // Timestamp of the last interaction with the contract\r\n    uint256 public _contractWeight;      // Stake weight of the contract\r\n    uint256 public unclaimedRewards;     // Total unclaimed rewards\r\n    uint256 public poolLength;           // Total number of pools\r\n    uint256 private _totalSupply;        // Total supply of the stacking token\r\n    mapping(address => uint256) public poolLeftOff;  // Mapping of user's pool position\r\n    mapping(address => uint256) private _balances;  // Mapping of user's token balances\r\n    Pool public currentPool;             // Current pool details\r\n    mapping(address => mapping(uint256 => bool)) public userClaimedPool;  // Mapping of user's claimed pool\r\n    mapping(address => mapping(uint256 => uint256)) public _userWeightAtPool;  // Mapping of user's stake weight at a pool\r\n    mapping(address => Stake) public stakeDetails;  // Mapping of user's stake details\r\n    mapping(uint256 => Pool) public poolDetails;  // Mapping of pool ID to pool details\r\n    mapping(address => uint256) public claimLeftOff;  // Mapping of user's claim position\r\n\r\n    \r\n    /// @dev Constructor function.\r\n    /// @param _timeToDouble Time period for doubling stake weight\r\n    /// @param _poolLength Total number of pools\r\n    /// @param _firstPoolStartIn Time until the first pool starts\r\n    /// @param _prime Address of the prime contract\r\n    constructor(\r\n        uint256 _timeToDouble,\r\n        uint256 _poolLength,\r\n        uint256 _firstPoolStartIn,\r\n        address _prime\r\n    ) ERC20(\"MYToken\", \"MT\") {\r\n        prime =_prime;\r\n        timeToDouble = _timeToDouble;\r\n        poolLength = _poolLength;\r\n        currentPool.endTime = block.timestamp + _firstPoolStartIn;\r\n        poolDetails[0].endTime = block.timestamp + _firstPoolStartIn;\r\n        currentPool.startTime = block.timestamp;\r\n        poolDetails[0].startTime = block.timestamp;\r\n    }\r\n    \r\n    /**\r\n     * @dev Mints new tokens and assigns them to the specified account.\r\n     * @param account The account to mint tokens for.\r\n     * @param amount The amount of tokens to mint.\r\n     */\r\n    function mintToken(address account,uint256 amount) external {\r\n        require(account != address(0), \"ERC20: mint to the zero address\");\r\n        _update(address(0), account, amount);\r\n    }\r\n    \r\n    /**\r\n     * @dev Returns the token balance of the specified account.\r\n     * @param account The account to retrieve the balance for.\r\n     * @return The token balance of the account.\r\n     */\r\n    function balanceOf(address account) public view virtual override  returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n    \r\n    /**\r\n     * @dev Internal function to update token balances during transfers.\r\n     * @param from The account to transfer tokens from.\r\n     * @param to The account to transfer tokens to.\r\n     * @param amount The amount of tokens to transfer.\r\n     */\r\n    function _update(address from, address to, uint256 amount) internal virtual  {\r\n        if (from == address(0)) {\r\n            _totalSupply += amount;\r\n        } else {\r\n            uint256 fromBalance = _balances[from];\r\n            require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\r\n            unchecked {\r\n                // Overflow not possible: amount <= fromBalance <= totalSupply.\r\n                _balances[from] = fromBalance - amount;\r\n            }\r\n        }\r\n\r\n        if (to == address(0)) {\r\n            unchecked {\r\n                // Overflow not possible: amount <= totalSupply or amount <= fromBalance <= totalSupply.\r\n                _totalSupply -= amount;\r\n            }\r\n        } else {\r\n            unchecked {\r\n                // Overflow not possible: balance + amount is at most totalSupply, which we know fits into a uint256.\r\n                _balances[to] += amount;\r\n            }\r\n        }\r\n\r\n        emit Transfer(from, to, amount);\r\n    }\r\n     /**\r\n     * @dev Transfers tokens from the sender's account to the specified account.\r\n     * @param to The account to transfer tokens to.\r\n     * @param amount The amount of tokens to transfer.\r\n     * @return True if the transfer is successful, false otherwise.\r\n     */\r\n     function transfer(address to, uint256 amount) public virtual override  returns (bool) {\r\n        address owner =_msgSender();\r\n        _transfer(owner, to, amount);\r\n        return true;\r\n    }\r\n\r\n     function _transfer(address from, address to, uint256 amount) internal override {\r\n        require(from != address(0), \"ERC20: transfer from the zero address\");\r\n        require(to != address(0), \"ERC20: transfer to the zero address\");\r\n        _update(from, to, amount);\r\n    }\r\n\r\n    function _msgSender() internal view virtual override  returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual override returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n\r\n    function totalSupply() public view virtual override returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n    \r\n    /**\r\n     * @dev Stakes a specified amount of tokens.\r\n     * @param amount The amount of tokens to stake.\r\n     */\r\n    function stak(uint256 amount) external {\r\n        if (balanceOf(msg.sender) < amount) {\r\n            revert Insuffient_balance();\r\n        }\r\n        transfer(address(this), amount);\r\n         updatePool();\r\n        _setUserWeightAtPool(msg.sender);\r\n        _adjustContractWeight(true, amount);\r\n        \r\n        totalStaked += amount; \r\n       Stake memory _stake = stakeDetails[msg.sender];\r\n\r\n        if (_stake.amountStaked > 0) {\r\n            uint256 _additionalWeight = _weightIncreaseSinceInteraction(\r\n                block.timestamp,\r\n                _stake.lastInteraction,\r\n                _stake.amountStaked\r\n            );\r\n            _stake.weightAtLastInteraction += (_additionalWeight + amount);\r\n        } else {\r\n            _stake.weightAtLastInteraction = amount;\r\n        }\r\n\r\n        _stake.amountStaked += amount;\r\n        _stake.lastInteraction = block.timestamp;\r\n\r\n        stakeDetails[msg.sender] = _stake;\r\n\r\n        emit StakeDetails(msg.sender, _stake.amountStaked, _stake.weightAtLastInteraction);\r\n    }\r\n    \r\n    /**\r\n     * @dev Claims the pending rewards for the caller.\r\n     * @param _to The address to send the claimed rewards to.\r\n     */\r\n    function claim(address _to) external nonReentrant {\r\n        _setUserWeightAtPool(msg.sender);\r\n\r\n        uint256 _pendingRewards;\r\n        uint256 _claimLeftOff = claimLeftOff[msg.sender];\r\n\r\n        if (_claimLeftOff == poolId) revert ClaimedUpToPool();\r\n\r\n        for (_claimLeftOff; _claimLeftOff < poolId; ++_claimLeftOff) {\r\n            if (!userClaimedPool[msg.sender][_claimLeftOff] && contractWeightAtPool(_claimLeftOff) > 0) {\r\n                userClaimedPool[msg.sender][_claimLeftOff] = true;\r\n                Pool memory _pool = poolDetails[_claimLeftOff];\r\n                uint256 _weightAtPool = _userWeightAtPool[msg.sender][_claimLeftOff];\r\n\r\n                uint256 _poolRewards = (_pool.volume * _weightAtPool) /\r\n                    contractWeightAtPool(_claimLeftOff);\r\n                if (_pool.totalClaimed + _poolRewards > _pool.volume) {\r\n                    _poolRewards = _pool.volume - _pool.totalClaimed;\r\n                }\r\n\r\n                _pendingRewards += _poolRewards;\r\n                poolDetails[_claimLeftOff].totalClaimed += _poolRewards;\r\n            }\r\n        }\r\n      \r\n        claimLeftOff[msg.sender] = poolId;\r\n        unclaimedRewards -= _pendingRewards;\r\n        IERC20(prime).safeTransfer(_to, _pendingRewards);\r\n    }\r\n    /**\r\n     * @dev Unstakes the tokens currently staked by the caller.\r\n     * @param _to The address to send the unstaked tokens to.\r\n     */\r\n     function unstake(address _to) external nonReentrant {\r\n        Stake memory _stake = stakeDetails[msg.sender];\r\n        \r\n        uint256 _stakedAmount = _stake.amountStaked;\r\n\r\n        if (_stakedAmount == 0) revert NothingStaked();\r\n\r\n        updatePool();\r\n        _setUserWeightAtPool(msg.sender);\r\n        _adjustContractWeight(false, _stakedAmount);\r\n\r\n        totalStaked -= _stakedAmount;\r\n\r\n        _stake.amountStaked = 0;\r\n        _stake.lastInteraction = block.timestamp;\r\n        _stake.weightAtLastInteraction = 0;\r\n\r\n        stakeDetails[msg.sender] = _stake;\r\n        _balances[address(this)]-=_stakedAmount;\r\n        _balances[_to]+=_stakedAmount;\r\n      \r\n\r\n        emit Unstaked(msg.sender, _stakedAmount);\r\n    }\r\n\r\n     /**\r\n     * @dev Returns the weight of the specified user at the specified pool.\r\n     * @param _user The user address.\r\n     * @param _poolId The pool ID.\r\n     * @return userWeight_ The weight of the user at the pool.\r\n     */\r\n     \r\n    function userWeightAtPool(address _user, uint256 _poolId) public view returns (uint256 userWeight_) {\r\n        if (poolId <= _poolId) revert InvalidPool();\r\n        uint256 _poolLeftOff = poolLeftOff[_user];\r\n        Stake memory _stake = stakeDetails[_user];\r\n\r\n        if (_poolLeftOff > _poolId) userWeight_ = _userWeightAtPool[_user][_poolId];\r\n        else {\r\n            Pool memory _pool = poolDetails[_poolId];\r\n            if (_stake.amountStaked > 0) {\r\n                uint256 _additionalWeight = _weightIncreaseSinceInteraction(\r\n                    _pool.endTime,\r\n                    _stake.lastInteraction,\r\n                    _stake.amountStaked\r\n                );\r\n                userWeight_ = _additionalWeight + _stake.weightAtLastInteraction;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Sets the user's weight at each pool up to the current pool.\r\n     * @param _user The user address.\r\n     */\r\n    function _setUserWeightAtPool(address _user) internal {\r\n        uint256 _poolLeftOff = poolLeftOff[_user];\r\n\r\n        if (_poolLeftOff != poolId) {\r\n            Stake memory _stake = stakeDetails[_user];\r\n            if (_stake.amountStaked > 0) {\r\n                for (_poolLeftOff; _poolLeftOff < poolId; ++_poolLeftOff) {\r\n                    Pool memory _pool = poolDetails[_poolLeftOff];\r\n                   \r\n                    uint256 _additionalWeight = _weightIncreaseSinceInteraction(\r\n                        _pool.endTime,\r\n                        _stake.lastInteraction,\r\n                        _stake.amountStaked\r\n                    );\r\n                    \r\n                    _userWeightAtPool[_user][_poolLeftOff] =\r\n                        _additionalWeight +\r\n                        _stake.weightAtLastInteraction;\r\n                }\r\n            }\r\n         \r\n            poolLeftOff[_user] = poolId;\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * @dev Updates the current pool if the current time exceeds the pool end time.\r\n     */\r\n    function updatePool() internal {\r\n        if (block.timestamp >= currentPool.endTime) {\r\n           \r\n            uint256 _additionalWeight = _weightIncreaseSinceInteraction(\r\n                currentPool.endTime,\r\n                lastInteraction,\r\n                totalStaked\r\n            );\r\n           \r\n            poolDetails[poolId].weightAtEnd =\r\n                _additionalWeight +\r\n                _contractWeight;\r\n         \r\n            ++poolId;\r\n\r\n            Pool memory _pool;\r\n            _pool.volume = IERC20(prime).balanceOf(address(this)) - unclaimedRewards;\r\n            _pool.startTime = block.timestamp;\r\n            _pool.endTime = block.timestamp + poolLength;\r\n          \r\n            currentPool = _pool;\r\n            poolDetails[poolId] = _pool;\r\n          \r\n            unclaimedRewards += _pool.volume;\r\n        }\r\n    }\r\n     /**\r\n     * @dev Calculates the additional weight increase since the last interaction.\r\n     * @param _timestamp The current timestamp.\r\n     * @param _lastInteraction The timestamp of the last interaction.\r\n     * @param _baseAmount The base amount to calculate the additional weight increase.\r\n     * @return additionalWeight_ The additional weight increase.\r\n     */\r\n    function _weightIncreaseSinceInteraction(\r\n        uint256 _timestamp,\r\n        uint256 _lastInteraction,\r\n        uint256 _baseAmount\r\n    ) internal view returns (uint256 additionalWeight_) {\r\n        uint256 _timePassed = _timestamp - _lastInteraction;\r\n        uint256 _multiplierReceived = (1e18 * _timePassed) / timeToDouble;\r\n        additionalWeight_ = (_baseAmount * _multiplierReceived) / 1e18;\r\n    }\r\n    /**\r\n     * @dev Adjusts the contract's weight based on stake or unstake actions.\r\n     * @param _stake A boolean indicating if it's a stake action (true) or unstake action (false).\r\n     * @param _amount The amount being staked or unstaked.\r\n     */\r\n    function _adjustContractWeight(bool _stake, uint256 _amount) internal {\r\n        uint256 _weightReceivedSinceInteraction = _weightIncreaseSinceInteraction(\r\n                block.timestamp,\r\n                lastInteraction,\r\n                totalStaked\r\n            );\r\n        _contractWeight += _weightReceivedSinceInteraction;\r\n\r\n        if (_stake) {\r\n            _contractWeight += _amount;\r\n        } else {\r\n            if (userTotalWeight(msg.sender) > _contractWeight)\r\n                _contractWeight = 0;\r\n            else _contractWeight -= userTotalWeight(msg.sender);\r\n        }\r\n\r\n        lastInteraction = block.timestamp;\r\n    }\r\n    /**\r\n     * @dev Retrieves the total weight of a user.\r\n     * @param _user The user's address.\r\n     * @return userWeight_ The total weight of the user.\r\n     */\r\n    function userTotalWeight(address _user)\r\n        public\r\n        view\r\n        returns (uint256 userWeight_)\r\n    {\r\n        Stake memory _stake = stakeDetails[_user];\r\n        uint256 _additionalWeight = _weightIncreaseSinceInteraction(\r\n            block.timestamp,\r\n            _stake.lastInteraction,\r\n            _stake.amountStaked\r\n        );\r\n        userWeight_ = _additionalWeight + _stake.weightAtLastInteraction;\r\n    }\r\n    /**\r\n     * @dev Retrieves the contract's weight at a specific pool.\r\n     * @param _poolId The ID of the pool.\r\n     * @return contractWeight_ The contract's weight at the specified pool.\r\n     */\r\n\r\n    function contractWeightAtPool(uint256 _poolId)\r\n        public\r\n        view\r\n        returns (uint256 contractWeight_)\r\n    {\r\n        if (poolId <= _poolId) revert InvalidPool();\r\n        return poolDetails[_poolId].weightAtEnd;\r\n    }\r\n    /**\r\n     * @dev Retrieves the current contract's weight.\r\n     * @return contractWeight_ The current contract's weight.\r\n     */\r\n    function contractWeight() external view returns (uint256 contractWeight_) {\r\n        uint256 _weightIncrease = _weightIncreaseSinceInteraction(\r\n            block.timestamp,\r\n            lastInteraction,\r\n            totalStaked\r\n        );\r\n        contractWeight_ = _weightIncrease + _contractWeight;\r\n    }\r\n\r\n     /**\r\n     * @dev Retrieves the pending rewards that haven't been claimed yet.\r\n     * @return pendingRewards_ The amount of pending rewards.\r\n     */\r\n   function pendingRewards() external view returns (uint256 pendingRewards_) {\r\n        return IERC20(prime).balanceOf(address(this)) - unclaimedRewards;\r\n    }\r\n    /**\r\n     * @dev Calculates the claimable rewards for a specific pool and user.\r\n     * @param _user The user's address.\r\n     * @param _poolId The ID of the pool.\r\n     * @return claimable_ The amount of rewards claimable by the user in the specified pool.\r\n     */\r\n    function claimAmountForPool(address _user, uint256 _poolId) external view returns (uint256 claimable_) {\r\n        if (poolId <= _poolId) revert InvalidPool();\r\n        if (userClaimedPool[_user][_poolId] || contractWeightAtPool(_poolId) == 0) return 0;\r\n\r\n        Pool memory _pool = poolDetails[_poolId];\r\n\r\n        claimable_ = (_pool.volume * userWeightAtPool(_user, _poolId)) / contractWeightAtPool(_poolId);\r\n    }\r\n\r\n    \r\n}"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","storageLayout","devdoc","userdoc","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[1631],"Ownable":[112]},"id":113,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":113,"sourceUnit":1632,"src":"127:30:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4,"name":"Context","nameLocations":["683:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":1631,"src":"683:7:0"},"id":5,"nodeType":"InheritanceSpecifier","src":"683:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"159:494:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":112,"linearizedBaseContracts":[112,1631],"name":"Ownable","nameLocation":"672:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":7,"mutability":"mutable","name":"_owner","nameLocation":"713:6:0","nodeType":"VariableDeclaration","scope":112,"src":"697:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":13,"name":"OwnershipTransferred","nameLocation":"732:20:0","nodeType":"EventDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:0","nodeType":"VariableDeclaration","scope":13,"src":"753:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:0","nodeType":"VariableDeclaration","scope":13,"src":"784:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:0"},"src":"726:84:0"},{"body":{"id":22,"nodeType":"Block","src":"926:49:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":18,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"955:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":19,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"955:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":17,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"936:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":20,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"936:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":21,"nodeType":"ExpressionStatement","src":"936:32:0"}]},"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"816:91:0","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":23,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[],"src":"923:2:0"},"returnParameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"926:0:0"},"scope":112,"src":"912:63:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":30,"nodeType":"Block","src":"1084:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":26,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1094:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":27,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1094:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":28,"nodeType":"ExpressionStatement","src":"1094:13:0"},{"id":29,"nodeType":"PlaceholderStatement","src":"1117:1:0"}]},"documentation":{"id":24,"nodeType":"StructuredDocumentation","src":"981:77:0","text":" @dev Throws if called by any account other than the owner."},"id":31,"name":"onlyOwner","nameLocation":"1072:9:0","nodeType":"ModifierDefinition","parameters":{"id":25,"nodeType":"ParameterList","parameters":[],"src":"1081:2:0"},"src":"1063:62:0","virtual":false,"visibility":"internal"},{"body":{"id":39,"nodeType":"Block","src":"1256:30:0","statements":[{"expression":{"id":37,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"1273:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":36,"id":38,"nodeType":"Return","src":"1266:13:0"}]},"documentation":{"id":32,"nodeType":"StructuredDocumentation","src":"1131:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":40,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:0","nodeType":"FunctionDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[],"src":"1215:2:0"},"returnParameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40,"src":"1247:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":34,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:0"},"scope":112,"src":"1201:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":53,"nodeType":"Block","src":"1404:85:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":49,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":45,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"1422:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":46,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1422:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":47,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"1433:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":48,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1433:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":44,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1414:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1414:68:0"}]},"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"1292:62:0","text":" @dev Throws if the sender is not the owner."},"id":54,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:0","nodeType":"FunctionDefinition","parameters":{"id":42,"nodeType":"ParameterList","parameters":[],"src":"1379:2:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[],"src":"1404:0:0"},"scope":112,"src":"1359:130:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":67,"nodeType":"Block","src":"1878:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":63,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1915:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":62,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1907:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1907:7:0","typeDescriptions":{}}},"id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1907:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":60,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"1888:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1888:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":66,"nodeType":"ExpressionStatement","src":"1888:30:0"}]},"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1495:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":68,"implemented":true,"kind":"function","modifiers":[{"id":58,"kind":"modifierInvocation","modifierName":{"id":57,"name":"onlyOwner","nameLocations":["1868:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1868:9:0"},"nodeType":"ModifierInvocation","src":"1868:9:0"}],"name":"renounceOwnership","nameLocation":"1833:17:0","nodeType":"FunctionDefinition","parameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"1850:2:0"},"returnParameters":{"id":59,"nodeType":"ParameterList","parameters":[],"src":"1878:0:0"},"scope":112,"src":"1824:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":90,"nodeType":"Block","src":"2144:128:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":82,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":77,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2162:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":80,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2182:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":79,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2174:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":78,"name":"address","nodeType":"ElementaryTypeName","src":"2174:7:0","typeDescriptions":{}}},"id":81,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2174:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2162:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":83,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2186:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":76,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2154:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":84,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2154:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":85,"nodeType":"ExpressionStatement","src":"2154:73:0"},{"expression":{"arguments":[{"id":87,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2256:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":86,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"2237:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2237:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":89,"nodeType":"ExpressionStatement","src":"2237:28:0"}]},"documentation":{"id":69,"nodeType":"StructuredDocumentation","src":"1931:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":91,"implemented":true,"kind":"function","modifiers":[{"id":74,"kind":"modifierInvocation","modifierName":{"id":73,"name":"onlyOwner","nameLocations":["2134:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2134:9:0"},"nodeType":"ModifierInvocation","src":"2134:9:0"}],"name":"transferOwnership","nameLocation":"2083:17:0","nodeType":"FunctionDefinition","parameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":71,"mutability":"mutable","name":"newOwner","nameLocation":"2109:8:0","nodeType":"VariableDeclaration","scope":91,"src":"2101:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":70,"name":"address","nodeType":"ElementaryTypeName","src":"2101:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2100:18:0"},"returnParameters":{"id":75,"nodeType":"ParameterList","parameters":[],"src":"2144:0:0"},"scope":112,"src":"2074:198:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":110,"nodeType":"Block","src":"2489:124:0","statements":[{"assignments":[98],"declarations":[{"constant":false,"id":98,"mutability":"mutable","name":"oldOwner","nameLocation":"2507:8:0","nodeType":"VariableDeclaration","scope":110,"src":"2499:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"2499:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":100,"initialValue":{"id":99,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2518:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2499:25:0"},{"expression":{"id":103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":101,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2534:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":102,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2543:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2534:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":104,"nodeType":"ExpressionStatement","src":"2534:17:0"},{"eventCall":{"arguments":[{"id":106,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"2587:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":107,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2597:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":105,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"2566:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2566:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":109,"nodeType":"EmitStatement","src":"2561:45:0"}]},"documentation":{"id":92,"nodeType":"StructuredDocumentation","src":"2278:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":111,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2435:18:0","nodeType":"FunctionDefinition","parameters":{"id":95,"nodeType":"ParameterList","parameters":[{"constant":false,"id":94,"mutability":"mutable","name":"newOwner","nameLocation":"2462:8:0","nodeType":"VariableDeclaration","scope":111,"src":"2454:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":93,"name":"address","nodeType":"ElementaryTypeName","src":"2454:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2453:18:0"},"returnParameters":{"id":96,"nodeType":"ParameterList","parameters":[],"src":"2489:0:0"},"scope":112,"src":"2426:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":113,"src":"654:1961:0","usedErrors":[]}],"src":"102:2514:0"},"id":0},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/security/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[177]},"id":178,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":114,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:1"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":115,"nodeType":"StructuredDocumentation","src":"137:750:1","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":177,"linearizedBaseContracts":[177],"name":"ReentrancyGuard","nameLocation":"906:15:1","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":118,"mutability":"constant","name":"_NOT_ENTERED","nameLocation":"1701:12:1","nodeType":"VariableDeclaration","scope":177,"src":"1676:41:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":116,"name":"uint256","nodeType":"ElementaryTypeName","src":"1676:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1716:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":121,"mutability":"constant","name":"_ENTERED","nameLocation":"1748:8:1","nodeType":"VariableDeclaration","scope":177,"src":"1723:37:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":119,"name":"uint256","nodeType":"ElementaryTypeName","src":"1723:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1759:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":123,"mutability":"mutable","name":"_status","nameLocation":"1783:7:1","nodeType":"VariableDeclaration","scope":177,"src":"1767:23:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":122,"name":"uint256","nodeType":"ElementaryTypeName","src":"1767:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":130,"nodeType":"Block","src":"1811:39:1","statements":[{"expression":{"id":128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":126,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"1821:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":127,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"1831:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1821:22:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":129,"nodeType":"ExpressionStatement","src":"1821:22:1"}]},"id":131,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":124,"nodeType":"ParameterList","parameters":[],"src":"1808:2:1"},"returnParameters":{"id":125,"nodeType":"ParameterList","parameters":[],"src":"1811:0:1"},"scope":177,"src":"1797:53:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":141,"nodeType":"Block","src":"2251:79:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":134,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":157,"src":"2261:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2261:21:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":136,"nodeType":"ExpressionStatement","src":"2261:21:1"},{"id":137,"nodeType":"PlaceholderStatement","src":"2292:1:1"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":138,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":165,"src":"2303:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2303:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":140,"nodeType":"ExpressionStatement","src":"2303:20:1"}]},"documentation":{"id":132,"nodeType":"StructuredDocumentation","src":"1856:366:1","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":142,"name":"nonReentrant","nameLocation":"2236:12:1","nodeType":"ModifierDefinition","parameters":{"id":133,"nodeType":"ParameterList","parameters":[],"src":"2248:2:1"},"src":"2227:103:1","virtual":false,"visibility":"internal"},{"body":{"id":156,"nodeType":"Block","src":"2375:248:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":146,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"2468:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":147,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":121,"src":"2479:8:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2468:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","id":149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2489:33:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""},"value":"ReentrancyGuard: reentrant call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""}],"id":145,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2460:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2460:63:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":151,"nodeType":"ExpressionStatement","src":"2460:63:1"},{"expression":{"id":154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":152,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"2598:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":153,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":121,"src":"2608:8:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2598:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":155,"nodeType":"ExpressionStatement","src":"2598:18:1"}]},"id":157,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2345:19:1","nodeType":"FunctionDefinition","parameters":{"id":143,"nodeType":"ParameterList","parameters":[],"src":"2364:2:1"},"returnParameters":{"id":144,"nodeType":"ParameterList","parameters":[],"src":"2375:0:1"},"scope":177,"src":"2336:287:1","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":164,"nodeType":"Block","src":"2667:171:1","statements":[{"expression":{"id":162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":160,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"2809:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":161,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"2819:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2809:22:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":163,"nodeType":"ExpressionStatement","src":"2809:22:1"}]},"id":165,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2638:18:1","nodeType":"FunctionDefinition","parameters":{"id":158,"nodeType":"ParameterList","parameters":[],"src":"2656:2:1"},"returnParameters":{"id":159,"nodeType":"ParameterList","parameters":[],"src":"2667:0:1"},"scope":177,"src":"2629:209:1","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":175,"nodeType":"Block","src":"3081:43:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":171,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"3098:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":172,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":121,"src":"3109:8:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3098:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":170,"id":174,"nodeType":"Return","src":"3091:26:1"}]},"documentation":{"id":166,"nodeType":"StructuredDocumentation","src":"2844:168:1","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":176,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3026:23:1","nodeType":"FunctionDefinition","parameters":{"id":167,"nodeType":"ParameterList","parameters":[],"src":"3049:2:1"},"returnParameters":{"id":170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":169,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":176,"src":"3075:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":168,"name":"bool","nodeType":"ElementaryTypeName","src":"3075:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3074:6:1"},"scope":177,"src":"3017:107:1","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":178,"src":"888:2238:1","usedErrors":[]}],"src":"112:3015:1"},"id":1},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[1631],"ERC20":[764],"IERC20":[842],"IERC20Metadata":[867]},"id":765,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":179,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:2"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":180,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":765,"sourceUnit":843,"src":"130:22:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":181,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":765,"sourceUnit":868,"src":"153:41:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":182,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":765,"sourceUnit":1632,"src":"195:33:2","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":184,"name":"Context","nameLocations":["1550:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":1631,"src":"1550:7:2"},"id":185,"nodeType":"InheritanceSpecifier","src":"1550:7:2"},{"baseName":{"id":186,"name":"IERC20","nameLocations":["1559:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":842,"src":"1559:6:2"},"id":187,"nodeType":"InheritanceSpecifier","src":"1559:6:2"},{"baseName":{"id":188,"name":"IERC20Metadata","nameLocations":["1567:14:2"],"nodeType":"IdentifierPath","referencedDeclaration":867,"src":"1567:14:2"},"id":189,"nodeType":"InheritanceSpecifier","src":"1567:14:2"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":183,"nodeType":"StructuredDocumentation","src":"230:1301:2","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."},"fullyImplemented":true,"id":764,"linearizedBaseContracts":[764,867,842,1631],"name":"ERC20","nameLocation":"1541:5:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":193,"mutability":"mutable","name":"_balances","nameLocation":"1624:9:2","nodeType":"VariableDeclaration","scope":764,"src":"1588:45:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":192,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":190,"name":"address","nodeType":"ElementaryTypeName","src":"1596:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1588:27:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":191,"name":"uint256","nodeType":"ElementaryTypeName","src":"1607:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":199,"mutability":"mutable","name":"_allowances","nameLocation":"1696:11:2","nodeType":"VariableDeclaration","scope":764,"src":"1640:67:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":198,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":194,"name":"address","nodeType":"ElementaryTypeName","src":"1648:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1640:47:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":197,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":195,"name":"address","nodeType":"ElementaryTypeName","src":"1667:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1659:27:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":196,"name":"uint256","nodeType":"ElementaryTypeName","src":"1678:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":201,"mutability":"mutable","name":"_totalSupply","nameLocation":"1730:12:2","nodeType":"VariableDeclaration","scope":764,"src":"1714:28:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":200,"name":"uint256","nodeType":"ElementaryTypeName","src":"1714:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":203,"mutability":"mutable","name":"_name","nameLocation":"1764:5:2","nodeType":"VariableDeclaration","scope":764,"src":"1749:20:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":202,"name":"string","nodeType":"ElementaryTypeName","src":"1749:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":205,"mutability":"mutable","name":"_symbol","nameLocation":"1790:7:2","nodeType":"VariableDeclaration","scope":764,"src":"1775:22:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":204,"name":"string","nodeType":"ElementaryTypeName","src":"1775:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":221,"nodeType":"Block","src":"2036:57:2","statements":[{"expression":{"id":215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":213,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":203,"src":"2046:5:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":214,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":208,"src":"2054:5:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2046:13:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":216,"nodeType":"ExpressionStatement","src":"2046:13:2"},{"expression":{"id":219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":217,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"2069:7:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":218,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":210,"src":"2079:7:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2069:17:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":220,"nodeType":"ExpressionStatement","src":"2069:17:2"}]},"documentation":{"id":206,"nodeType":"StructuredDocumentation","src":"1804:171:2","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":222,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":208,"mutability":"mutable","name":"name_","nameLocation":"2006:5:2","nodeType":"VariableDeclaration","scope":222,"src":"1992:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":207,"name":"string","nodeType":"ElementaryTypeName","src":"1992:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":210,"mutability":"mutable","name":"symbol_","nameLocation":"2027:7:2","nodeType":"VariableDeclaration","scope":222,"src":"2013:21:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":209,"name":"string","nodeType":"ElementaryTypeName","src":"2013:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1991:44:2"},"returnParameters":{"id":212,"nodeType":"ParameterList","parameters":[],"src":"2036:0:2"},"scope":764,"src":"1980:113:2","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[854],"body":{"id":231,"nodeType":"Block","src":"2227:29:2","statements":[{"expression":{"id":229,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":203,"src":"2244:5:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":228,"id":230,"nodeType":"Return","src":"2237:12:2"}]},"documentation":{"id":223,"nodeType":"StructuredDocumentation","src":"2099:54:2","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":232,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2167:4:2","nodeType":"FunctionDefinition","overrides":{"id":225,"nodeType":"OverrideSpecifier","overrides":[],"src":"2194:8:2"},"parameters":{"id":224,"nodeType":"ParameterList","parameters":[],"src":"2171:2:2"},"returnParameters":{"id":228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":227,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":232,"src":"2212:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":226,"name":"string","nodeType":"ElementaryTypeName","src":"2212:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2211:15:2"},"scope":764,"src":"2158:98:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[860],"body":{"id":241,"nodeType":"Block","src":"2440:31:2","statements":[{"expression":{"id":239,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"2457:7:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":238,"id":240,"nodeType":"Return","src":"2450:14:2"}]},"documentation":{"id":233,"nodeType":"StructuredDocumentation","src":"2262:102:2","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":242,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2378:6:2","nodeType":"FunctionDefinition","overrides":{"id":235,"nodeType":"OverrideSpecifier","overrides":[],"src":"2407:8:2"},"parameters":{"id":234,"nodeType":"ParameterList","parameters":[],"src":"2384:2:2"},"returnParameters":{"id":238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":237,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":242,"src":"2425:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":236,"name":"string","nodeType":"ElementaryTypeName","src":"2425:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2424:15:2"},"scope":764,"src":"2369:102:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[866],"body":{"id":251,"nodeType":"Block","src":"3169:26:2","statements":[{"expression":{"hexValue":"3138","id":249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3186:2:2","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":248,"id":250,"nodeType":"Return","src":"3179:9:2"}]},"documentation":{"id":243,"nodeType":"StructuredDocumentation","src":"2477:622:2","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":252,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3113:8:2","nodeType":"FunctionDefinition","overrides":{"id":245,"nodeType":"OverrideSpecifier","overrides":[],"src":"3144:8:2"},"parameters":{"id":244,"nodeType":"ParameterList","parameters":[],"src":"3121:2:2"},"returnParameters":{"id":248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":247,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":252,"src":"3162:5:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":246,"name":"uint8","nodeType":"ElementaryTypeName","src":"3162:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3161:7:2"},"scope":764,"src":"3104:91:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[791],"body":{"id":261,"nodeType":"Block","src":"3325:36:2","statements":[{"expression":{"id":259,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":201,"src":"3342:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":258,"id":260,"nodeType":"Return","src":"3335:19:2"}]},"documentation":{"id":253,"nodeType":"StructuredDocumentation","src":"3201:49:2","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":262,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3264:11:2","nodeType":"FunctionDefinition","overrides":{"id":255,"nodeType":"OverrideSpecifier","overrides":[],"src":"3298:8:2"},"parameters":{"id":254,"nodeType":"ParameterList","parameters":[],"src":"3275:2:2"},"returnParameters":{"id":258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":257,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":262,"src":"3316:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":256,"name":"uint256","nodeType":"ElementaryTypeName","src":"3316:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3315:9:2"},"scope":764,"src":"3255:106:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[799],"body":{"id":275,"nodeType":"Block","src":"3502:42:2","statements":[{"expression":{"baseExpression":{"id":271,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"3519:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":273,"indexExpression":{"id":272,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":265,"src":"3529:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3519:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":270,"id":274,"nodeType":"Return","src":"3512:25:2"}]},"documentation":{"id":263,"nodeType":"StructuredDocumentation","src":"3367:47:2","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":276,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3428:9:2","nodeType":"FunctionDefinition","overrides":{"id":267,"nodeType":"OverrideSpecifier","overrides":[],"src":"3475:8:2"},"parameters":{"id":266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":265,"mutability":"mutable","name":"account","nameLocation":"3446:7:2","nodeType":"VariableDeclaration","scope":276,"src":"3438:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":264,"name":"address","nodeType":"ElementaryTypeName","src":"3438:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3437:17:2"},"returnParameters":{"id":270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":269,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":276,"src":"3493:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":268,"name":"uint256","nodeType":"ElementaryTypeName","src":"3493:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3492:9:2"},"scope":764,"src":"3419:125:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[809],"body":{"id":300,"nodeType":"Block","src":"3825:104:2","statements":[{"assignments":[288],"declarations":[{"constant":false,"id":288,"mutability":"mutable","name":"owner","nameLocation":"3843:5:2","nodeType":"VariableDeclaration","scope":300,"src":"3835:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":287,"name":"address","nodeType":"ElementaryTypeName","src":"3835:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":291,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":289,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"3851:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3851:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3835:28:2"},{"expression":{"arguments":[{"id":293,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"3883:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":294,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":279,"src":"3890:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":295,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"3894:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":292,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":524,"src":"3873:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3873:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":297,"nodeType":"ExpressionStatement","src":"3873:28:2"},{"expression":{"hexValue":"74727565","id":298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3918:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":286,"id":299,"nodeType":"Return","src":"3911:11:2"}]},"documentation":{"id":277,"nodeType":"StructuredDocumentation","src":"3550:185:2","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."},"functionSelector":"a9059cbb","id":301,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3749:8:2","nodeType":"FunctionDefinition","overrides":{"id":283,"nodeType":"OverrideSpecifier","overrides":[],"src":"3801:8:2"},"parameters":{"id":282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":279,"mutability":"mutable","name":"to","nameLocation":"3766:2:2","nodeType":"VariableDeclaration","scope":301,"src":"3758:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":278,"name":"address","nodeType":"ElementaryTypeName","src":"3758:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":281,"mutability":"mutable","name":"amount","nameLocation":"3778:6:2","nodeType":"VariableDeclaration","scope":301,"src":"3770:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":280,"name":"uint256","nodeType":"ElementaryTypeName","src":"3770:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3757:28:2"},"returnParameters":{"id":286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":285,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":301,"src":"3819:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":284,"name":"bool","nodeType":"ElementaryTypeName","src":"3819:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3818:6:2"},"scope":764,"src":"3740:189:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[819],"body":{"id":318,"nodeType":"Block","src":"4085:51:2","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":312,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":199,"src":"4102:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":314,"indexExpression":{"id":313,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":304,"src":"4114:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4102:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":316,"indexExpression":{"id":315,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"4121:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4102:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":311,"id":317,"nodeType":"Return","src":"4095:34:2"}]},"documentation":{"id":302,"nodeType":"StructuredDocumentation","src":"3935:47:2","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":319,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3996:9:2","nodeType":"FunctionDefinition","overrides":{"id":308,"nodeType":"OverrideSpecifier","overrides":[],"src":"4058:8:2"},"parameters":{"id":307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":304,"mutability":"mutable","name":"owner","nameLocation":"4014:5:2","nodeType":"VariableDeclaration","scope":319,"src":"4006:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":303,"name":"address","nodeType":"ElementaryTypeName","src":"4006:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":306,"mutability":"mutable","name":"spender","nameLocation":"4029:7:2","nodeType":"VariableDeclaration","scope":319,"src":"4021:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":305,"name":"address","nodeType":"ElementaryTypeName","src":"4021:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4005:32:2"},"returnParameters":{"id":311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":310,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":319,"src":"4076:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":309,"name":"uint256","nodeType":"ElementaryTypeName","src":"4076:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4075:9:2"},"scope":764,"src":"3987:149:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[829],"body":{"id":343,"nodeType":"Block","src":"4533:108:2","statements":[{"assignments":[331],"declarations":[{"constant":false,"id":331,"mutability":"mutable","name":"owner","nameLocation":"4551:5:2","nodeType":"VariableDeclaration","scope":343,"src":"4543:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":330,"name":"address","nodeType":"ElementaryTypeName","src":"4543:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":334,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":332,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"4559:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4559:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4543:28:2"},{"expression":{"arguments":[{"id":336,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"4590:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":337,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":322,"src":"4597:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":338,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"4606:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":335,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":698,"src":"4581:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4581:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":340,"nodeType":"ExpressionStatement","src":"4581:32:2"},{"expression":{"hexValue":"74727565","id":341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4630:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":329,"id":342,"nodeType":"Return","src":"4623:11:2"}]},"documentation":{"id":320,"nodeType":"StructuredDocumentation","src":"4142:297:2","text":" @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":344,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4453:7:2","nodeType":"FunctionDefinition","overrides":{"id":326,"nodeType":"OverrideSpecifier","overrides":[],"src":"4509:8:2"},"parameters":{"id":325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":322,"mutability":"mutable","name":"spender","nameLocation":"4469:7:2","nodeType":"VariableDeclaration","scope":344,"src":"4461:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":321,"name":"address","nodeType":"ElementaryTypeName","src":"4461:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":324,"mutability":"mutable","name":"amount","nameLocation":"4486:6:2","nodeType":"VariableDeclaration","scope":344,"src":"4478:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":323,"name":"uint256","nodeType":"ElementaryTypeName","src":"4478:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4460:33:2"},"returnParameters":{"id":329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":328,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":344,"src":"4527:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":327,"name":"bool","nodeType":"ElementaryTypeName","src":"4527:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4526:6:2"},"scope":764,"src":"4444:197:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[841],"body":{"id":376,"nodeType":"Block","src":"5306:153:2","statements":[{"assignments":[358],"declarations":[{"constant":false,"id":358,"mutability":"mutable","name":"spender","nameLocation":"5324:7:2","nodeType":"VariableDeclaration","scope":376,"src":"5316:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":357,"name":"address","nodeType":"ElementaryTypeName","src":"5316:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":361,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":359,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"5334:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5334:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5316:30:2"},{"expression":{"arguments":[{"id":363,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":347,"src":"5372:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":364,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":358,"src":"5378:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":365,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"5387:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":362,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"5356:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5356:38:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":367,"nodeType":"ExpressionStatement","src":"5356:38:2"},{"expression":{"arguments":[{"id":369,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":347,"src":"5414:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":370,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"5420:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":371,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"5424:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":368,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":524,"src":"5404:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5404:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":373,"nodeType":"ExpressionStatement","src":"5404:27:2"},{"expression":{"hexValue":"74727565","id":374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5448:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":356,"id":375,"nodeType":"Return","src":"5441:11:2"}]},"documentation":{"id":345,"nodeType":"StructuredDocumentation","src":"4647:551:2","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."},"functionSelector":"23b872dd","id":377,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5212:12:2","nodeType":"FunctionDefinition","overrides":{"id":353,"nodeType":"OverrideSpecifier","overrides":[],"src":"5282:8:2"},"parameters":{"id":352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":347,"mutability":"mutable","name":"from","nameLocation":"5233:4:2","nodeType":"VariableDeclaration","scope":377,"src":"5225:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":346,"name":"address","nodeType":"ElementaryTypeName","src":"5225:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":349,"mutability":"mutable","name":"to","nameLocation":"5247:2:2","nodeType":"VariableDeclaration","scope":377,"src":"5239:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":348,"name":"address","nodeType":"ElementaryTypeName","src":"5239:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":351,"mutability":"mutable","name":"amount","nameLocation":"5259:6:2","nodeType":"VariableDeclaration","scope":377,"src":"5251:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":350,"name":"uint256","nodeType":"ElementaryTypeName","src":"5251:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5224:42:2"},"returnParameters":{"id":356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":355,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":377,"src":"5300:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":354,"name":"bool","nodeType":"ElementaryTypeName","src":"5300:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5299:6:2"},"scope":764,"src":"5203:256:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":405,"nodeType":"Block","src":"5948:140:2","statements":[{"assignments":[388],"declarations":[{"constant":false,"id":388,"mutability":"mutable","name":"owner","nameLocation":"5966:5:2","nodeType":"VariableDeclaration","scope":405,"src":"5958:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":387,"name":"address","nodeType":"ElementaryTypeName","src":"5958:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":391,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":389,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"5974:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5974:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5958:28:2"},{"expression":{"arguments":[{"id":393,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"6005:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":394,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":380,"src":"6012:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":396,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"6031:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":397,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":380,"src":"6038:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":395,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":319,"src":"6021:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6021:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":399,"name":"addedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":382,"src":"6049:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6021:38:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":392,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":698,"src":"5996:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5996:64:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":402,"nodeType":"ExpressionStatement","src":"5996:64:2"},{"expression":{"hexValue":"74727565","id":403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6077:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":386,"id":404,"nodeType":"Return","src":"6070:11:2"}]},"documentation":{"id":378,"nodeType":"StructuredDocumentation","src":"5465:384:2","text":" @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"39509351","id":406,"implemented":true,"kind":"function","modifiers":[],"name":"increaseAllowance","nameLocation":"5863:17:2","nodeType":"FunctionDefinition","parameters":{"id":383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":380,"mutability":"mutable","name":"spender","nameLocation":"5889:7:2","nodeType":"VariableDeclaration","scope":406,"src":"5881:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":379,"name":"address","nodeType":"ElementaryTypeName","src":"5881:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":382,"mutability":"mutable","name":"addedValue","nameLocation":"5906:10:2","nodeType":"VariableDeclaration","scope":406,"src":"5898:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":381,"name":"uint256","nodeType":"ElementaryTypeName","src":"5898:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5880:37:2"},"returnParameters":{"id":386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":385,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":406,"src":"5942:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":384,"name":"bool","nodeType":"ElementaryTypeName","src":"5942:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5941:6:2"},"scope":764,"src":"5854:234:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":446,"nodeType":"Block","src":"6674:328:2","statements":[{"assignments":[417],"declarations":[{"constant":false,"id":417,"mutability":"mutable","name":"owner","nameLocation":"6692:5:2","nodeType":"VariableDeclaration","scope":446,"src":"6684:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":416,"name":"address","nodeType":"ElementaryTypeName","src":"6684:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":420,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":418,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"6700:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6700:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6684:28:2"},{"assignments":[422],"declarations":[{"constant":false,"id":422,"mutability":"mutable","name":"currentAllowance","nameLocation":"6730:16:2","nodeType":"VariableDeclaration","scope":446,"src":"6722:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":421,"name":"uint256","nodeType":"ElementaryTypeName","src":"6722:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":427,"initialValue":{"arguments":[{"id":424,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":417,"src":"6759:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":425,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"6766:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":423,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":319,"src":"6749:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6749:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6722:52:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":429,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":422,"src":"6792:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":430,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"6812:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6792:35:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6829:39:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""},"value":"ERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""}],"id":428,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6784:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6784:85:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":434,"nodeType":"ExpressionStatement","src":"6784:85:2"},{"id":443,"nodeType":"UncheckedBlock","src":"6879:95:2","statements":[{"expression":{"arguments":[{"id":436,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":417,"src":"6912:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":437,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"6919:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":438,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":422,"src":"6928:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":439,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"6947:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6928:34:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":435,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":698,"src":"6903:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6903:60:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":442,"nodeType":"ExpressionStatement","src":"6903:60:2"}]},{"expression":{"hexValue":"74727565","id":444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6991:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":415,"id":445,"nodeType":"Return","src":"6984:11:2"}]},"documentation":{"id":407,"nodeType":"StructuredDocumentation","src":"6094:476:2","text":" @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."},"functionSelector":"a457c2d7","id":447,"implemented":true,"kind":"function","modifiers":[],"name":"decreaseAllowance","nameLocation":"6584:17:2","nodeType":"FunctionDefinition","parameters":{"id":412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":409,"mutability":"mutable","name":"spender","nameLocation":"6610:7:2","nodeType":"VariableDeclaration","scope":447,"src":"6602:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":408,"name":"address","nodeType":"ElementaryTypeName","src":"6602:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":411,"mutability":"mutable","name":"subtractedValue","nameLocation":"6627:15:2","nodeType":"VariableDeclaration","scope":447,"src":"6619:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":410,"name":"uint256","nodeType":"ElementaryTypeName","src":"6619:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6601:42:2"},"returnParameters":{"id":415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":414,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":447,"src":"6668:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":413,"name":"bool","nodeType":"ElementaryTypeName","src":"6668:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6667:6:2"},"scope":764,"src":"6575:427:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":523,"nodeType":"Block","src":"7534:710:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":458,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"7552:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7568:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":460,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7560:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":459,"name":"address","nodeType":"ElementaryTypeName","src":"7560:7:2","typeDescriptions":{}}},"id":462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7560:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7552:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373","id":464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7572:39:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""},"value":"ERC20: transfer from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""}],"id":457,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7544:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7544:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":466,"nodeType":"ExpressionStatement","src":"7544:68:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":468,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":452,"src":"7630:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7644:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":470,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7636:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":469,"name":"address","nodeType":"ElementaryTypeName","src":"7636:7:2","typeDescriptions":{}}},"id":472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7636:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7630:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472657373","id":474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7648:37:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""},"value":"ERC20: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""}],"id":467,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7622:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7622:64:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":476,"nodeType":"ExpressionStatement","src":"7622:64:2"},{"expression":{"arguments":[{"id":478,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"7718:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":479,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":452,"src":"7724:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":480,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"7728:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":477,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"7697:20:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7697:38:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":482,"nodeType":"ExpressionStatement","src":"7697:38:2"},{"assignments":[484],"declarations":[{"constant":false,"id":484,"mutability":"mutable","name":"fromBalance","nameLocation":"7754:11:2","nodeType":"VariableDeclaration","scope":523,"src":"7746:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":483,"name":"uint256","nodeType":"ElementaryTypeName","src":"7746:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":488,"initialValue":{"baseExpression":{"id":485,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"7768:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":487,"indexExpression":{"id":486,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"7778:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7768:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7746:37:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":490,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":484,"src":"7801:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":491,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"7816:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7801:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365","id":493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7824:40:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""},"value":"ERC20: transfer amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""}],"id":489,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7793:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7793:72:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":495,"nodeType":"ExpressionStatement","src":"7793:72:2"},{"id":510,"nodeType":"UncheckedBlock","src":"7875:273:2","statements":[{"expression":{"id":502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":496,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"7899:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":498,"indexExpression":{"id":497,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"7909:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7899:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":499,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":484,"src":"7917:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":500,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"7931:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7917:20:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7899:38:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":503,"nodeType":"ExpressionStatement","src":"7899:38:2"},{"expression":{"id":508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":504,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"8114:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":506,"indexExpression":{"id":505,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":452,"src":"8124:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8114:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":507,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"8131:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8114:23:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":509,"nodeType":"ExpressionStatement","src":"8114:23:2"}]},{"eventCall":{"arguments":[{"id":512,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"8172:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":513,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":452,"src":"8178:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":514,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"8182:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":511,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":776,"src":"8163:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8163:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":516,"nodeType":"EmitStatement","src":"8158:31:2"},{"expression":{"arguments":[{"id":518,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"8220:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":519,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":452,"src":"8226:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":520,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"8230:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":517,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"8200:19:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8200:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":522,"nodeType":"ExpressionStatement","src":"8200:37:2"}]},"documentation":{"id":448,"nodeType":"StructuredDocumentation","src":"7008:443:2","text":" @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."},"id":524,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"7465:9:2","nodeType":"FunctionDefinition","parameters":{"id":455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":450,"mutability":"mutable","name":"from","nameLocation":"7483:4:2","nodeType":"VariableDeclaration","scope":524,"src":"7475:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":449,"name":"address","nodeType":"ElementaryTypeName","src":"7475:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":452,"mutability":"mutable","name":"to","nameLocation":"7497:2:2","nodeType":"VariableDeclaration","scope":524,"src":"7489:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":451,"name":"address","nodeType":"ElementaryTypeName","src":"7489:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":454,"mutability":"mutable","name":"amount","nameLocation":"7509:6:2","nodeType":"VariableDeclaration","scope":524,"src":"7501:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":453,"name":"uint256","nodeType":"ElementaryTypeName","src":"7501:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7474:42:2"},"returnParameters":{"id":456,"nodeType":"ParameterList","parameters":[],"src":"7534:0:2"},"scope":764,"src":"7456:788:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":580,"nodeType":"Block","src":"8585:470:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":533,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"8603:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8622:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":535,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8614:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":534,"name":"address","nodeType":"ElementaryTypeName","src":"8614:7:2","typeDescriptions":{}}},"id":537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8614:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8603:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","id":539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8626:33:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""},"value":"ERC20: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""}],"id":532,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8595:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8595:65:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":541,"nodeType":"ExpressionStatement","src":"8595:65:2"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8700:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":544,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8692:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":543,"name":"address","nodeType":"ElementaryTypeName","src":"8692:7:2","typeDescriptions":{}}},"id":546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8692:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":547,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"8704:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":548,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"8713:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":542,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"8671:20:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8671:49:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":550,"nodeType":"ExpressionStatement","src":"8671:49:2"},{"expression":{"id":553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":551,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":201,"src":"8731:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":552,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"8747:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8731:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":554,"nodeType":"ExpressionStatement","src":"8731:22:2"},{"id":561,"nodeType":"UncheckedBlock","src":"8763:175:2","statements":[{"expression":{"id":559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":555,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"8899:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":557,"indexExpression":{"id":556,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"8909:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8899:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":558,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"8921:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8899:28:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":560,"nodeType":"ExpressionStatement","src":"8899:28:2"}]},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8969:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8961:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":563,"name":"address","nodeType":"ElementaryTypeName","src":"8961:7:2","typeDescriptions":{}}},"id":566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8961:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":567,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"8973:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":568,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"8982:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":562,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":776,"src":"8952:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":570,"nodeType":"EmitStatement","src":"8947:42:2"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9028:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":573,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9020:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":572,"name":"address","nodeType":"ElementaryTypeName","src":"9020:7:2","typeDescriptions":{}}},"id":575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9020:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":576,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"9032:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":577,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"9041:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":571,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"9000:19:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9000:48:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":579,"nodeType":"ExpressionStatement","src":"9000:48:2"}]},"documentation":{"id":525,"nodeType":"StructuredDocumentation","src":"8250:265:2","text":"@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."},"id":581,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"8529:5:2","nodeType":"FunctionDefinition","parameters":{"id":530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":527,"mutability":"mutable","name":"account","nameLocation":"8543:7:2","nodeType":"VariableDeclaration","scope":581,"src":"8535:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":526,"name":"address","nodeType":"ElementaryTypeName","src":"8535:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":529,"mutability":"mutable","name":"amount","nameLocation":"8560:6:2","nodeType":"VariableDeclaration","scope":581,"src":"8552:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":528,"name":"uint256","nodeType":"ElementaryTypeName","src":"8552:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8534:33:2"},"returnParameters":{"id":531,"nodeType":"ParameterList","parameters":[],"src":"8585:0:2"},"scope":764,"src":"8520:535:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":652,"nodeType":"Block","src":"9440:594:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":590,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"9458:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9477:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":592,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9469:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":591,"name":"address","nodeType":"ElementaryTypeName","src":"9469:7:2","typeDescriptions":{}}},"id":594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9469:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9458:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f2061646472657373","id":596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9481:35:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""},"value":"ERC20: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""}],"id":589,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9450:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9450:67:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":598,"nodeType":"ExpressionStatement","src":"9450:67:2"},{"expression":{"arguments":[{"id":600,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"9549:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9566:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9558:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":601,"name":"address","nodeType":"ElementaryTypeName","src":"9558:7:2","typeDescriptions":{}}},"id":604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9558:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":605,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":586,"src":"9570:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":599,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"9528:20:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9528:49:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":607,"nodeType":"ExpressionStatement","src":"9528:49:2"},{"assignments":[609],"declarations":[{"constant":false,"id":609,"mutability":"mutable","name":"accountBalance","nameLocation":"9596:14:2","nodeType":"VariableDeclaration","scope":652,"src":"9588:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":608,"name":"uint256","nodeType":"ElementaryTypeName","src":"9588:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":613,"initialValue":{"baseExpression":{"id":610,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"9613:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":612,"indexExpression":{"id":611,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"9623:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9613:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9588:43:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":615,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"9649:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":616,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":586,"src":"9667:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9649:24:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365","id":618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9675:36:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""},"value":"ERC20: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""}],"id":614,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9641:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9641:71:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":620,"nodeType":"ExpressionStatement","src":"9641:71:2"},{"id":633,"nodeType":"UncheckedBlock","src":"9722:194:2","statements":[{"expression":{"id":627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":621,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"9746:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":623,"indexExpression":{"id":622,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"9756:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9746:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":624,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"9767:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":625,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":586,"src":"9784:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9767:23:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9746:44:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":628,"nodeType":"ExpressionStatement","src":"9746:44:2"},{"expression":{"id":631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":629,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":201,"src":"9883:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":630,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":586,"src":"9899:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9883:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":632,"nodeType":"ExpressionStatement","src":"9883:22:2"}]},{"eventCall":{"arguments":[{"id":635,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"9940:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9957:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":637,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9949:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":636,"name":"address","nodeType":"ElementaryTypeName","src":"9949:7:2","typeDescriptions":{}}},"id":639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9949:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":640,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":586,"src":"9961:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":634,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":776,"src":"9931:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9931:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":642,"nodeType":"EmitStatement","src":"9926:42:2"},{"expression":{"arguments":[{"id":644,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"9999:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10016:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":646,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10008:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":645,"name":"address","nodeType":"ElementaryTypeName","src":"10008:7:2","typeDescriptions":{}}},"id":648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10008:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":649,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":586,"src":"10020:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":643,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"9979:19:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9979:48:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":651,"nodeType":"ExpressionStatement","src":"9979:48:2"}]},"documentation":{"id":582,"nodeType":"StructuredDocumentation","src":"9061:309:2","text":" @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."},"id":653,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"9384:5:2","nodeType":"FunctionDefinition","parameters":{"id":587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":584,"mutability":"mutable","name":"account","nameLocation":"9398:7:2","nodeType":"VariableDeclaration","scope":653,"src":"9390:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":583,"name":"address","nodeType":"ElementaryTypeName","src":"9390:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":586,"mutability":"mutable","name":"amount","nameLocation":"9415:6:2","nodeType":"VariableDeclaration","scope":653,"src":"9407:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":585,"name":"uint256","nodeType":"ElementaryTypeName","src":"9407:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9389:33:2"},"returnParameters":{"id":588,"nodeType":"ParameterList","parameters":[],"src":"9440:0:2"},"scope":764,"src":"9375:659:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":697,"nodeType":"Block","src":"10540:257:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":664,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":656,"src":"10558:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10575:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":666,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10567:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":665,"name":"address","nodeType":"ElementaryTypeName","src":"10567:7:2","typeDescriptions":{}}},"id":668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10567:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10558:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373","id":670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10579:38:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""},"value":"ERC20: approve from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""}],"id":663,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10550:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10550:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":672,"nodeType":"ExpressionStatement","src":"10550:68:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":674,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"10636:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10655:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":676,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10647:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":675,"name":"address","nodeType":"ElementaryTypeName","src":"10647:7:2","typeDescriptions":{}}},"id":678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10647:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10636:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f2061646472657373","id":680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10659:36:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""},"value":"ERC20: approve to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""}],"id":673,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10628:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10628:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":682,"nodeType":"ExpressionStatement","src":"10628:68:2"},{"expression":{"id":689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":683,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":199,"src":"10707:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":686,"indexExpression":{"id":684,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":656,"src":"10719:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10707:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":687,"indexExpression":{"id":685,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"10726:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10707:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":688,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":660,"src":"10737:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10707:36:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":690,"nodeType":"ExpressionStatement","src":"10707:36:2"},{"eventCall":{"arguments":[{"id":692,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":656,"src":"10767:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":693,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"10774:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":694,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":660,"src":"10783:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":691,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":785,"src":"10758:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10758:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":696,"nodeType":"EmitStatement","src":"10753:37:2"}]},"documentation":{"id":654,"nodeType":"StructuredDocumentation","src":"10040:412:2","text":" @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."},"id":698,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"10466:8:2","nodeType":"FunctionDefinition","parameters":{"id":661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":656,"mutability":"mutable","name":"owner","nameLocation":"10483:5:2","nodeType":"VariableDeclaration","scope":698,"src":"10475:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":655,"name":"address","nodeType":"ElementaryTypeName","src":"10475:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":658,"mutability":"mutable","name":"spender","nameLocation":"10498:7:2","nodeType":"VariableDeclaration","scope":698,"src":"10490:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":657,"name":"address","nodeType":"ElementaryTypeName","src":"10490:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":660,"mutability":"mutable","name":"amount","nameLocation":"10515:6:2","nodeType":"VariableDeclaration","scope":698,"src":"10507:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":659,"name":"uint256","nodeType":"ElementaryTypeName","src":"10507:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10474:48:2"},"returnParameters":{"id":662,"nodeType":"ParameterList","parameters":[],"src":"10540:0:2"},"scope":764,"src":"10457:340:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":740,"nodeType":"Block","src":"11168:321:2","statements":[{"assignments":[709],"declarations":[{"constant":false,"id":709,"mutability":"mutable","name":"currentAllowance","nameLocation":"11186:16:2","nodeType":"VariableDeclaration","scope":740,"src":"11178:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":708,"name":"uint256","nodeType":"ElementaryTypeName","src":"11178:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":714,"initialValue":{"arguments":[{"id":711,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"11215:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":712,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":703,"src":"11222:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":710,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":319,"src":"11205:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11205:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11178:52:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":715,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":709,"src":"11244:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":718,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11269:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":717,"name":"uint256","nodeType":"ElementaryTypeName","src":"11269:7:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":716,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11264:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11264:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":720,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11278:3:2","memberName":"max","nodeType":"MemberAccess","src":"11264:17:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11244:37:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":739,"nodeType":"IfStatement","src":"11240:243:2","trueBody":{"id":738,"nodeType":"Block","src":"11283:200:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":723,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":709,"src":"11305:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":724,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":705,"src":"11325:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11305:26:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","id":726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11333:31:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""},"value":"ERC20: insufficient allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""}],"id":722,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11297:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11297:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":728,"nodeType":"ExpressionStatement","src":"11297:68:2"},{"id":737,"nodeType":"UncheckedBlock","src":"11379:94:2","statements":[{"expression":{"arguments":[{"id":730,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"11416:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":731,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":703,"src":"11423:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":732,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":709,"src":"11432:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":733,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":705,"src":"11451:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11432:25:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":729,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":698,"src":"11407:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11407:51:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":736,"nodeType":"ExpressionStatement","src":"11407:51:2"}]}]}}]},"documentation":{"id":699,"nodeType":"StructuredDocumentation","src":"10803:270:2","text":" @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."},"id":741,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"11087:15:2","nodeType":"FunctionDefinition","parameters":{"id":706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":701,"mutability":"mutable","name":"owner","nameLocation":"11111:5:2","nodeType":"VariableDeclaration","scope":741,"src":"11103:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":700,"name":"address","nodeType":"ElementaryTypeName","src":"11103:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":703,"mutability":"mutable","name":"spender","nameLocation":"11126:7:2","nodeType":"VariableDeclaration","scope":741,"src":"11118:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":702,"name":"address","nodeType":"ElementaryTypeName","src":"11118:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":705,"mutability":"mutable","name":"amount","nameLocation":"11143:6:2","nodeType":"VariableDeclaration","scope":741,"src":"11135:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":704,"name":"uint256","nodeType":"ElementaryTypeName","src":"11135:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11102:48:2"},"returnParameters":{"id":707,"nodeType":"ParameterList","parameters":[],"src":"11168:0:2"},"scope":764,"src":"11078:411:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":751,"nodeType":"Block","src":"12162:2:2","statements":[]},"documentation":{"id":742,"nodeType":"StructuredDocumentation","src":"11495:573:2","text":" @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":752,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"12082:20:2","nodeType":"FunctionDefinition","parameters":{"id":749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":744,"mutability":"mutable","name":"from","nameLocation":"12111:4:2","nodeType":"VariableDeclaration","scope":752,"src":"12103:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":743,"name":"address","nodeType":"ElementaryTypeName","src":"12103:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":746,"mutability":"mutable","name":"to","nameLocation":"12125:2:2","nodeType":"VariableDeclaration","scope":752,"src":"12117:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":745,"name":"address","nodeType":"ElementaryTypeName","src":"12117:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":748,"mutability":"mutable","name":"amount","nameLocation":"12137:6:2","nodeType":"VariableDeclaration","scope":752,"src":"12129:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":747,"name":"uint256","nodeType":"ElementaryTypeName","src":"12129:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12102:42:2"},"returnParameters":{"id":750,"nodeType":"ParameterList","parameters":[],"src":"12162:0:2"},"scope":764,"src":"12073:91:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":762,"nodeType":"Block","src":"12840:2:2","statements":[]},"documentation":{"id":753,"nodeType":"StructuredDocumentation","src":"12170:577:2","text":" @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":763,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"12761:19:2","nodeType":"FunctionDefinition","parameters":{"id":760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":755,"mutability":"mutable","name":"from","nameLocation":"12789:4:2","nodeType":"VariableDeclaration","scope":763,"src":"12781:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":754,"name":"address","nodeType":"ElementaryTypeName","src":"12781:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":757,"mutability":"mutable","name":"to","nameLocation":"12803:2:2","nodeType":"VariableDeclaration","scope":763,"src":"12795:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":756,"name":"address","nodeType":"ElementaryTypeName","src":"12795:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":759,"mutability":"mutable","name":"amount","nameLocation":"12815:6:2","nodeType":"VariableDeclaration","scope":763,"src":"12807:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":758,"name":"uint256","nodeType":"ElementaryTypeName","src":"12807:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12780:42:2"},"returnParameters":{"id":761,"nodeType":"ParameterList","parameters":[],"src":"12840:0:2"},"scope":764,"src":"12752:90:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":765,"src":"1532:11312:2","usedErrors":[]}],"src":"105:12740:2"},"id":2},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[842]},"id":843,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":766,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":767,"nodeType":"StructuredDocumentation","src":"131:70:3","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":842,"linearizedBaseContracts":[842],"name":"IERC20","nameLocation":"212:6:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":768,"nodeType":"StructuredDocumentation","src":"225:158:3","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":776,"name":"Transfer","nameLocation":"394:8:3","nodeType":"EventDefinition","parameters":{"id":775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":770,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:3","nodeType":"VariableDeclaration","scope":776,"src":"403:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":769,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":772,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:3","nodeType":"VariableDeclaration","scope":776,"src":"425:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":771,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":774,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:3","nodeType":"VariableDeclaration","scope":776,"src":"445:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":773,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:3"},"src":"388:72:3"},{"anonymous":false,"documentation":{"id":777,"nodeType":"StructuredDocumentation","src":"466:148:3","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":785,"name":"Approval","nameLocation":"625:8:3","nodeType":"EventDefinition","parameters":{"id":784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":779,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:3","nodeType":"VariableDeclaration","scope":785,"src":"634:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":778,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":781,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:3","nodeType":"VariableDeclaration","scope":785,"src":"657:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":780,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":783,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:3","nodeType":"VariableDeclaration","scope":785,"src":"682:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":782,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:3"},"src":"619:78:3"},{"documentation":{"id":786,"nodeType":"StructuredDocumentation","src":"703:66:3","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":791,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:3","nodeType":"FunctionDefinition","parameters":{"id":787,"nodeType":"ParameterList","parameters":[],"src":"794:2:3"},"returnParameters":{"id":790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":789,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":791,"src":"820:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":788,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:3"},"scope":842,"src":"774:55:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":792,"nodeType":"StructuredDocumentation","src":"835:72:3","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":799,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:3","nodeType":"FunctionDefinition","parameters":{"id":795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":794,"mutability":"mutable","name":"account","nameLocation":"939:7:3","nodeType":"VariableDeclaration","scope":799,"src":"931:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":793,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:3"},"returnParameters":{"id":798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":797,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":799,"src":"971:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":796,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:3"},"scope":842,"src":"912:68:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":800,"nodeType":"StructuredDocumentation","src":"986:202:3","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":809,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:3","nodeType":"FunctionDefinition","parameters":{"id":805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":802,"mutability":"mutable","name":"to","nameLocation":"1219:2:3","nodeType":"VariableDeclaration","scope":809,"src":"1211:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":801,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":804,"mutability":"mutable","name":"amount","nameLocation":"1231:6:3","nodeType":"VariableDeclaration","scope":809,"src":"1223:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":803,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:3"},"returnParameters":{"id":808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":807,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":809,"src":"1257:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":806,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:3"},"scope":842,"src":"1193:70:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":810,"nodeType":"StructuredDocumentation","src":"1269:264:3","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":819,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:3","nodeType":"FunctionDefinition","parameters":{"id":815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":812,"mutability":"mutable","name":"owner","nameLocation":"1565:5:3","nodeType":"VariableDeclaration","scope":819,"src":"1557:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":811,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":814,"mutability":"mutable","name":"spender","nameLocation":"1580:7:3","nodeType":"VariableDeclaration","scope":819,"src":"1572:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":813,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:3"},"returnParameters":{"id":818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":817,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":819,"src":"1612:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":816,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:3"},"scope":842,"src":"1538:83:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":820,"nodeType":"StructuredDocumentation","src":"1627:642:3","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":829,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:3","nodeType":"FunctionDefinition","parameters":{"id":825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":822,"mutability":"mutable","name":"spender","nameLocation":"2299:7:3","nodeType":"VariableDeclaration","scope":829,"src":"2291:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":821,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":824,"mutability":"mutable","name":"amount","nameLocation":"2316:6:3","nodeType":"VariableDeclaration","scope":829,"src":"2308:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":823,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:3"},"returnParameters":{"id":828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":827,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":829,"src":"2342:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":826,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:3"},"scope":842,"src":"2274:74:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":830,"nodeType":"StructuredDocumentation","src":"2354:287:3","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":841,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:3","nodeType":"FunctionDefinition","parameters":{"id":837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":832,"mutability":"mutable","name":"from","nameLocation":"2676:4:3","nodeType":"VariableDeclaration","scope":841,"src":"2668:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":831,"name":"address","nodeType":"ElementaryTypeName","src":"2668:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":834,"mutability":"mutable","name":"to","nameLocation":"2690:2:3","nodeType":"VariableDeclaration","scope":841,"src":"2682:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":833,"name":"address","nodeType":"ElementaryTypeName","src":"2682:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":836,"mutability":"mutable","name":"amount","nameLocation":"2702:6:3","nodeType":"VariableDeclaration","scope":841,"src":"2694:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":835,"name":"uint256","nodeType":"ElementaryTypeName","src":"2694:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:42:3"},"returnParameters":{"id":840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":839,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":841,"src":"2728:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":838,"name":"bool","nodeType":"ElementaryTypeName","src":"2728:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2727:6:3"},"scope":842,"src":"2646:88:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":843,"src":"202:2534:3","usedErrors":[]}],"src":"106:2631:3"},"id":3},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[842],"IERC20Metadata":[867]},"id":868,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":844,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:4"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":845,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":868,"sourceUnit":843,"src":"135:23:4","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":847,"name":"IERC20","nameLocations":["305:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":842,"src":"305:6:4"},"id":848,"nodeType":"InheritanceSpecifier","src":"305:6:4"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":846,"nodeType":"StructuredDocumentation","src":"160:116:4","text":" @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"},"fullyImplemented":false,"id":867,"linearizedBaseContracts":[867,842],"name":"IERC20Metadata","nameLocation":"287:14:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":849,"nodeType":"StructuredDocumentation","src":"318:54:4","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":854,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:4","nodeType":"FunctionDefinition","parameters":{"id":850,"nodeType":"ParameterList","parameters":[],"src":"390:2:4"},"returnParameters":{"id":853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":852,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":854,"src":"416:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":851,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:4"},"scope":867,"src":"377:54:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":855,"nodeType":"StructuredDocumentation","src":"437:56:4","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":860,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:4","nodeType":"FunctionDefinition","parameters":{"id":856,"nodeType":"ParameterList","parameters":[],"src":"513:2:4"},"returnParameters":{"id":859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":858,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":860,"src":"539:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":857,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:4"},"scope":867,"src":"498:56:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":861,"nodeType":"StructuredDocumentation","src":"560:65:4","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":866,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:4","nodeType":"FunctionDefinition","parameters":{"id":862,"nodeType":"ParameterList","parameters":[],"src":"647:2:4"},"returnParameters":{"id":865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":864,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":866,"src":"673:5:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":863,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:4"},"scope":867,"src":"630:50:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":868,"src":"277:405:4","usedErrors":[]}],"src":"110:573:4"},"id":4},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[903]},"id":904,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":869,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"123:23:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":870,"nodeType":"StructuredDocumentation","src":"148:480:5","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":false,"id":903,"linearizedBaseContracts":[903],"name":"IERC20Permit","nameLocation":"639:12:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":871,"nodeType":"StructuredDocumentation","src":"658:792:5","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."},"functionSelector":"d505accf","id":888,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1464:6:5","nodeType":"FunctionDefinition","parameters":{"id":886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":873,"mutability":"mutable","name":"owner","nameLocation":"1488:5:5","nodeType":"VariableDeclaration","scope":888,"src":"1480:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":872,"name":"address","nodeType":"ElementaryTypeName","src":"1480:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":875,"mutability":"mutable","name":"spender","nameLocation":"1511:7:5","nodeType":"VariableDeclaration","scope":888,"src":"1503:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":874,"name":"address","nodeType":"ElementaryTypeName","src":"1503:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":877,"mutability":"mutable","name":"value","nameLocation":"1536:5:5","nodeType":"VariableDeclaration","scope":888,"src":"1528:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":876,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":879,"mutability":"mutable","name":"deadline","nameLocation":"1559:8:5","nodeType":"VariableDeclaration","scope":888,"src":"1551:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":878,"name":"uint256","nodeType":"ElementaryTypeName","src":"1551:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":881,"mutability":"mutable","name":"v","nameLocation":"1583:1:5","nodeType":"VariableDeclaration","scope":888,"src":"1577:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":880,"name":"uint8","nodeType":"ElementaryTypeName","src":"1577:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":883,"mutability":"mutable","name":"r","nameLocation":"1602:1:5","nodeType":"VariableDeclaration","scope":888,"src":"1594:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":882,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1594:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":885,"mutability":"mutable","name":"s","nameLocation":"1621:1:5","nodeType":"VariableDeclaration","scope":888,"src":"1613:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":884,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1613:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1470:158:5"},"returnParameters":{"id":887,"nodeType":"ParameterList","parameters":[],"src":"1637:0:5"},"scope":903,"src":"1455:183:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":889,"nodeType":"StructuredDocumentation","src":"1644:294:5","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":896,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"1952:6:5","nodeType":"FunctionDefinition","parameters":{"id":892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":891,"mutability":"mutable","name":"owner","nameLocation":"1967:5:5","nodeType":"VariableDeclaration","scope":896,"src":"1959:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":890,"name":"address","nodeType":"ElementaryTypeName","src":"1959:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1958:15:5"},"returnParameters":{"id":895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":894,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":896,"src":"1997:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":893,"name":"uint256","nodeType":"ElementaryTypeName","src":"1997:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1996:9:5"},"scope":903,"src":"1943:63:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":897,"nodeType":"StructuredDocumentation","src":"2012:128:5","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":902,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2207:16:5","nodeType":"FunctionDefinition","parameters":{"id":898,"nodeType":"ParameterList","parameters":[],"src":"2223:2:5"},"returnParameters":{"id":901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":900,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":902,"src":"2249:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":899,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2249:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2248:9:5"},"scope":903,"src":"2198:60:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":904,"src":"629:1631:5","usedErrors":[]}],"src":"123:2138:5"},"id":5},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"Address":[1609],"IERC20":[842],"IERC20Permit":[903],"SafeERC20":[1279]},"id":1280,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":905,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"115:23:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":906,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1280,"sourceUnit":843,"src":"140:23:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"../extensions/IERC20Permit.sol","id":907,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1280,"sourceUnit":904,"src":"164:40:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../../utils/Address.sol","id":908,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1280,"sourceUnit":1610,"src":"205:36:6","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":909,"nodeType":"StructuredDocumentation","src":"243:457:6","text":" @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":1279,"linearizedBaseContracts":[1279],"name":"SafeERC20","nameLocation":"709:9:6","nodeType":"ContractDefinition","nodes":[{"global":false,"id":912,"libraryName":{"id":910,"name":"Address","nameLocations":["731:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":1609,"src":"731:7:6"},"nodeType":"UsingForDirective","src":"725:26:6","typeName":{"id":911,"name":"address","nodeType":"ElementaryTypeName","src":"743:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"body":{"id":935,"nodeType":"Block","src":"1013:103:6","statements":[{"expression":{"arguments":[{"id":924,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"1043:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$842","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":927,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"1073:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$842","typeString":"contract IERC20"}},"id":928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1079:8:6","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":809,"src":"1073:14:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1088:8:6","memberName":"selector","nodeType":"MemberAccess","src":"1073:23:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":930,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":918,"src":"1098:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":931,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"1102:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":925,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1050:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":926,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1054:18:6","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1050:22:6","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1050:58:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$842","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":923,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"1023:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$842_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1023:86:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":934,"nodeType":"ExpressionStatement","src":"1023:86:6"}]},"documentation":{"id":913,"nodeType":"StructuredDocumentation","src":"757:179:6","text":" @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":936,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"950:12:6","nodeType":"FunctionDefinition","parameters":{"id":921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":916,"mutability":"mutable","name":"token","nameLocation":"970:5:6","nodeType":"VariableDeclaration","scope":936,"src":"963:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$842","typeString":"contract IERC20"},"typeName":{"id":915,"nodeType":"UserDefinedTypeName","pathNode":{"id":914,"name":"IERC20","nameLocations":["963:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":842,"src":"963:6:6"},"referencedDeclaration":842,"src":"963:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$842","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":918,"mutability":"mutable","name":"to","nameLocation":"985:2:6","nodeType":"VariableDeclaration","scope":936,"src":"977:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":917,"name":"address","nodeType":"ElementaryTypeName","src":"977:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":920,"mutability":"mutable","name":"value","nameLocation":"997:5:6","nodeType":"VariableDeclaration","scope":936,"src":"989:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":919,"name":"uint256","nodeType":"ElementaryTypeName","src":"989:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"962:41:6"},"returnParameters":{"id":922,"nodeType":"ParameterList","parameters":[],"src":"1013:0:6"},"scope":1279,"src":"941:175:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":962,"nodeType":"Block","src":"1445:113:6","statements":[{"expression":{"arguments":[{"id":950,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":940,"src":"1475:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$842","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":953,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":940,"src":"1505:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$842","typeString":"contract IERC20"}},"id":954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1511:12:6","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":841,"src":"1505:18:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1524:8:6","memberName":"selector","nodeType":"MemberAccess","src":"1505:27:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":956,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":942,"src":"1534:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":957,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":944,"src":"1540:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":958,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"1544:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":951,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1482:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":952,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1486:18:6","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1482:22:6","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1482:68:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$842","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":949,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"1455:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$842_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1455:96:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":961,"nodeType":"ExpressionStatement","src":"1455:96:6"}]},"documentation":{"id":937,"nodeType":"StructuredDocumentation","src":"1122:228:6","text":" @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."},"id":963,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1364:16:6","nodeType":"FunctionDefinition","parameters":{"id":947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":940,"mutability":"mutable","name":"token","nameLocation":"1388:5:6","nodeType":"VariableDeclaration","scope":963,"src":"1381:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$842","typeString":"contract IERC20"},"typeName":{"id":939,"nodeType":"UserDefinedTypeName","pathNode":{"id":938,"name":"IERC20","nameLocations":["1381:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":842,"src":"1381:6:6"},"referencedDeclaration":842,"src":"1381:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$842","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":942,"mutability":"mutable","name":"from","nameLocation":"1403:4:6","nodeType":"VariableDeclaration","scope":963,"src":"1395:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":941,"name":"address","nodeType":"ElementaryTypeName","src":"1395:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":944,"mutability":"mutable","name":"to","nameLocation":"1417:2:6","nodeType":"VariableDeclaration","scope":963,"src":"1409:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":943,"name":"address","nodeType":"ElementaryTypeName","src":"1409:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":946,"mutability":"mutable","name":"value","nameLocation":"1429:5:6","nodeType":"VariableDeclaration","scope":963,"src":"1421:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":945,"name":"uint256","nodeType":"ElementaryTypeName","src":"1421:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1380:55:6"},"returnParameters":{"id":948,"nodeType":"ParameterList","parameters":[],"src":"1445:0:6"},"scope":1279,"src":"1355:203:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1006,"nodeType":"Block","src":"1894:497:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":975,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"2143:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2152:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2143:10:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":978,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2142:12:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":983,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2183:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1279","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1279","typeString":"library SafeERC20"}],"id":982,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2175:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":981,"name":"address","nodeType":"ElementaryTypeName","src":"2175:7:6","typeDescriptions":{}}},"id":984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2175:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":985,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":969,"src":"2190:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":979,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"2159:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$842","typeString":"contract IERC20"}},"id":980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2165:9:6","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":819,"src":"2159:15:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2159:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2202:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2159:44:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":989,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2158:46:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2142:62:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365","id":991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2218:56:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""},"value":"SafeERC20: approve from non-zero to non-zero allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""}],"id":974,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2121:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2121:163:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":993,"nodeType":"ExpressionStatement","src":"2121:163:6"},{"expression":{"arguments":[{"id":995,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"2314:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$842","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":998,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"2344:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$842","typeString":"contract IERC20"}},"id":999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2350:7:6","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":829,"src":"2344:13:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2358:8:6","memberName":"selector","nodeType":"MemberAccess","src":"2344:22:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1001,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":969,"src":"2368:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1002,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"2377:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":996,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2321:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":997,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2325:18:6","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2321:22:6","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2321:62:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$842","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":994,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"2294:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$842_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2294:90:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1005,"nodeType":"ExpressionStatement","src":"2294:90:6"}]},"documentation":{"id":964,"nodeType":"StructuredDocumentation","src":"1564:249:6","text":" @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."},"id":1007,"implemented":true,"kind":"function","modifiers":[],"name":"safeApprove","nameLocation":"1827:11:6","nodeType":"FunctionDefinition","parameters":{"id":972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":967,"mutability":"mutable","name":"token","nameLocation":"1846:5:6","nodeType":"VariableDeclaration","scope":1007,"src":"1839:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$842","typeString":"contract IERC20"},"typeName":{"id":966,"nodeType":"UserDefinedTypeName","pathNode":{"id":965,"name":"IERC20","nameLocations":["1839:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":842,"src":"1839:6:6"},"referencedDeclaration":842,"src":"1839:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$842","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":969,"mutability":"mutable","name":"spender","nameLocation":"1861:7:6","nodeType":"VariableDeclaration","scope":1007,"src":"1853:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":968,"name":"address","nodeType":"ElementaryTypeName","src":"1853:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":971,"mutability":"mutable","name":"value","nameLocation":"1878:5:6","nodeType":"VariableDeclaration","scope":1007,"src":"1870:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":970,"name":"uint256","nodeType":"ElementaryTypeName","src":"1870:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1838:46:6"},"returnParameters":{"id":973,"nodeType":"ParameterList","parameters":[],"src":"1894:0:6"},"scope":1279,"src":"1818:573:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1043,"nodeType":"Block","src":"2668:194:6","statements":[{"assignments":[1019],"declarations":[{"constant":false,"id":1019,"mutability":"mutable","name":"oldAllowance","nameLocation":"2686:12:6","nodeType":"VariableDeclaration","scope":1043,"src":"2678:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1018,"name":"uint256","nodeType":"ElementaryTypeName","src":"2678:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1028,"initialValue":{"arguments":[{"arguments":[{"id":1024,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2725:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1279","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1279","typeString":"library SafeERC20"}],"id":1023,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2717:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1022,"name":"address","nodeType":"ElementaryTypeName","src":"2717:7:6","typeDescriptions":{}}},"id":1025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2717:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1026,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"2732:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1020,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"2701:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$842","typeString":"contract IERC20"}},"id":1021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2707:9:6","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":819,"src":"2701:15:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2701:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2678:62:6"},{"expression":{"arguments":[{"id":1030,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"2770:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$842","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":1033,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"2800:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$842","typeString":"contract IERC20"}},"id":1034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2806:7:6","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":829,"src":"2800:13:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2814:8:6","memberName":"selector","nodeType":"MemberAccess","src":"2800:22:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1036,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"2824:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1037,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"2833:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1038,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1015,"src":"2848:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2833:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1031,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2777:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1032,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2781:18:6","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2777:22:6","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2777:77:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$842","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1029,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"2750:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$842_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2750:105:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1042,"nodeType":"ExpressionStatement","src":"2750:105:6"}]},"documentation":{"id":1008,"nodeType":"StructuredDocumentation","src":"2397:180:6","text":" @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":1044,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"2591:21:6","nodeType":"FunctionDefinition","parameters":{"id":1016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1011,"mutability":"mutable","name":"token","nameLocation":"2620:5:6","nodeType":"VariableDeclaration","scope":1044,"src":"2613:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$842","typeString":"contract IERC20"},"typeName":{"id":1010,"nodeType":"UserDefinedTypeName","pathNode":{"id":1009,"name":"IERC20","nameLocations":["2613:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":842,"src":"2613:6:6"},"referencedDeclaration":842,"src":"2613:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$842","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1013,"mutability":"mutable","name":"spender","nameLocation":"2635:7:6","nodeType":"VariableDeclaration","scope":1044,"src":"2627:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1012,"name":"address","nodeType":"ElementaryTypeName","src":"2627:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1015,"mutability":"mutable","name":"value","nameLocation":"2652:5:6","nodeType":"VariableDeclaration","scope":1044,"src":"2644:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1014,"name":"uint256","nodeType":"ElementaryTypeName","src":"2644:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2612:46:6"},"returnParameters":{"id":1017,"nodeType":"ParameterList","parameters":[],"src":"2668:0:6"},"scope":1279,"src":"2582:280:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1088,"nodeType":"Block","src":"3139:321:6","statements":[{"id":1087,"nodeType":"UncheckedBlock","src":"3149:305:6","statements":[{"assignments":[1056],"declarations":[{"constant":false,"id":1056,"mutability":"mutable","name":"oldAllowance","nameLocation":"3181:12:6","nodeType":"VariableDeclaration","scope":1087,"src":"3173:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1055,"name":"uint256","nodeType":"ElementaryTypeName","src":"3173:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1065,"initialValue":{"arguments":[{"arguments":[{"id":1061,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3220:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1279","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1279","typeString":"library SafeERC20"}],"id":1060,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3212:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1059,"name":"address","nodeType":"ElementaryTypeName","src":"3212:7:6","typeDescriptions":{}}},"id":1062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3212:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1063,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1050,"src":"3227:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1057,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1048,"src":"3196:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$842","typeString":"contract IERC20"}},"id":1058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3202:9:6","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":819,"src":"3196:15:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3196:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3173:62:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1067,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1056,"src":"3257:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1068,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1052,"src":"3273:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3257:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":1070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3280:43:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""},"value":"SafeERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""}],"id":1066,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3249:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3249:75:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1072,"nodeType":"ExpressionStatement","src":"3249:75:6"},{"expression":{"arguments":[{"id":1074,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1048,"src":"3358:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$842","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":1077,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1048,"src":"3388:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$842","typeString":"contract IERC20"}},"id":1078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3394:7:6","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":829,"src":"3388:13:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3402:8:6","memberName":"selector","nodeType":"MemberAccess","src":"3388:22:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1080,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1050,"src":"3412:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1081,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1056,"src":"3421:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1082,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1052,"src":"3436:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3421:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1075,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3365:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1076,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3369:18:6","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"3365:22:6","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3365:77:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$842","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1073,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"3338:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$842_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3338:105:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1086,"nodeType":"ExpressionStatement","src":"3338:105:6"}]}]},"documentation":{"id":1045,"nodeType":"StructuredDocumentation","src":"2868:180:6","text":" @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":1089,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"3062:21:6","nodeType":"FunctionDefinition","parameters":{"id":1053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1048,"mutability":"mutable","name":"token","nameLocation":"3091:5:6","nodeType":"VariableDeclaration","scope":1089,"src":"3084:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$842","typeString":"contract IERC20"},"typeName":{"id":1047,"nodeType":"UserDefinedTypeName","pathNode":{"id":1046,"name":"IERC20","nameLocations":["3084:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":842,"src":"3084:6:6"},"referencedDeclaration":842,"src":"3084:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$842","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1050,"mutability":"mutable","name":"spender","nameLocation":"3106:7:6","nodeType":"VariableDeclaration","scope":1089,"src":"3098:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1049,"name":"address","nodeType":"ElementaryTypeName","src":"3098:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1052,"mutability":"mutable","name":"value","nameLocation":"3123:5:6","nodeType":"VariableDeclaration","scope":1089,"src":"3115:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1051,"name":"uint256","nodeType":"ElementaryTypeName","src":"3115:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3083:46:6"},"returnParameters":{"id":1054,"nodeType":"ParameterList","parameters":[],"src":"3139:0:6"},"scope":1279,"src":"3053:407:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1135,"nodeType":"Block","src":"3833:333:6","statements":[{"assignments":[1101],"declarations":[{"constant":false,"id":1101,"mutability":"mutable","name":"approvalCall","nameLocation":"3856:12:6","nodeType":"VariableDeclaration","scope":1135,"src":"3843:25:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1100,"name":"bytes","nodeType":"ElementaryTypeName","src":"3843:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1110,"initialValue":{"arguments":[{"expression":{"expression":{"id":1104,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1093,"src":"3894:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$842","typeString":"contract IERC20"}},"id":1105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3900:7:6","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":829,"src":"3894:13:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3908:8:6","memberName":"selector","nodeType":"MemberAccess","src":"3894:22:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1107,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1095,"src":"3918:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1108,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1097,"src":"3927:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1102,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3871:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1103,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3875:18:6","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"3871:22:6","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3871:62:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3843:90:6"},{"condition":{"id":1115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3948:45:6","subExpression":{"arguments":[{"id":1112,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1093,"src":"3973:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$842","typeString":"contract IERC20"}},{"id":1113,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1101,"src":"3980:12:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$842","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1111,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1278,"src":"3949:23:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$842_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":1114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3949:44:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1134,"nodeType":"IfStatement","src":"3944:216:6","trueBody":{"id":1133,"nodeType":"Block","src":"3995:165:6","statements":[{"expression":{"arguments":[{"id":1117,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1093,"src":"4029:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$842","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":1120,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1093,"src":"4059:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$842","typeString":"contract IERC20"}},"id":1121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4065:7:6","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":829,"src":"4059:13:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4073:8:6","memberName":"selector","nodeType":"MemberAccess","src":"4059:22:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1123,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1095,"src":"4083:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":1124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4092:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":1118,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4036:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4040:18:6","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"4036:22:6","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4036:58:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$842","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1116,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"4009:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$842_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4009:86:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1127,"nodeType":"ExpressionStatement","src":"4009:86:6"},{"expression":{"arguments":[{"id":1129,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1093,"src":"4129:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$842","typeString":"contract IERC20"}},{"id":1130,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1101,"src":"4136:12:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$842","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1128,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"4109:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$842_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4109:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1132,"nodeType":"ExpressionStatement","src":"4109:40:6"}]}}]},"documentation":{"id":1090,"nodeType":"StructuredDocumentation","src":"3466:285:6","text":" @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Compatible with tokens that require the approval to be set to\n 0 before setting it to a non-zero value."},"id":1136,"implemented":true,"kind":"function","modifiers":[],"name":"forceApprove","nameLocation":"3765:12:6","nodeType":"FunctionDefinition","parameters":{"id":1098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1093,"mutability":"mutable","name":"token","nameLocation":"3785:5:6","nodeType":"VariableDeclaration","scope":1136,"src":"3778:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$842","typeString":"contract IERC20"},"typeName":{"id":1092,"nodeType":"UserDefinedTypeName","pathNode":{"id":1091,"name":"IERC20","nameLocations":["3778:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":842,"src":"3778:6:6"},"referencedDeclaration":842,"src":"3778:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$842","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1095,"mutability":"mutable","name":"spender","nameLocation":"3800:7:6","nodeType":"VariableDeclaration","scope":1136,"src":"3792:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1094,"name":"address","nodeType":"ElementaryTypeName","src":"3792:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1097,"mutability":"mutable","name":"value","nameLocation":"3817:5:6","nodeType":"VariableDeclaration","scope":1136,"src":"3809:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1096,"name":"uint256","nodeType":"ElementaryTypeName","src":"3809:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3777:46:6"},"returnParameters":{"id":1099,"nodeType":"ParameterList","parameters":[],"src":"3833:0:6"},"scope":1279,"src":"3756:410:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1192,"nodeType":"Block","src":"4533:257:6","statements":[{"assignments":[1158],"declarations":[{"constant":false,"id":1158,"mutability":"mutable","name":"nonceBefore","nameLocation":"4551:11:6","nodeType":"VariableDeclaration","scope":1192,"src":"4543:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1157,"name":"uint256","nodeType":"ElementaryTypeName","src":"4543:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1163,"initialValue":{"arguments":[{"id":1161,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"4578:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1159,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"4565:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$903","typeString":"contract IERC20Permit"}},"id":1160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4571:6:6","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":896,"src":"4565:12:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4565:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4543:41:6"},{"expression":{"arguments":[{"id":1167,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"4607:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1168,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"4614:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1169,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"4623:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1170,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1148,"src":"4630:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1171,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1150,"src":"4640:1:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1172,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1152,"src":"4643:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1173,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1154,"src":"4646:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1164,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"4594:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$903","typeString":"contract IERC20Permit"}},"id":1166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4600:6:6","memberName":"permit","nodeType":"MemberAccess","referencedDeclaration":888,"src":"4594:12:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"}},"id":1174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4594:54:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1175,"nodeType":"ExpressionStatement","src":"4594:54:6"},{"assignments":[1177],"declarations":[{"constant":false,"id":1177,"mutability":"mutable","name":"nonceAfter","nameLocation":"4666:10:6","nodeType":"VariableDeclaration","scope":1192,"src":"4658:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1176,"name":"uint256","nodeType":"ElementaryTypeName","src":"4658:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1182,"initialValue":{"arguments":[{"id":1180,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"4692:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1178,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"4679:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$903","typeString":"contract IERC20Permit"}},"id":1179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4685:6:6","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":896,"src":"4679:12:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4679:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4658:40:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1184,"name":"nonceAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1177,"src":"4716:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1185,"name":"nonceBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"4730:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4744:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4730:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4716:29:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a207065726d697420646964206e6f742073756363656564","id":1189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4747:35:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d","typeString":"literal_string \"SafeERC20: permit did not succeed\""},"value":"SafeERC20: permit did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d","typeString":"literal_string \"SafeERC20: permit did not succeed\""}],"id":1183,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4708:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4708:75:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1191,"nodeType":"ExpressionStatement","src":"4708:75:6"}]},"documentation":{"id":1137,"nodeType":"StructuredDocumentation","src":"4172:141:6","text":" @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n Revert on invalid signature."},"id":1193,"implemented":true,"kind":"function","modifiers":[],"name":"safePermit","nameLocation":"4327:10:6","nodeType":"FunctionDefinition","parameters":{"id":1155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1140,"mutability":"mutable","name":"token","nameLocation":"4360:5:6","nodeType":"VariableDeclaration","scope":1193,"src":"4347:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$903","typeString":"contract IERC20Permit"},"typeName":{"id":1139,"nodeType":"UserDefinedTypeName","pathNode":{"id":1138,"name":"IERC20Permit","nameLocations":["4347:12:6"],"nodeType":"IdentifierPath","referencedDeclaration":903,"src":"4347:12:6"},"referencedDeclaration":903,"src":"4347:12:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$903","typeString":"contract IERC20Permit"}},"visibility":"internal"},{"constant":false,"id":1142,"mutability":"mutable","name":"owner","nameLocation":"4383:5:6","nodeType":"VariableDeclaration","scope":1193,"src":"4375:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1141,"name":"address","nodeType":"ElementaryTypeName","src":"4375:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1144,"mutability":"mutable","name":"spender","nameLocation":"4406:7:6","nodeType":"VariableDeclaration","scope":1193,"src":"4398:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1143,"name":"address","nodeType":"ElementaryTypeName","src":"4398:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1146,"mutability":"mutable","name":"value","nameLocation":"4431:5:6","nodeType":"VariableDeclaration","scope":1193,"src":"4423:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1145,"name":"uint256","nodeType":"ElementaryTypeName","src":"4423:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1148,"mutability":"mutable","name":"deadline","nameLocation":"4454:8:6","nodeType":"VariableDeclaration","scope":1193,"src":"4446:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1147,"name":"uint256","nodeType":"ElementaryTypeName","src":"4446:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1150,"mutability":"mutable","name":"v","nameLocation":"4478:1:6","nodeType":"VariableDeclaration","scope":1193,"src":"4472:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1149,"name":"uint8","nodeType":"ElementaryTypeName","src":"4472:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1152,"mutability":"mutable","name":"r","nameLocation":"4497:1:6","nodeType":"VariableDeclaration","scope":1193,"src":"4489:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1151,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4489:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1154,"mutability":"mutable","name":"s","nameLocation":"4516:1:6","nodeType":"VariableDeclaration","scope":1193,"src":"4508:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1153,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4508:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4337:186:6"},"returnParameters":{"id":1156,"nodeType":"ParameterList","parameters":[],"src":"4533:0:6"},"scope":1279,"src":"4318:472:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1229,"nodeType":"Block","src":"5243:572:6","statements":[{"assignments":[1203],"declarations":[{"constant":false,"id":1203,"mutability":"mutable","name":"returndata","nameLocation":"5605:10:6","nodeType":"VariableDeclaration","scope":1229,"src":"5592:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1202,"name":"bytes","nodeType":"ElementaryTypeName","src":"5592:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1212,"initialValue":{"arguments":[{"id":1209,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1199,"src":"5646:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564","id":1210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5652:34:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""},"value":"SafeERC20: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""}],"expression":{"arguments":[{"id":1206,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"5626:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$842","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$842","typeString":"contract IERC20"}],"id":1205,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5618:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1204,"name":"address","nodeType":"ElementaryTypeName","src":"5618:7:6","typeDescriptions":{}}},"id":1207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5618:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5633:12:6","memberName":"functionCall","nodeType":"MemberAccess","referencedDeclaration":1369,"src":"5618:27:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5618:69:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"5592:95:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1214,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"5705:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5716:6:6","memberName":"length","nodeType":"MemberAccess","src":"5705:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5726:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5705:22:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1220,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"5742:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":1222,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5755:4:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":1221,"name":"bool","nodeType":"ElementaryTypeName","src":"5755:4:6","typeDescriptions":{}}}],"id":1223,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"5754:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":1218,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5731:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1219,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5735:6:6","memberName":"decode","nodeType":"MemberAccess","src":"5731:10:6","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":1224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5731:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5705:56:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564","id":1226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5763:44:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""},"value":"SafeERC20: ERC20 operation did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""}],"id":1213,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5697:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5697:111:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1228,"nodeType":"ExpressionStatement","src":"5697:111:6"}]},"documentation":{"id":1194,"nodeType":"StructuredDocumentation","src":"4796:372:6","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."},"id":1230,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"5182:19:6","nodeType":"FunctionDefinition","parameters":{"id":1200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1197,"mutability":"mutable","name":"token","nameLocation":"5209:5:6","nodeType":"VariableDeclaration","scope":1230,"src":"5202:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$842","typeString":"contract IERC20"},"typeName":{"id":1196,"nodeType":"UserDefinedTypeName","pathNode":{"id":1195,"name":"IERC20","nameLocations":["5202:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":842,"src":"5202:6:6"},"referencedDeclaration":842,"src":"5202:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$842","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1199,"mutability":"mutable","name":"data","nameLocation":"5229:4:6","nodeType":"VariableDeclaration","scope":1230,"src":"5216:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1198,"name":"bytes","nodeType":"ElementaryTypeName","src":"5216:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5201:33:6"},"returnParameters":{"id":1201,"nodeType":"ParameterList","parameters":[],"src":"5243:0:6"},"scope":1279,"src":"5173:642:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1277,"nodeType":"Block","src":"6405:505:6","statements":[{"assignments":[1242,1244],"declarations":[{"constant":false,"id":1242,"mutability":"mutable","name":"success","nameLocation":"6706:7:6","nodeType":"VariableDeclaration","scope":1277,"src":"6701:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1241,"name":"bool","nodeType":"ElementaryTypeName","src":"6701:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1244,"mutability":"mutable","name":"returndata","nameLocation":"6728:10:6","nodeType":"VariableDeclaration","scope":1277,"src":"6715:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1243,"name":"bytes","nodeType":"ElementaryTypeName","src":"6715:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1252,"initialValue":{"arguments":[{"id":1250,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1236,"src":"6762:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1247,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1234,"src":"6750:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$842","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$842","typeString":"contract IERC20"}],"id":1246,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6742:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1245,"name":"address","nodeType":"ElementaryTypeName","src":"6742:7:6","typeDescriptions":{}}},"id":1248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6742:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6757:4:6","memberName":"call","nodeType":"MemberAccess","src":"6742:19:6","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6742:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6700:67:6"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1253,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1242,"src":"6796:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1254,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1244,"src":"6808:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6819:6:6","memberName":"length","nodeType":"MemberAccess","src":"6808:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6829:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6808:22:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1260,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1244,"src":"6845:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":1262,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6858:4:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":1261,"name":"bool","nodeType":"ElementaryTypeName","src":"6858:4:6","typeDescriptions":{}}}],"id":1263,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6857:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":1258,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6834:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1259,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6838:6:6","memberName":"decode","nodeType":"MemberAccess","src":"6834:10:6","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":1264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6834:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6808:56:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1266,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6807:58:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6796:69:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"arguments":[{"arguments":[{"id":1272,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1234,"src":"6896:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$842","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$842","typeString":"contract IERC20"}],"id":1271,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6888:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1270,"name":"address","nodeType":"ElementaryTypeName","src":"6888:7:6","typeDescriptions":{}}},"id":1273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6888:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1268,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"6869:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$1609_$","typeString":"type(library Address)"}},"id":1269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6877:10:6","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1297,"src":"6869:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6869:34:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6796:107:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1240,"id":1276,"nodeType":"Return","src":"6777:126:6"}]},"documentation":{"id":1231,"nodeType":"StructuredDocumentation","src":"5821:490:6","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."},"id":1278,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturnBool","nameLocation":"6325:23:6","nodeType":"FunctionDefinition","parameters":{"id":1237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1234,"mutability":"mutable","name":"token","nameLocation":"6356:5:6","nodeType":"VariableDeclaration","scope":1278,"src":"6349:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$842","typeString":"contract IERC20"},"typeName":{"id":1233,"nodeType":"UserDefinedTypeName","pathNode":{"id":1232,"name":"IERC20","nameLocations":["6349:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":842,"src":"6349:6:6"},"referencedDeclaration":842,"src":"6349:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$842","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1236,"mutability":"mutable","name":"data","nameLocation":"6376:4:6","nodeType":"VariableDeclaration","scope":1278,"src":"6363:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1235,"name":"bytes","nodeType":"ElementaryTypeName","src":"6363:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6348:33:6"},"returnParameters":{"id":1240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1239,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1278,"src":"6399:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1238,"name":"bool","nodeType":"ElementaryTypeName","src":"6399:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6398:6:6"},"scope":1279,"src":"6316:594:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":1280,"src":"701:6211:6","usedErrors":[]}],"src":"115:6798:6"},"id":6},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[1609]},"id":1610,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1281,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:7"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":1282,"nodeType":"StructuredDocumentation","src":"126:67:7","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":1609,"linearizedBaseContracts":[1609],"name":"Address","nameLocation":"202:7:7","nodeType":"ContractDefinition","nodes":[{"body":{"id":1296,"nodeType":"Block","src":"1478:254:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1290,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1285,"src":"1702:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1710:4:7","memberName":"code","nodeType":"MemberAccess","src":"1702:12:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1715:6:7","memberName":"length","nodeType":"MemberAccess","src":"1702:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1724:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1702:23:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1289,"id":1295,"nodeType":"Return","src":"1695:30:7"}]},"documentation":{"id":1283,"nodeType":"StructuredDocumentation","src":"216:1191:7","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":1297,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1421:10:7","nodeType":"FunctionDefinition","parameters":{"id":1286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1285,"mutability":"mutable","name":"account","nameLocation":"1440:7:7","nodeType":"VariableDeclaration","scope":1297,"src":"1432:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1284,"name":"address","nodeType":"ElementaryTypeName","src":"1432:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1431:17:7"},"returnParameters":{"id":1289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1288,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1297,"src":"1472:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1287,"name":"bool","nodeType":"ElementaryTypeName","src":"1472:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1471:6:7"},"scope":1609,"src":"1412:320:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1330,"nodeType":"Block","src":"2718:241:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1308,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2744:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1609","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1609","typeString":"library Address"}],"id":1307,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2736:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1306,"name":"address","nodeType":"ElementaryTypeName","src":"2736:7:7","typeDescriptions":{}}},"id":1309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2736:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2750:7:7","memberName":"balance","nodeType":"MemberAccess","src":"2736:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1311,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1302,"src":"2761:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2736:31:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":1313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2769:31:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":1305,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2728:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:73:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1315,"nodeType":"ExpressionStatement","src":"2728:73:7"},{"assignments":[1317,null],"declarations":[{"constant":false,"id":1317,"mutability":"mutable","name":"success","nameLocation":"2818:7:7","nodeType":"VariableDeclaration","scope":1330,"src":"2813:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1316,"name":"bool","nodeType":"ElementaryTypeName","src":"2813:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1324,"initialValue":{"arguments":[{"hexValue":"","id":1322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2861:2:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1318,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1300,"src":"2831:9:7","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2841:4:7","memberName":"call","nodeType":"MemberAccess","src":"2831:14:7","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1320,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1302,"src":"2853:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2831:29:7","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2831:33:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2812:52:7"},{"expression":{"arguments":[{"id":1326,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1317,"src":"2882:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":1327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2891:60:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":1325,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2874:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2874:78:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1329,"nodeType":"ExpressionStatement","src":"2874:78:7"}]},"documentation":{"id":1298,"nodeType":"StructuredDocumentation","src":"1738:904:7","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":1331,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2656:9:7","nodeType":"FunctionDefinition","parameters":{"id":1303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1300,"mutability":"mutable","name":"recipient","nameLocation":"2682:9:7","nodeType":"VariableDeclaration","scope":1331,"src":"2666:25:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1299,"name":"address","nodeType":"ElementaryTypeName","src":"2666:15:7","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1302,"mutability":"mutable","name":"amount","nameLocation":"2701:6:7","nodeType":"VariableDeclaration","scope":1331,"src":"2693:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1301,"name":"uint256","nodeType":"ElementaryTypeName","src":"2693:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:43:7"},"returnParameters":{"id":1304,"nodeType":"ParameterList","parameters":[],"src":"2718:0:7"},"scope":1609,"src":"2647:312:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1348,"nodeType":"Block","src":"3790:96:7","statements":[{"expression":{"arguments":[{"id":1342,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1334,"src":"3829:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1343,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1336,"src":"3837:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3843:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":1345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3846:32:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":1341,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1389,1433],"referencedDeclaration":1433,"src":"3807:21:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3807:72:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1340,"id":1347,"nodeType":"Return","src":"3800:79:7"}]},"documentation":{"id":1332,"nodeType":"StructuredDocumentation","src":"2965:731:7","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":1349,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3710:12:7","nodeType":"FunctionDefinition","parameters":{"id":1337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1334,"mutability":"mutable","name":"target","nameLocation":"3731:6:7","nodeType":"VariableDeclaration","scope":1349,"src":"3723:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1333,"name":"address","nodeType":"ElementaryTypeName","src":"3723:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1336,"mutability":"mutable","name":"data","nameLocation":"3752:4:7","nodeType":"VariableDeclaration","scope":1349,"src":"3739:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1335,"name":"bytes","nodeType":"ElementaryTypeName","src":"3739:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3722:35:7"},"returnParameters":{"id":1340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1339,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1349,"src":"3776:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1338,"name":"bytes","nodeType":"ElementaryTypeName","src":"3776:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3775:14:7"},"scope":1609,"src":"3701:185:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1368,"nodeType":"Block","src":"4255:76:7","statements":[{"expression":{"arguments":[{"id":1362,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1352,"src":"4294:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1363,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1354,"src":"4302:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4308:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":1365,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1356,"src":"4311:12:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1361,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1389,1433],"referencedDeclaration":1433,"src":"4272:21:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4272:52:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1360,"id":1367,"nodeType":"Return","src":"4265:59:7"}]},"documentation":{"id":1350,"nodeType":"StructuredDocumentation","src":"3892:211:7","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1369,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"4117:12:7","nodeType":"FunctionDefinition","parameters":{"id":1357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1352,"mutability":"mutable","name":"target","nameLocation":"4147:6:7","nodeType":"VariableDeclaration","scope":1369,"src":"4139:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1351,"name":"address","nodeType":"ElementaryTypeName","src":"4139:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1354,"mutability":"mutable","name":"data","nameLocation":"4176:4:7","nodeType":"VariableDeclaration","scope":1369,"src":"4163:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1353,"name":"bytes","nodeType":"ElementaryTypeName","src":"4163:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1356,"mutability":"mutable","name":"errorMessage","nameLocation":"4204:12:7","nodeType":"VariableDeclaration","scope":1369,"src":"4190:26:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1355,"name":"string","nodeType":"ElementaryTypeName","src":"4190:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4129:93:7"},"returnParameters":{"id":1360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1359,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1369,"src":"4241:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1358,"name":"bytes","nodeType":"ElementaryTypeName","src":"4241:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4240:14:7"},"scope":1609,"src":"4108:223:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1388,"nodeType":"Block","src":"4806:111:7","statements":[{"expression":{"arguments":[{"id":1382,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"4845:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1383,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1374,"src":"4853:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1384,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"4859:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":1385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4866:43:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":1381,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1389,1433],"referencedDeclaration":1433,"src":"4823:21:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4823:87:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1380,"id":1387,"nodeType":"Return","src":"4816:94:7"}]},"documentation":{"id":1370,"nodeType":"StructuredDocumentation","src":"4337:351:7","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":1389,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4702:21:7","nodeType":"FunctionDefinition","parameters":{"id":1377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1372,"mutability":"mutable","name":"target","nameLocation":"4732:6:7","nodeType":"VariableDeclaration","scope":1389,"src":"4724:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1371,"name":"address","nodeType":"ElementaryTypeName","src":"4724:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1374,"mutability":"mutable","name":"data","nameLocation":"4753:4:7","nodeType":"VariableDeclaration","scope":1389,"src":"4740:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1373,"name":"bytes","nodeType":"ElementaryTypeName","src":"4740:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1376,"mutability":"mutable","name":"value","nameLocation":"4767:5:7","nodeType":"VariableDeclaration","scope":1389,"src":"4759:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1375,"name":"uint256","nodeType":"ElementaryTypeName","src":"4759:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4723:50:7"},"returnParameters":{"id":1380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1379,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1389,"src":"4792:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1378,"name":"bytes","nodeType":"ElementaryTypeName","src":"4792:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4791:14:7"},"scope":1609,"src":"4693:224:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1432,"nodeType":"Block","src":"5344:267:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1406,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5370:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1609","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1609","typeString":"library Address"}],"id":1405,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5362:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1404,"name":"address","nodeType":"ElementaryTypeName","src":"5362:7:7","typeDescriptions":{}}},"id":1407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5362:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5376:7:7","memberName":"balance","nodeType":"MemberAccess","src":"5362:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1409,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1396,"src":"5387:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5362:30:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":1411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5394:40:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":1403,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5354:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5354:81:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1413,"nodeType":"ExpressionStatement","src":"5354:81:7"},{"assignments":[1415,1417],"declarations":[{"constant":false,"id":1415,"mutability":"mutable","name":"success","nameLocation":"5451:7:7","nodeType":"VariableDeclaration","scope":1432,"src":"5446:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1414,"name":"bool","nodeType":"ElementaryTypeName","src":"5446:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1417,"mutability":"mutable","name":"returndata","nameLocation":"5473:10:7","nodeType":"VariableDeclaration","scope":1432,"src":"5460:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1416,"name":"bytes","nodeType":"ElementaryTypeName","src":"5460:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1424,"initialValue":{"arguments":[{"id":1422,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1394,"src":"5513:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1418,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1392,"src":"5487:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5494:4:7","memberName":"call","nodeType":"MemberAccess","src":"5487:11:7","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1420,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1396,"src":"5506:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5487:25:7","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5487:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5445:73:7"},{"expression":{"arguments":[{"id":1426,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1392,"src":"5562:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1427,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"5570:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1428,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1417,"src":"5579:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1429,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"5591:12:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1425,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1564,"src":"5535:26:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5535:69:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1402,"id":1431,"nodeType":"Return","src":"5528:76:7"}]},"documentation":{"id":1390,"nodeType":"StructuredDocumentation","src":"4923:237:7","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1433,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"5174:21:7","nodeType":"FunctionDefinition","parameters":{"id":1399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1392,"mutability":"mutable","name":"target","nameLocation":"5213:6:7","nodeType":"VariableDeclaration","scope":1433,"src":"5205:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1391,"name":"address","nodeType":"ElementaryTypeName","src":"5205:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1394,"mutability":"mutable","name":"data","nameLocation":"5242:4:7","nodeType":"VariableDeclaration","scope":1433,"src":"5229:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1393,"name":"bytes","nodeType":"ElementaryTypeName","src":"5229:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1396,"mutability":"mutable","name":"value","nameLocation":"5264:5:7","nodeType":"VariableDeclaration","scope":1433,"src":"5256:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1395,"name":"uint256","nodeType":"ElementaryTypeName","src":"5256:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1398,"mutability":"mutable","name":"errorMessage","nameLocation":"5293:12:7","nodeType":"VariableDeclaration","scope":1433,"src":"5279:26:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1397,"name":"string","nodeType":"ElementaryTypeName","src":"5279:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5195:116:7"},"returnParameters":{"id":1402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1401,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1433,"src":"5330:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1400,"name":"bytes","nodeType":"ElementaryTypeName","src":"5330:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5329:14:7"},"scope":1609,"src":"5165:446:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1449,"nodeType":"Block","src":"5888:97:7","statements":[{"expression":{"arguments":[{"id":1444,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1436,"src":"5924:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1445,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1438,"src":"5932:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":1446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5938:39:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":1443,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[1450,1479],"referencedDeclaration":1479,"src":"5905:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":1447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5905:73:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1442,"id":1448,"nodeType":"Return","src":"5898:80:7"}]},"documentation":{"id":1434,"nodeType":"StructuredDocumentation","src":"5617:166:7","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1450,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5797:18:7","nodeType":"FunctionDefinition","parameters":{"id":1439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1436,"mutability":"mutable","name":"target","nameLocation":"5824:6:7","nodeType":"VariableDeclaration","scope":1450,"src":"5816:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1435,"name":"address","nodeType":"ElementaryTypeName","src":"5816:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1438,"mutability":"mutable","name":"data","nameLocation":"5845:4:7","nodeType":"VariableDeclaration","scope":1450,"src":"5832:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1437,"name":"bytes","nodeType":"ElementaryTypeName","src":"5832:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5815:35:7"},"returnParameters":{"id":1442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1441,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1450,"src":"5874:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1440,"name":"bytes","nodeType":"ElementaryTypeName","src":"5874:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5873:14:7"},"scope":1609,"src":"5788:197:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1478,"nodeType":"Block","src":"6327:168:7","statements":[{"assignments":[1463,1465],"declarations":[{"constant":false,"id":1463,"mutability":"mutable","name":"success","nameLocation":"6343:7:7","nodeType":"VariableDeclaration","scope":1478,"src":"6338:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1462,"name":"bool","nodeType":"ElementaryTypeName","src":"6338:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1465,"mutability":"mutable","name":"returndata","nameLocation":"6365:10:7","nodeType":"VariableDeclaration","scope":1478,"src":"6352:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1464,"name":"bytes","nodeType":"ElementaryTypeName","src":"6352:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1470,"initialValue":{"arguments":[{"id":1468,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1455,"src":"6397:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1466,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1453,"src":"6379:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6386:10:7","memberName":"staticcall","nodeType":"MemberAccess","src":"6379:17:7","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6379:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6337:65:7"},{"expression":{"arguments":[{"id":1472,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1453,"src":"6446:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1473,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"6454:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1474,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1465,"src":"6463:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1475,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1457,"src":"6475:12:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1471,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1564,"src":"6419:26:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6419:69:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1461,"id":1477,"nodeType":"Return","src":"6412:76:7"}]},"documentation":{"id":1451,"nodeType":"StructuredDocumentation","src":"5991:173:7","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1479,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6178:18:7","nodeType":"FunctionDefinition","parameters":{"id":1458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1453,"mutability":"mutable","name":"target","nameLocation":"6214:6:7","nodeType":"VariableDeclaration","scope":1479,"src":"6206:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1452,"name":"address","nodeType":"ElementaryTypeName","src":"6206:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1455,"mutability":"mutable","name":"data","nameLocation":"6243:4:7","nodeType":"VariableDeclaration","scope":1479,"src":"6230:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1454,"name":"bytes","nodeType":"ElementaryTypeName","src":"6230:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1457,"mutability":"mutable","name":"errorMessage","nameLocation":"6271:12:7","nodeType":"VariableDeclaration","scope":1479,"src":"6257:26:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1456,"name":"string","nodeType":"ElementaryTypeName","src":"6257:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6196:93:7"},"returnParameters":{"id":1461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1460,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1479,"src":"6313:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1459,"name":"bytes","nodeType":"ElementaryTypeName","src":"6313:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6312:14:7"},"scope":1609,"src":"6169:326:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1495,"nodeType":"Block","src":"6771:101:7","statements":[{"expression":{"arguments":[{"id":1490,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1482,"src":"6809:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1491,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1484,"src":"6817:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":1492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6823:41:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":1489,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[1496,1525],"referencedDeclaration":1525,"src":"6788:20:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6788:77:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1488,"id":1494,"nodeType":"Return","src":"6781:84:7"}]},"documentation":{"id":1480,"nodeType":"StructuredDocumentation","src":"6501:168:7","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1496,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6683:20:7","nodeType":"FunctionDefinition","parameters":{"id":1485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1482,"mutability":"mutable","name":"target","nameLocation":"6712:6:7","nodeType":"VariableDeclaration","scope":1496,"src":"6704:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1481,"name":"address","nodeType":"ElementaryTypeName","src":"6704:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1484,"mutability":"mutable","name":"data","nameLocation":"6733:4:7","nodeType":"VariableDeclaration","scope":1496,"src":"6720:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1483,"name":"bytes","nodeType":"ElementaryTypeName","src":"6720:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6703:35:7"},"returnParameters":{"id":1488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1487,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1496,"src":"6757:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1486,"name":"bytes","nodeType":"ElementaryTypeName","src":"6757:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6756:14:7"},"scope":1609,"src":"6674:198:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1524,"nodeType":"Block","src":"7213:170:7","statements":[{"assignments":[1509,1511],"declarations":[{"constant":false,"id":1509,"mutability":"mutable","name":"success","nameLocation":"7229:7:7","nodeType":"VariableDeclaration","scope":1524,"src":"7224:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1508,"name":"bool","nodeType":"ElementaryTypeName","src":"7224:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1511,"mutability":"mutable","name":"returndata","nameLocation":"7251:10:7","nodeType":"VariableDeclaration","scope":1524,"src":"7238:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1510,"name":"bytes","nodeType":"ElementaryTypeName","src":"7238:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1516,"initialValue":{"arguments":[{"id":1514,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"7285:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1512,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"7265:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7272:12:7","memberName":"delegatecall","nodeType":"MemberAccess","src":"7265:19:7","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":1515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7265:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7223:67:7"},{"expression":{"arguments":[{"id":1518,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"7334:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1519,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1509,"src":"7342:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1520,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1511,"src":"7351:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1521,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1503,"src":"7363:12:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1517,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1564,"src":"7307:26:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7307:69:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1507,"id":1523,"nodeType":"Return","src":"7300:76:7"}]},"documentation":{"id":1497,"nodeType":"StructuredDocumentation","src":"6878:175:7","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1525,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"7067:20:7","nodeType":"FunctionDefinition","parameters":{"id":1504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1499,"mutability":"mutable","name":"target","nameLocation":"7105:6:7","nodeType":"VariableDeclaration","scope":1525,"src":"7097:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1498,"name":"address","nodeType":"ElementaryTypeName","src":"7097:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1501,"mutability":"mutable","name":"data","nameLocation":"7134:4:7","nodeType":"VariableDeclaration","scope":1525,"src":"7121:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1500,"name":"bytes","nodeType":"ElementaryTypeName","src":"7121:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1503,"mutability":"mutable","name":"errorMessage","nameLocation":"7162:12:7","nodeType":"VariableDeclaration","scope":1525,"src":"7148:26:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1502,"name":"string","nodeType":"ElementaryTypeName","src":"7148:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7087:93:7"},"returnParameters":{"id":1507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1506,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1525,"src":"7199:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1505,"name":"bytes","nodeType":"ElementaryTypeName","src":"7199:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7198:14:7"},"scope":1609,"src":"7058:325:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1563,"nodeType":"Block","src":"7865:434:7","statements":[{"condition":{"id":1539,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"7879:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1561,"nodeType":"Block","src":"8235:58:7","statements":[{"expression":{"arguments":[{"id":1557,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1532,"src":"8257:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1558,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1534,"src":"8269:12:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1556,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1608,"src":"8249:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":1559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8249:33:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1560,"nodeType":"ExpressionStatement","src":"8249:33:7"}]},"id":1562,"nodeType":"IfStatement","src":"7875:418:7","trueBody":{"id":1555,"nodeType":"Block","src":"7888:341:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1540,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1532,"src":"7906:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7917:6:7","memberName":"length","nodeType":"MemberAccess","src":"7906:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7927:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7906:22:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1552,"nodeType":"IfStatement","src":"7902:286:7","trueBody":{"id":1551,"nodeType":"Block","src":"7930:258:7","statements":[{"expression":{"arguments":[{"arguments":[{"id":1546,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1528,"src":"8132:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1545,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"8121:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8121:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":1548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8141:31:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":1544,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8113:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8113:60:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1550,"nodeType":"ExpressionStatement","src":"8113:60:7"}]}},{"expression":{"id":1553,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1532,"src":"8208:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1538,"id":1554,"nodeType":"Return","src":"8201:17:7"}]}}]},"documentation":{"id":1526,"nodeType":"StructuredDocumentation","src":"7389:277:7","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":1564,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7680:26:7","nodeType":"FunctionDefinition","parameters":{"id":1535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1528,"mutability":"mutable","name":"target","nameLocation":"7724:6:7","nodeType":"VariableDeclaration","scope":1564,"src":"7716:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1527,"name":"address","nodeType":"ElementaryTypeName","src":"7716:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1530,"mutability":"mutable","name":"success","nameLocation":"7745:7:7","nodeType":"VariableDeclaration","scope":1564,"src":"7740:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1529,"name":"bool","nodeType":"ElementaryTypeName","src":"7740:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1532,"mutability":"mutable","name":"returndata","nameLocation":"7775:10:7","nodeType":"VariableDeclaration","scope":1564,"src":"7762:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1531,"name":"bytes","nodeType":"ElementaryTypeName","src":"7762:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1534,"mutability":"mutable","name":"errorMessage","nameLocation":"7809:12:7","nodeType":"VariableDeclaration","scope":1564,"src":"7795:26:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1533,"name":"string","nodeType":"ElementaryTypeName","src":"7795:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7706:121:7"},"returnParameters":{"id":1538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1537,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1564,"src":"7851:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1536,"name":"bytes","nodeType":"ElementaryTypeName","src":"7851:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7850:14:7"},"scope":1609,"src":"7671:628:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1587,"nodeType":"Block","src":"8680:135:7","statements":[{"condition":{"id":1576,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1567,"src":"8694:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1585,"nodeType":"Block","src":"8751:58:7","statements":[{"expression":{"arguments":[{"id":1581,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1569,"src":"8773:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1582,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1571,"src":"8785:12:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1580,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1608,"src":"8765:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":1583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8765:33:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1584,"nodeType":"ExpressionStatement","src":"8765:33:7"}]},"id":1586,"nodeType":"IfStatement","src":"8690:119:7","trueBody":{"id":1579,"nodeType":"Block","src":"8703:42:7","statements":[{"expression":{"id":1577,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1569,"src":"8724:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1575,"id":1578,"nodeType":"Return","src":"8717:17:7"}]}}]},"documentation":{"id":1565,"nodeType":"StructuredDocumentation","src":"8305:210:7","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":1588,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8529:16:7","nodeType":"FunctionDefinition","parameters":{"id":1572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1567,"mutability":"mutable","name":"success","nameLocation":"8560:7:7","nodeType":"VariableDeclaration","scope":1588,"src":"8555:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1566,"name":"bool","nodeType":"ElementaryTypeName","src":"8555:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1569,"mutability":"mutable","name":"returndata","nameLocation":"8590:10:7","nodeType":"VariableDeclaration","scope":1588,"src":"8577:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1568,"name":"bytes","nodeType":"ElementaryTypeName","src":"8577:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1571,"mutability":"mutable","name":"errorMessage","nameLocation":"8624:12:7","nodeType":"VariableDeclaration","scope":1588,"src":"8610:26:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1570,"name":"string","nodeType":"ElementaryTypeName","src":"8610:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8545:97:7"},"returnParameters":{"id":1575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1574,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1588,"src":"8666:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1573,"name":"bytes","nodeType":"ElementaryTypeName","src":"8666:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8665:14:7"},"scope":1609,"src":"8520:295:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1607,"nodeType":"Block","src":"8904:457:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1595,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1590,"src":"8980:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8991:6:7","memberName":"length","nodeType":"MemberAccess","src":"8980:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9000:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8980:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1605,"nodeType":"Block","src":"9310:45:7","statements":[{"expression":{"arguments":[{"id":1602,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1592,"src":"9331:12:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1601,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9324:6:7","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9324:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1604,"nodeType":"ExpressionStatement","src":"9324:20:7"}]},"id":1606,"nodeType":"IfStatement","src":"8976:379:7","trueBody":{"id":1600,"nodeType":"Block","src":"9003:301:7","statements":[{"AST":{"nodeType":"YulBlock","src":"9161:133:7","statements":[{"nodeType":"YulVariableDeclaration","src":"9179:40:7","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"9208:10:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9202:5:7"},"nodeType":"YulFunctionCall","src":"9202:17:7"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"9183:15:7","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9247:2:7","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"9251:10:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9243:3:7"},"nodeType":"YulFunctionCall","src":"9243:19:7"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"9264:15:7"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9236:6:7"},"nodeType":"YulFunctionCall","src":"9236:44:7"},"nodeType":"YulExpressionStatement","src":"9236:44:7"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1590,"isOffset":false,"isSlot":false,"src":"9208:10:7","valueSize":1},{"declaration":1590,"isOffset":false,"isSlot":false,"src":"9251:10:7","valueSize":1}],"id":1599,"nodeType":"InlineAssembly","src":"9152:142:7"}]}}]},"id":1608,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8830:7:7","nodeType":"FunctionDefinition","parameters":{"id":1593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1590,"mutability":"mutable","name":"returndata","nameLocation":"8851:10:7","nodeType":"VariableDeclaration","scope":1608,"src":"8838:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1589,"name":"bytes","nodeType":"ElementaryTypeName","src":"8838:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1592,"mutability":"mutable","name":"errorMessage","nameLocation":"8877:12:7","nodeType":"VariableDeclaration","scope":1608,"src":"8863:26:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1591,"name":"string","nodeType":"ElementaryTypeName","src":"8863:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8837:53:7"},"returnParameters":{"id":1594,"nodeType":"ParameterList","parameters":[],"src":"8904:0:7"},"scope":1609,"src":"8821:540:7","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1610,"src":"194:9169:7","usedErrors":[]}],"src":"101:9263:7"},"id":7},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1631]},"id":1632,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1611,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:8"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1612,"nodeType":"StructuredDocumentation","src":"111:496:8","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1631,"linearizedBaseContracts":[1631],"name":"Context","nameLocation":"626:7:8","nodeType":"ContractDefinition","nodes":[{"body":{"id":1620,"nodeType":"Block","src":"702:34:8","statements":[{"expression":{"expression":{"id":1617,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"723:6:8","memberName":"sender","nodeType":"MemberAccess","src":"719:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1616,"id":1619,"nodeType":"Return","src":"712:17:8"}]},"id":1621,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:8","nodeType":"FunctionDefinition","parameters":{"id":1613,"nodeType":"ParameterList","parameters":[],"src":"659:2:8"},"returnParameters":{"id":1616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1615,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1621,"src":"693:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1614,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:8"},"scope":1631,"src":"640:96:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1629,"nodeType":"Block","src":"809:32:8","statements":[{"expression":{"expression":{"id":1626,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"830:4:8","memberName":"data","nodeType":"MemberAccess","src":"826:8:8","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1625,"id":1628,"nodeType":"Return","src":"819:15:8"}]},"id":1630,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:8","nodeType":"FunctionDefinition","parameters":{"id":1622,"nodeType":"ParameterList","parameters":[],"src":"759:2:8"},"returnParameters":{"id":1625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1624,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1630,"src":"793:14:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1623,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:8"},"scope":1631,"src":"742:99:8","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1632,"src":"608:235:8","usedErrors":[]}],"src":"86:758:8"},"id":8},"contracts/Prime.sol":{"ast":{"absolutePath":"contracts/Prime.sol","exportedSymbols":{"Context":[1631],"ERC20":[764],"IERC20":[842],"IERC20Metadata":[867],"Ownable":[112],"Prime":[1671]},"id":1672,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1633,"literals":["solidity","^","0.8",".9"],"nodeType":"PragmaDirective","src":"33:23:9"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":1634,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1672,"sourceUnit":765,"src":"60:55:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":1635,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1672,"sourceUnit":113,"src":"117:52:9","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1636,"name":"ERC20","nameLocations":["189:5:9"],"nodeType":"IdentifierPath","referencedDeclaration":764,"src":"189:5:9"},"id":1637,"nodeType":"InheritanceSpecifier","src":"189:5:9"},{"baseName":{"id":1638,"name":"Ownable","nameLocations":["195:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":112,"src":"195:7:9"},"id":1639,"nodeType":"InheritanceSpecifier","src":"195:7:9"}],"canonicalName":"Prime","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1671,"linearizedBaseContracts":[1671,112,764,867,842,1631],"name":"Prime","nameLocation":"180:5:9","nodeType":"ContractDefinition","nodes":[{"body":{"id":1654,"nodeType":"Block","src":"260:44:9","statements":[{"expression":{"arguments":[{"expression":{"id":1649,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"277:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"281:6:9","memberName":"sender","nodeType":"MemberAccess","src":"277:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1651,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1641,"src":"289:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1648,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":581,"src":"271:5:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"271:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1653,"nodeType":"ExpressionStatement","src":"271:25:9"}]},"id":1655,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"4d79546f6b656e","id":1644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"242:9:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_245c734e6d4ec044daf7beffa09d54d4bafba490113c199734d790b04a7390e5","typeString":"literal_string \"MyToken\""},"value":"MyToken"},{"hexValue":"4d544b","id":1645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"253:5:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_793539e36336d70961c91bdb898dff4b065dbb5ef5ac709025f5b68be91dd01e","typeString":"literal_string \"MTK\""},"value":"MTK"}],"id":1646,"kind":"baseConstructorSpecifier","modifierName":{"id":1643,"name":"ERC20","nameLocations":["236:5:9"],"nodeType":"IdentifierPath","referencedDeclaration":764,"src":"236:5:9"},"nodeType":"ModifierInvocation","src":"236:23:9"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1641,"mutability":"mutable","name":"amount","nameLocation":"228:6:9","nodeType":"VariableDeclaration","scope":1655,"src":"223:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1640,"name":"uint","nodeType":"ElementaryTypeName","src":"223:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"222:13:9"},"returnParameters":{"id":1647,"nodeType":"ParameterList","parameters":[],"src":"260:0:9"},"scope":1671,"src":"211:93:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1669,"nodeType":"Block","src":"378:36:9","statements":[{"expression":{"arguments":[{"id":1665,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1657,"src":"395:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1666,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1659,"src":"399:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1664,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":581,"src":"389:5:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"389:17:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1668,"nodeType":"ExpressionStatement","src":"389:17:9"}]},"functionSelector":"79c65068","id":1670,"implemented":true,"kind":"function","modifiers":[{"id":1662,"kind":"modifierInvocation","modifierName":{"id":1661,"name":"onlyOwner","nameLocations":["368:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"368:9:9"},"nodeType":"ModifierInvocation","src":"368:9:9"}],"name":"mintToken","nameLocation":"325:9:9","nodeType":"FunctionDefinition","parameters":{"id":1660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1657,"mutability":"mutable","name":"to","nameLocation":"343:2:9","nodeType":"VariableDeclaration","scope":1670,"src":"335:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1656,"name":"address","nodeType":"ElementaryTypeName","src":"335:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1659,"mutability":"mutable","name":"amount","nameLocation":"351:6:9","nodeType":"VariableDeclaration","scope":1670,"src":"346:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1658,"name":"uint","nodeType":"ElementaryTypeName","src":"346:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"334:24:9"},"returnParameters":{"id":1663,"nodeType":"ParameterList","parameters":[],"src":"378:0:9"},"scope":1671,"src":"316:98:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1672,"src":"171:246:9","usedErrors":[]}],"src":"33:386:9"},"id":9},"contracts/Staking_Contract.sol":{"ast":{"absolutePath":"contracts/Staking_Contract.sol","exportedSymbols":{"Address":[1609],"Context":[1631],"ERC20":[764],"IERC20":[842],"IERC20Metadata":[867],"IERC20Permit":[903],"ReentrancyGuard":[177],"SafeERC20":[1279],"Stacking":[2871]},"id":2872,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1673,"literals":["solidity","0.8",".18"],"nodeType":"PragmaDirective","src":"33:23:10"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":1674,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2872,"sourceUnit":765,"src":"60:55:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":1675,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2872,"sourceUnit":1280,"src":"117:65:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/security/ReentrancyGuard.sol","file":"@openzeppelin/contracts/security/ReentrancyGuard.sol","id":1676,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2872,"sourceUnit":178,"src":"184:62:10","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1678,"name":"ERC20","nameLocations":["370:5:10"],"nodeType":"IdentifierPath","referencedDeclaration":764,"src":"370:5:10"},"id":1679,"nodeType":"InheritanceSpecifier","src":"370:5:10"},{"baseName":{"id":1680,"name":"ReentrancyGuard","nameLocations":["376:15:10"],"nodeType":"IdentifierPath","referencedDeclaration":177,"src":"376:15:10"},"id":1681,"nodeType":"InheritanceSpecifier","src":"376:15:10"}],"canonicalName":"Stacking","contractDependencies":[],"contractKind":"contract","documentation":{"id":1677,"nodeType":"StructuredDocumentation","src":"250:99:10","text":"@title Stacking Contract\n @notice A smart contract for staking tokens and earning rewards"},"fullyImplemented":true,"id":2871,"linearizedBaseContracts":[2871,177,764,867,842,1631],"name":"Stacking","nameLocation":"358:8:10","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1685,"libraryName":{"id":1682,"name":"SafeERC20","nameLocations":["405:9:10"],"nodeType":"IdentifierPath","referencedDeclaration":1279,"src":"405:9:10"},"nodeType":"UsingForDirective","src":"399:27:10","typeName":{"id":1684,"nodeType":"UserDefinedTypeName","pathNode":{"id":1683,"name":"IERC20","nameLocations":["419:6:10"],"nodeType":"IdentifierPath","referencedDeclaration":842,"src":"419:6:10"},"referencedDeclaration":842,"src":"419:6:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$842","typeString":"contract IERC20"}}},{"errorSelector":"b0d79d67","id":1687,"name":"Insuffient_balance","nameLocation":"469:18:10","nodeType":"ErrorDefinition","parameters":{"id":1686,"nodeType":"ParameterList","parameters":[],"src":"487:2:10"},"src":"463:27:10"},{"errorSelector":"2083cd40","id":1689,"name":"InvalidPool","nameLocation":"502:11:10","nodeType":"ErrorDefinition","parameters":{"id":1688,"nodeType":"ParameterList","parameters":[],"src":"513:2:10"},"src":"496:20:10"},{"errorSelector":"845efa9b","id":1691,"name":"ClaimedUpToPool","nameLocation":"528:15:10","nodeType":"ErrorDefinition","parameters":{"id":1690,"nodeType":"ParameterList","parameters":[],"src":"543:2:10"},"src":"522:24:10"},{"errorSelector":"9fe7bfd9","id":1693,"name":"NothingStaked","nameLocation":"558:13:10","nodeType":"ErrorDefinition","parameters":{"id":1692,"nodeType":"ParameterList","parameters":[],"src":"571:2:10"},"src":"552:22:10"},{"anonymous":false,"eventSelector":"58bc26fb087f2767999c63d19083d6f2a8db51605df3e2901ecd5c0e54591ae8","id":1701,"name":"StakeDetails","nameLocation":"607:12:10","nodeType":"EventDefinition","parameters":{"id":1700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1695,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"646:4:10","nodeType":"VariableDeclaration","scope":1701,"src":"630:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1694,"name":"address","nodeType":"ElementaryTypeName","src":"630:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1697,"indexed":false,"mutability":"mutable","name":"newAmount","nameLocation":"669:9:10","nodeType":"VariableDeclaration","scope":1701,"src":"661:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1696,"name":"uint256","nodeType":"ElementaryTypeName","src":"661:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1699,"indexed":false,"mutability":"mutable","name":"newWeightAmount","nameLocation":"697:15:10","nodeType":"VariableDeclaration","scope":1701,"src":"689:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1698,"name":"uint256","nodeType":"ElementaryTypeName","src":"689:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"619:100:10"},"src":"601:119:10"},{"anonymous":false,"eventSelector":"0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f75","id":1707,"name":"Unstaked","nameLocation":"734:8:10","nodeType":"EventDefinition","parameters":{"id":1706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1703,"indexed":false,"mutability":"mutable","name":"from","nameLocation":"751:4:10","nodeType":"VariableDeclaration","scope":1707,"src":"743:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1702,"name":"address","nodeType":"ElementaryTypeName","src":"743:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1705,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"762:6:10","nodeType":"VariableDeclaration","scope":1707,"src":"757:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1704,"name":"uint","nodeType":"ElementaryTypeName","src":"757:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"742:27:10"},"src":"728:42:10"},{"canonicalName":"Stacking.Stake","id":1714,"members":[{"constant":false,"id":1709,"mutability":"mutable","name":"amountStaked","nameLocation":"882:12:10","nodeType":"VariableDeclaration","scope":1714,"src":"874:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1708,"name":"uint256","nodeType":"ElementaryTypeName","src":"874:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1711,"mutability":"mutable","name":"lastInteraction","nameLocation":"962:15:10","nodeType":"VariableDeclaration","scope":1714,"src":"954:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1710,"name":"uint256","nodeType":"ElementaryTypeName","src":"954:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1713,"mutability":"mutable","name":"weightAtLastInteraction","nameLocation":"1055:23:10","nodeType":"VariableDeclaration","scope":1714,"src":"1047:31:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1712,"name":"uint256","nodeType":"ElementaryTypeName","src":"1047:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Stake","nameLocation":"857:5:10","nodeType":"StructDefinition","scope":2871,"src":"850:288:10","visibility":"public"},{"canonicalName":"Stacking.Pool","id":1725,"members":[{"constant":false,"id":1716,"mutability":"mutable","name":"volume","nameLocation":"1217:6:10","nodeType":"VariableDeclaration","scope":1725,"src":"1209:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1715,"name":"uint256","nodeType":"ElementaryTypeName","src":"1209:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1718,"mutability":"mutable","name":"totalClaimed","nameLocation":"1288:12:10","nodeType":"VariableDeclaration","scope":1725,"src":"1280:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1717,"name":"uint256","nodeType":"ElementaryTypeName","src":"1280:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1720,"mutability":"mutable","name":"startTime","nameLocation":"1359:9:10","nodeType":"VariableDeclaration","scope":1725,"src":"1351:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1719,"name":"uint256","nodeType":"ElementaryTypeName","src":"1351:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1722,"mutability":"mutable","name":"endTime","nameLocation":"1418:7:10","nodeType":"VariableDeclaration","scope":1725,"src":"1410:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1721,"name":"uint256","nodeType":"ElementaryTypeName","src":"1410:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1724,"mutability":"mutable","name":"weightAtEnd","nameLocation":"1475:11:10","nodeType":"VariableDeclaration","scope":1725,"src":"1467:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1723,"name":"uint256","nodeType":"ElementaryTypeName","src":"1467:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Pool","nameLocation":"1193:4:10","nodeType":"StructDefinition","scope":2871,"src":"1186:350:10","visibility":"public"},{"constant":false,"functionSelector":"3e0dc34e","id":1727,"mutability":"mutable","name":"poolId","nameLocation":"1580:6:10","nodeType":"VariableDeclaration","scope":2871,"src":"1565:21:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1726,"name":"uint256","nodeType":"ElementaryTypeName","src":"1565:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"817b1cd2","id":1729,"mutability":"mutable","name":"totalStaked","nameLocation":"1648:11:10","nodeType":"VariableDeclaration","scope":2871,"src":"1633:26:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1728,"name":"uint256","nodeType":"ElementaryTypeName","src":"1633:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"ee5508f9","id":1731,"mutability":"mutable","name":"timeToDouble","nameLocation":"1723:12:10","nodeType":"VariableDeclaration","scope":2871,"src":"1708:27:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1730,"name":"uint256","nodeType":"ElementaryTypeName","src":"1708:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"c7ee005e","id":1733,"mutability":"immutable","name":"prime","nameLocation":"1816:5:10","nodeType":"VariableDeclaration","scope":2871,"src":"1791:30:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1732,"name":"address","nodeType":"ElementaryTypeName","src":"1791:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"8f71a265","id":1735,"mutability":"mutable","name":"lastInteraction","nameLocation":"1881:15:10","nodeType":"VariableDeclaration","scope":2871,"src":"1866:30:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1734,"name":"uint256","nodeType":"ElementaryTypeName","src":"1866:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"57b4702f","id":1737,"mutability":"mutable","name":"_contractWeight","nameLocation":"1978:15:10","nodeType":"VariableDeclaration","scope":2871,"src":"1963:30:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1736,"name":"uint256","nodeType":"ElementaryTypeName","src":"1963:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"f85f91b4","id":1739,"mutability":"mutable","name":"unclaimedRewards","nameLocation":"2052:16:10","nodeType":"VariableDeclaration","scope":2871,"src":"2037:31:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1738,"name":"uint256","nodeType":"ElementaryTypeName","src":"2037:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"081e3eda","id":1741,"mutability":"mutable","name":"poolLength","nameLocation":"2121:10:10","nodeType":"VariableDeclaration","scope":2871,"src":"2106:25:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1740,"name":"uint256","nodeType":"ElementaryTypeName","src":"2106:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"id":1743,"mutability":"mutable","name":"_totalSupply","nameLocation":"2189:12:10","nodeType":"VariableDeclaration","scope":2871,"src":"2173:28:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1742,"name":"uint256","nodeType":"ElementaryTypeName","src":"2173:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"functionSelector":"65c65c1e","id":1747,"mutability":"mutable","name":"poolLeftOff","nameLocation":"2288:11:10","nodeType":"VariableDeclaration","scope":2871,"src":"2253:46:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1746,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1744,"name":"address","nodeType":"ElementaryTypeName","src":"2261:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2253:27:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1745,"name":"uint256","nodeType":"ElementaryTypeName","src":"2272:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"id":1751,"mutability":"mutable","name":"_balances","nameLocation":"2378:9:10","nodeType":"VariableDeclaration","scope":2871,"src":"2342:45:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1750,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1748,"name":"address","nodeType":"ElementaryTypeName","src":"2350:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2342:27:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1749,"name":"uint256","nodeType":"ElementaryTypeName","src":"2361:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"functionSelector":"692b69ae","id":1754,"mutability":"mutable","name":"currentPool","nameLocation":"2443:11:10","nodeType":"VariableDeclaration","scope":2871,"src":"2431:23:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$1725_storage","typeString":"struct Stacking.Pool"},"typeName":{"id":1753,"nodeType":"UserDefinedTypeName","pathNode":{"id":1752,"name":"Pool","nameLocations":["2431:4:10"],"nodeType":"IdentifierPath","referencedDeclaration":1725,"src":"2431:4:10"},"referencedDeclaration":1725,"src":"2431:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$1725_storage_ptr","typeString":"struct Stacking.Pool"}},"visibility":"public"},{"constant":false,"functionSelector":"796d3fae","id":1760,"mutability":"mutable","name":"userClaimedPool","nameLocation":"2549:15:10","nodeType":"VariableDeclaration","scope":2871,"src":"2497:67:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(address => mapping(uint256 => bool))"},"typeName":{"id":1759,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1755,"name":"address","nodeType":"ElementaryTypeName","src":"2505:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2497:44:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(address => mapping(uint256 => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1758,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1756,"name":"uint256","nodeType":"ElementaryTypeName","src":"2524:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2516:24:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1757,"name":"bool","nodeType":"ElementaryTypeName","src":"2535:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"public"},{"constant":false,"functionSelector":"675cdd63","id":1766,"mutability":"mutable","name":"_userWeightAtPool","nameLocation":"2661:17:10","nodeType":"VariableDeclaration","scope":2871,"src":"2606:72:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"},"typeName":{"id":1765,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1761,"name":"address","nodeType":"ElementaryTypeName","src":"2614:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2606:47:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1764,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1762,"name":"uint256","nodeType":"ElementaryTypeName","src":"2633:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2625:27:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1763,"name":"uint256","nodeType":"ElementaryTypeName","src":"2644:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"public"},{"constant":false,"functionSelector":"fa2a9da9","id":1771,"mutability":"mutable","name":"stakeDetails","nameLocation":"2763:12:10","nodeType":"VariableDeclaration","scope":2871,"src":"2730:45:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Stake_$1714_storage_$","typeString":"mapping(address => struct Stacking.Stake)"},"typeName":{"id":1770,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1767,"name":"address","nodeType":"ElementaryTypeName","src":"2738:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2730:25:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Stake_$1714_storage_$","typeString":"mapping(address => struct Stacking.Stake)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1769,"nodeType":"UserDefinedTypeName","pathNode":{"id":1768,"name":"Stake","nameLocations":["2749:5:10"],"nodeType":"IdentifierPath","referencedDeclaration":1714,"src":"2749:5:10"},"referencedDeclaration":1714,"src":"2749:5:10","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$1714_storage_ptr","typeString":"struct Stacking.Stake"}}},"visibility":"public"},{"constant":false,"functionSelector":"7a260b3f","id":1776,"mutability":"mutable","name":"poolDetails","nameLocation":"2850:11:10","nodeType":"VariableDeclaration","scope":2871,"src":"2818:43:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Pool_$1725_storage_$","typeString":"mapping(uint256 => struct Stacking.Pool)"},"typeName":{"id":1775,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1772,"name":"uint256","nodeType":"ElementaryTypeName","src":"2826:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2818:24:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Pool_$1725_storage_$","typeString":"mapping(uint256 => struct Stacking.Pool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1774,"nodeType":"UserDefinedTypeName","pathNode":{"id":1773,"name":"Pool","nameLocations":["2837:4:10"],"nodeType":"IdentifierPath","referencedDeclaration":1725,"src":"2837:4:10"},"referencedDeclaration":1725,"src":"2837:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$1725_storage_ptr","typeString":"struct Stacking.Pool"}}},"visibility":"public"},{"constant":false,"functionSelector":"09639761","id":1780,"mutability":"mutable","name":"claimLeftOff","nameLocation":"2942:12:10","nodeType":"VariableDeclaration","scope":2871,"src":"2907:47:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1779,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1777,"name":"address","nodeType":"ElementaryTypeName","src":"2915:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2907:27:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1778,"name":"uint256","nodeType":"ElementaryTypeName","src":"2926:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"body":{"id":1842,"nodeType":"Block","src":"3445:348:10","statements":[{"expression":{"id":1798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1796,"name":"prime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1733,"src":"3456:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1797,"name":"_prime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"3463:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3456:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1799,"nodeType":"ExpressionStatement","src":"3456:13:10"},{"expression":{"id":1802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1800,"name":"timeToDouble","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1731,"src":"3480:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1801,"name":"_timeToDouble","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1783,"src":"3495:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3480:28:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1803,"nodeType":"ExpressionStatement","src":"3480:28:10"},{"expression":{"id":1806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1804,"name":"poolLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1741,"src":"3519:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1805,"name":"_poolLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1785,"src":"3532:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3519:24:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1807,"nodeType":"ExpressionStatement","src":"3519:24:10"},{"expression":{"id":1815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1808,"name":"currentPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1754,"src":"3554:11:10","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$1725_storage","typeString":"struct Stacking.Pool storage ref"}},"id":1810,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3566:7:10","memberName":"endTime","nodeType":"MemberAccess","referencedDeclaration":1722,"src":"3554:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1811,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3576:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3582:9:10","memberName":"timestamp","nodeType":"MemberAccess","src":"3576:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1813,"name":"_firstPoolStartIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1787,"src":"3594:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3576:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3554:57:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1816,"nodeType":"ExpressionStatement","src":"3554:57:10"},{"expression":{"id":1825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":1817,"name":"poolDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"3622:11:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Pool_$1725_storage_$","typeString":"mapping(uint256 => struct Stacking.Pool storage ref)"}},"id":1819,"indexExpression":{"hexValue":"30","id":1818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3634:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3622:14:10","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$1725_storage","typeString":"struct Stacking.Pool storage ref"}},"id":1820,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3637:7:10","memberName":"endTime","nodeType":"MemberAccess","referencedDeclaration":1722,"src":"3622:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1821,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3647:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3653:9:10","memberName":"timestamp","nodeType":"MemberAccess","src":"3647:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1823,"name":"_firstPoolStartIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1787,"src":"3665:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3647:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3622:60:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1826,"nodeType":"ExpressionStatement","src":"3622:60:10"},{"expression":{"id":1832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1827,"name":"currentPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1754,"src":"3693:11:10","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$1725_storage","typeString":"struct Stacking.Pool storage ref"}},"id":1829,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3705:9:10","memberName":"startTime","nodeType":"MemberAccess","referencedDeclaration":1720,"src":"3693:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1830,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3717:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3723:9:10","memberName":"timestamp","nodeType":"MemberAccess","src":"3717:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3693:39:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1833,"nodeType":"ExpressionStatement","src":"3693:39:10"},{"expression":{"id":1840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":1834,"name":"poolDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"3743:11:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Pool_$1725_storage_$","typeString":"mapping(uint256 => struct Stacking.Pool storage ref)"}},"id":1836,"indexExpression":{"hexValue":"30","id":1835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3755:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3743:14:10","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$1725_storage","typeString":"struct Stacking.Pool storage ref"}},"id":1837,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3758:9:10","memberName":"startTime","nodeType":"MemberAccess","referencedDeclaration":1720,"src":"3743:24:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1838,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3770:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3776:9:10","memberName":"timestamp","nodeType":"MemberAccess","src":"3770:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3743:42:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1841,"nodeType":"ExpressionStatement","src":"3743:42:10"}]},"documentation":{"id":1781,"nodeType":"StructuredDocumentation","src":"3006:268:10","text":"@dev Constructor function.\n @param _timeToDouble Time period for doubling stake weight\n @param _poolLength Total number of pools\n @param _firstPoolStartIn Time until the first pool starts\n @param _prime Address of the prime contract"},"id":1843,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"4d59546f6b656e","id":1792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3428:9:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_e395abb03b431f9e2fb8d23d1fa8b4d09845e1a6107b032eaff6f29300185dc9","typeString":"literal_string \"MYToken\""},"value":"MYToken"},{"hexValue":"4d54","id":1793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3439:4:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_5b3fa69ad8a0666e5be827c0e18983e3cd29364bca2f1d8ae5b20eac8ce61c0d","typeString":"literal_string \"MT\""},"value":"MT"}],"id":1794,"kind":"baseConstructorSpecifier","modifierName":{"id":1791,"name":"ERC20","nameLocations":["3422:5:10"],"nodeType":"IdentifierPath","referencedDeclaration":764,"src":"3422:5:10"},"nodeType":"ModifierInvocation","src":"3422:22:10"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1783,"mutability":"mutable","name":"_timeToDouble","nameLocation":"3310:13:10","nodeType":"VariableDeclaration","scope":1843,"src":"3302:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1782,"name":"uint256","nodeType":"ElementaryTypeName","src":"3302:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1785,"mutability":"mutable","name":"_poolLength","nameLocation":"3342:11:10","nodeType":"VariableDeclaration","scope":1843,"src":"3334:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1784,"name":"uint256","nodeType":"ElementaryTypeName","src":"3334:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1787,"mutability":"mutable","name":"_firstPoolStartIn","nameLocation":"3372:17:10","nodeType":"VariableDeclaration","scope":1843,"src":"3364:25:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1786,"name":"uint256","nodeType":"ElementaryTypeName","src":"3364:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1789,"mutability":"mutable","name":"_prime","nameLocation":"3408:6:10","nodeType":"VariableDeclaration","scope":1843,"src":"3400:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1788,"name":"address","nodeType":"ElementaryTypeName","src":"3400:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3291:130:10"},"returnParameters":{"id":1795,"nodeType":"ParameterList","parameters":[],"src":"3445:0:10"},"scope":2871,"src":"3280:513:10","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1870,"nodeType":"Block","src":"4063:131:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1852,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1846,"src":"4082:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4101:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1854,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4093:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1853,"name":"address","nodeType":"ElementaryTypeName","src":"4093:7:10","typeDescriptions":{}}},"id":1856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4093:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4082:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","id":1858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4105:33:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""},"value":"ERC20: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""}],"id":1851,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4074:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4074:65:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1860,"nodeType":"ExpressionStatement","src":"4074:65:10"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4166:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1863,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4158:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1862,"name":"address","nodeType":"ElementaryTypeName","src":"4158:7:10","typeDescriptions":{}}},"id":1865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4158:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1866,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1846,"src":"4170:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1867,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1848,"src":"4179:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1861,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1958,"src":"4150:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4150:36:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1869,"nodeType":"ExpressionStatement","src":"4150:36:10"}]},"documentation":{"id":1844,"nodeType":"StructuredDocumentation","src":"3805:192:10","text":" @dev Mints new tokens and assigns them to the specified account.\n @param account The account to mint tokens for.\n @param amount The amount of tokens to mint."},"functionSelector":"79c65068","id":1871,"implemented":true,"kind":"function","modifiers":[],"name":"mintToken","nameLocation":"4012:9:10","nodeType":"FunctionDefinition","parameters":{"id":1849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1846,"mutability":"mutable","name":"account","nameLocation":"4030:7:10","nodeType":"VariableDeclaration","scope":1871,"src":"4022:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1845,"name":"address","nodeType":"ElementaryTypeName","src":"4022:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1848,"mutability":"mutable","name":"amount","nameLocation":"4046:6:10","nodeType":"VariableDeclaration","scope":1871,"src":"4038:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1847,"name":"uint256","nodeType":"ElementaryTypeName","src":"4038:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4021:32:10"},"returnParameters":{"id":1850,"nodeType":"ParameterList","parameters":[],"src":"4063:0:10"},"scope":2871,"src":"4003:191:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[276],"body":{"id":1884,"nodeType":"Block","src":"4487:44:10","statements":[{"expression":{"baseExpression":{"id":1880,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1751,"src":"4505:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1882,"indexExpression":{"id":1881,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"4515:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4505:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1879,"id":1883,"nodeType":"Return","src":"4498:25:10"}]},"documentation":{"id":1872,"nodeType":"StructuredDocumentation","src":"4206:191:10","text":" @dev Returns the token balance of the specified account.\n @param account The account to retrieve the balance for.\n @return The token balance of the account."},"functionSelector":"70a08231","id":1885,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"4412:9:10","nodeType":"FunctionDefinition","overrides":{"id":1876,"nodeType":"OverrideSpecifier","overrides":[],"src":"4459:8:10"},"parameters":{"id":1875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1874,"mutability":"mutable","name":"account","nameLocation":"4430:7:10","nodeType":"VariableDeclaration","scope":1885,"src":"4422:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1873,"name":"address","nodeType":"ElementaryTypeName","src":"4422:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4421:17:10"},"returnParameters":{"id":1879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1878,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1885,"src":"4478:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1877,"name":"uint256","nodeType":"ElementaryTypeName","src":"4478:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4477:9:10"},"scope":2871,"src":"4403:128:10","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1957,"nodeType":"Block","src":"4878:922:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1895,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"4893:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4909:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1897,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4901:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1896,"name":"address","nodeType":"ElementaryTypeName","src":"4901:7:10","typeDescriptions":{}}},"id":1899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4901:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4893:18:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1928,"nodeType":"Block","src":"4968:329:10","statements":[{"assignments":[1907],"declarations":[{"constant":false,"id":1907,"mutability":"mutable","name":"fromBalance","nameLocation":"4991:11:10","nodeType":"VariableDeclaration","scope":1928,"src":"4983:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1906,"name":"uint256","nodeType":"ElementaryTypeName","src":"4983:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1911,"initialValue":{"baseExpression":{"id":1908,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1751,"src":"5005:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1910,"indexExpression":{"id":1909,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"5015:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5005:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4983:37:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1913,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1907,"src":"5043:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1914,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1892,"src":"5058:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5043:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365","id":1916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5066:40:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""},"value":"ERC20: transfer amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""}],"id":1912,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5035:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5035:72:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1918,"nodeType":"ExpressionStatement","src":"5035:72:10"},{"id":1927,"nodeType":"UncheckedBlock","src":"5122:164:10","statements":[{"expression":{"id":1925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1919,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1751,"src":"5232:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1921,"indexExpression":{"id":1920,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"5242:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5232:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1922,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1907,"src":"5250:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1923,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1892,"src":"5264:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5250:20:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5232:38:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1926,"nodeType":"ExpressionStatement","src":"5232:38:10"}]}]},"id":1929,"nodeType":"IfStatement","src":"4889:408:10","trueBody":{"id":1905,"nodeType":"Block","src":"4913:49:10","statements":[{"expression":{"id":1903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1901,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1743,"src":"4928:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1902,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1892,"src":"4944:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4928:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1904,"nodeType":"ExpressionStatement","src":"4928:22:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1930,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1890,"src":"5313:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5327:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1932,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5319:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1931,"name":"address","nodeType":"ElementaryTypeName","src":"5319:7:10","typeDescriptions":{}}},"id":1934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5319:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5313:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1949,"nodeType":"Block","src":"5536:213:10","statements":[{"id":1948,"nodeType":"UncheckedBlock","src":"5551:187:10","statements":[{"expression":{"id":1946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1942,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1751,"src":"5699:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1944,"indexExpression":{"id":1943,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1890,"src":"5709:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5699:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1945,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1892,"src":"5716:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5699:23:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1947,"nodeType":"ExpressionStatement","src":"5699:23:10"}]}]},"id":1950,"nodeType":"IfStatement","src":"5309:440:10","trueBody":{"id":1941,"nodeType":"Block","src":"5331:199:10","statements":[{"id":1940,"nodeType":"UncheckedBlock","src":"5346:173:10","statements":[{"expression":{"id":1938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1936,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1743,"src":"5481:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1937,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1892,"src":"5497:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5481:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1939,"nodeType":"ExpressionStatement","src":"5481:22:10"}]}]}},{"eventCall":{"arguments":[{"id":1952,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"5775:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1953,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1890,"src":"5781:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1954,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1892,"src":"5785:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1951,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":776,"src":"5766:8:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5766:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1956,"nodeType":"EmitStatement","src":"5761:31:10"}]},"documentation":{"id":1886,"nodeType":"StructuredDocumentation","src":"4543:252:10","text":" @dev Internal function to update token balances during transfers.\n @param from The account to transfer tokens from.\n @param to The account to transfer tokens to.\n @param amount The amount of tokens to transfer."},"id":1958,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"4810:7:10","nodeType":"FunctionDefinition","parameters":{"id":1893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1888,"mutability":"mutable","name":"from","nameLocation":"4826:4:10","nodeType":"VariableDeclaration","scope":1958,"src":"4818:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1887,"name":"address","nodeType":"ElementaryTypeName","src":"4818:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1890,"mutability":"mutable","name":"to","nameLocation":"4840:2:10","nodeType":"VariableDeclaration","scope":1958,"src":"4832:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1889,"name":"address","nodeType":"ElementaryTypeName","src":"4832:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1892,"mutability":"mutable","name":"amount","nameLocation":"4852:6:10","nodeType":"VariableDeclaration","scope":1958,"src":"4844:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1891,"name":"uint256","nodeType":"ElementaryTypeName","src":"4844:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4817:42:10"},"returnParameters":{"id":1894,"nodeType":"ParameterList","parameters":[],"src":"4878:0:10"},"scope":2871,"src":"4801:999:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[301],"body":{"id":1982,"nodeType":"Block","src":"6172:107:10","statements":[{"assignments":[1970],"declarations":[{"constant":false,"id":1970,"mutability":"mutable","name":"owner","nameLocation":"6191:5:10","nodeType":"VariableDeclaration","scope":1982,"src":"6183:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1969,"name":"address","nodeType":"ElementaryTypeName","src":"6183:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1973,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1971,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[2030],"referencedDeclaration":2030,"src":"6198:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6198:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6183:27:10"},{"expression":{"arguments":[{"id":1975,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1970,"src":"6231:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1976,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1961,"src":"6238:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1977,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1963,"src":"6242:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1974,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[2020],"referencedDeclaration":2020,"src":"6221:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6221:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1979,"nodeType":"ExpressionStatement","src":"6221:28:10"},{"expression":{"hexValue":"74727565","id":1980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6267:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1968,"id":1981,"nodeType":"Return","src":"6260:11:10"}]},"documentation":{"id":1959,"nodeType":"StructuredDocumentation","src":"5807:272:10","text":" @dev Transfers tokens from the sender's account to the specified account.\n @param to The account to transfer tokens to.\n @param amount The amount of tokens to transfer.\n @return True if the transfer is successful, false otherwise."},"functionSelector":"a9059cbb","id":1983,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"6095:8:10","nodeType":"FunctionDefinition","overrides":{"id":1965,"nodeType":"OverrideSpecifier","overrides":[],"src":"6147:8:10"},"parameters":{"id":1964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1961,"mutability":"mutable","name":"to","nameLocation":"6112:2:10","nodeType":"VariableDeclaration","scope":1983,"src":"6104:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1960,"name":"address","nodeType":"ElementaryTypeName","src":"6104:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1963,"mutability":"mutable","name":"amount","nameLocation":"6124:6:10","nodeType":"VariableDeclaration","scope":1983,"src":"6116:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1962,"name":"uint256","nodeType":"ElementaryTypeName","src":"6116:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6103:28:10"},"returnParameters":{"id":1968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1967,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1983,"src":"6166:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1966,"name":"bool","nodeType":"ElementaryTypeName","src":"6166:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6165:6:10"},"scope":2871,"src":"6086:193:10","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[524],"body":{"id":2019,"nodeType":"Block","src":"6367:198:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1994,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"6386:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6402:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1996,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6394:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1995,"name":"address","nodeType":"ElementaryTypeName","src":"6394:7:10","typeDescriptions":{}}},"id":1998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6394:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6386:18:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373","id":2000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6406:39:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""},"value":"ERC20: transfer from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""}],"id":1993,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6378:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6378:68:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2002,"nodeType":"ExpressionStatement","src":"6378:68:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2004,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1987,"src":"6465:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6479:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2006,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6471:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2005,"name":"address","nodeType":"ElementaryTypeName","src":"6471:7:10","typeDescriptions":{}}},"id":2008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6471:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6465:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472657373","id":2010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6483:37:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""},"value":"ERC20: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""}],"id":2003,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6457:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6457:64:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2012,"nodeType":"ExpressionStatement","src":"6457:64:10"},{"expression":{"arguments":[{"id":2014,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"6540:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2015,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1987,"src":"6546:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2016,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1989,"src":"6550:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2013,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1958,"src":"6532:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6532:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2018,"nodeType":"ExpressionStatement","src":"6532:25:10"}]},"id":2020,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"6297:9:10","nodeType":"FunctionDefinition","overrides":{"id":1991,"nodeType":"OverrideSpecifier","overrides":[],"src":"6358:8:10"},"parameters":{"id":1990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1985,"mutability":"mutable","name":"from","nameLocation":"6315:4:10","nodeType":"VariableDeclaration","scope":2020,"src":"6307:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1984,"name":"address","nodeType":"ElementaryTypeName","src":"6307:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1987,"mutability":"mutable","name":"to","nameLocation":"6329:2:10","nodeType":"VariableDeclaration","scope":2020,"src":"6321:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1986,"name":"address","nodeType":"ElementaryTypeName","src":"6321:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1989,"mutability":"mutable","name":"amount","nameLocation":"6341:6:10","nodeType":"VariableDeclaration","scope":2020,"src":"6333:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1988,"name":"uint256","nodeType":"ElementaryTypeName","src":"6333:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6306:42:10"},"returnParameters":{"id":1992,"nodeType":"ParameterList","parameters":[],"src":"6367:0:10"},"scope":2871,"src":"6288:277:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1621],"body":{"id":2029,"nodeType":"Block","src":"6645:36:10","statements":[{"expression":{"expression":{"id":2026,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6663:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6667:6:10","memberName":"sender","nodeType":"MemberAccess","src":"6663:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2025,"id":2028,"nodeType":"Return","src":"6656:17:10"}]},"id":2030,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"6582:10:10","nodeType":"FunctionDefinition","overrides":{"id":2022,"nodeType":"OverrideSpecifier","overrides":[],"src":"6617:8:10"},"parameters":{"id":2021,"nodeType":"ParameterList","parameters":[],"src":"6592:2:10"},"returnParameters":{"id":2025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2024,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2030,"src":"6636:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2023,"name":"address","nodeType":"ElementaryTypeName","src":"6636:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6635:9:10"},"scope":2871,"src":"6573:108:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1630],"body":{"id":2039,"nodeType":"Block","src":"6765:34:10","statements":[{"expression":{"expression":{"id":2036,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6783:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6787:4:10","memberName":"data","nodeType":"MemberAccess","src":"6783:8:10","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2035,"id":2038,"nodeType":"Return","src":"6776:15:10"}]},"id":2040,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"6698:8:10","nodeType":"FunctionDefinition","overrides":{"id":2032,"nodeType":"OverrideSpecifier","overrides":[],"src":"6731:8:10"},"parameters":{"id":2031,"nodeType":"ParameterList","parameters":[],"src":"6706:2:10"},"returnParameters":{"id":2035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2034,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2040,"src":"6749:14:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2033,"name":"bytes","nodeType":"ElementaryTypeName","src":"6749:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6748:16:10"},"scope":2871,"src":"6689:110:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[262],"body":{"id":2048,"nodeType":"Block","src":"6877:38:10","statements":[{"expression":{"id":2046,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1743,"src":"6895:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2045,"id":2047,"nodeType":"Return","src":"6888:19:10"}]},"functionSelector":"18160ddd","id":2049,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"6816:11:10","nodeType":"FunctionDefinition","overrides":{"id":2042,"nodeType":"OverrideSpecifier","overrides":[],"src":"6850:8:10"},"parameters":{"id":2041,"nodeType":"ParameterList","parameters":[],"src":"6827:2:10"},"returnParameters":{"id":2045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2044,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2049,"src":"6868:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2043,"name":"uint256","nodeType":"ElementaryTypeName","src":"6868:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6867:9:10"},"scope":2871,"src":"6807:108:10","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2161,"nodeType":"Block","src":"7087:1000:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":2056,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7112:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7116:6:10","memberName":"sender","nodeType":"MemberAccess","src":"7112:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2055,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[1885],"referencedDeclaration":1885,"src":"7102:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7102:21:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2059,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2052,"src":"7126:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7102:30:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2065,"nodeType":"IfStatement","src":"7098:90:10","trueBody":{"id":2064,"nodeType":"Block","src":"7134:54:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2061,"name":"Insuffient_balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1687,"src":"7156:18:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7156:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2063,"nodeType":"RevertStatement","src":"7149:27:10"}]}},{"expression":{"arguments":[{"arguments":[{"id":2069,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"7215:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_Stacking_$2871","typeString":"contract Stacking"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Stacking_$2871","typeString":"contract Stacking"}],"id":2068,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7207:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2067,"name":"address","nodeType":"ElementaryTypeName","src":"7207:7:10","typeDescriptions":{}}},"id":2070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7207:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2071,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2052,"src":"7222:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2066,"name":"transfer","nodeType":"Identifier","overloadedDeclarations":[1983],"referencedDeclaration":1983,"src":"7198:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) returns (bool)"}},"id":2072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7198:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2073,"nodeType":"ExpressionStatement","src":"7198:31:10"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2074,"name":"updatePool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2630,"src":"7241:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7241:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2076,"nodeType":"ExpressionStatement","src":"7241:12:10"},{"expression":{"arguments":[{"expression":{"id":2078,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7285:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7289:6:10","memberName":"sender","nodeType":"MemberAccess","src":"7285:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2077,"name":"_setUserWeightAtPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2546,"src":"7264:20:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7264:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2081,"nodeType":"ExpressionStatement","src":"7264:32:10"},{"expression":{"arguments":[{"hexValue":"74727565","id":2083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7329:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2084,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2052,"src":"7335:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2082,"name":"_adjustContractWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"7307:21:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256)"}},"id":2085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7307:35:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2086,"nodeType":"ExpressionStatement","src":"7307:35:10"},{"expression":{"id":2089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2087,"name":"totalStaked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"7363:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2088,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2052,"src":"7378:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7363:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2090,"nodeType":"ExpressionStatement","src":"7363:21:10"},{"assignments":[2093],"declarations":[{"constant":false,"id":2093,"mutability":"mutable","name":"_stake","nameLocation":"7408:6:10","nodeType":"VariableDeclaration","scope":2161,"src":"7395:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$1714_memory_ptr","typeString":"struct Stacking.Stake"},"typeName":{"id":2092,"nodeType":"UserDefinedTypeName","pathNode":{"id":2091,"name":"Stake","nameLocations":["7395:5:10"],"nodeType":"IdentifierPath","referencedDeclaration":1714,"src":"7395:5:10"},"referencedDeclaration":1714,"src":"7395:5:10","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$1714_storage_ptr","typeString":"struct Stacking.Stake"}},"visibility":"internal"}],"id":2098,"initialValue":{"baseExpression":{"id":2094,"name":"stakeDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"7417:12:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Stake_$1714_storage_$","typeString":"mapping(address => struct Stacking.Stake storage ref)"}},"id":2097,"indexExpression":{"expression":{"id":2095,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7430:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7434:6:10","memberName":"sender","nodeType":"MemberAccess","src":"7430:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7417:24:10","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$1714_storage","typeString":"struct Stacking.Stake storage ref"}},"nodeType":"VariableDeclarationStatement","src":"7395:46:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2099,"name":"_stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2093,"src":"7458:6:10","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$1714_memory_ptr","typeString":"struct Stacking.Stake memory"}},"id":2100,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7465:12:10","memberName":"amountStaked","nodeType":"MemberAccess","referencedDeclaration":1709,"src":"7458:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7480:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7458:23:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2130,"nodeType":"Block","src":"7780:66:10","statements":[{"expression":{"id":2128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2124,"name":"_stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2093,"src":"7795:6:10","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$1714_memory_ptr","typeString":"struct Stacking.Stake memory"}},"id":2126,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7802:23:10","memberName":"weightAtLastInteraction","nodeType":"MemberAccess","referencedDeclaration":1713,"src":"7795:30:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2127,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2052,"src":"7828:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7795:39:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2129,"nodeType":"ExpressionStatement","src":"7795:39:10"}]},"id":2131,"nodeType":"IfStatement","src":"7454:392:10","trueBody":{"id":2123,"nodeType":"Block","src":"7483:291:10","statements":[{"assignments":[2104],"declarations":[{"constant":false,"id":2104,"mutability":"mutable","name":"_additionalWeight","nameLocation":"7506:17:10","nodeType":"VariableDeclaration","scope":2123,"src":"7498:25:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2103,"name":"uint256","nodeType":"ElementaryTypeName","src":"7498:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2113,"initialValue":{"arguments":[{"expression":{"id":2106,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7576:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7582:9:10","memberName":"timestamp","nodeType":"MemberAccess","src":"7576:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2108,"name":"_stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2093,"src":"7610:6:10","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$1714_memory_ptr","typeString":"struct Stacking.Stake memory"}},"id":2109,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7617:15:10","memberName":"lastInteraction","nodeType":"MemberAccess","referencedDeclaration":1711,"src":"7610:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2110,"name":"_stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2093,"src":"7651:6:10","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$1714_memory_ptr","typeString":"struct Stacking.Stake memory"}},"id":2111,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7658:12:10","memberName":"amountStaked","nodeType":"MemberAccess","referencedDeclaration":1709,"src":"7651:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2105,"name":"_weightIncreaseSinceInteraction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"7526:31:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":2112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7526:159:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7498:187:10"},{"expression":{"id":2121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2114,"name":"_stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2093,"src":"7700:6:10","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$1714_memory_ptr","typeString":"struct Stacking.Stake memory"}},"id":2116,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7707:23:10","memberName":"weightAtLastInteraction","nodeType":"MemberAccess","referencedDeclaration":1713,"src":"7700:30:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2117,"name":"_additionalWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2104,"src":"7735:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2118,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2052,"src":"7755:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7735:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2120,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7734:28:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7700:62:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2122,"nodeType":"ExpressionStatement","src":"7700:62:10"}]}},{"expression":{"id":2136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2132,"name":"_stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2093,"src":"7858:6:10","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$1714_memory_ptr","typeString":"struct Stacking.Stake memory"}},"id":2134,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7865:12:10","memberName":"amountStaked","nodeType":"MemberAccess","referencedDeclaration":1709,"src":"7858:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2135,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2052,"src":"7881:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7858:29:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2137,"nodeType":"ExpressionStatement","src":"7858:29:10"},{"expression":{"id":2143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2138,"name":"_stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2093,"src":"7898:6:10","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$1714_memory_ptr","typeString":"struct Stacking.Stake memory"}},"id":2140,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7905:15:10","memberName":"lastInteraction","nodeType":"MemberAccess","referencedDeclaration":1711,"src":"7898:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2141,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7923:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7929:9:10","memberName":"timestamp","nodeType":"MemberAccess","src":"7923:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7898:40:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2144,"nodeType":"ExpressionStatement","src":"7898:40:10"},{"expression":{"id":2150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2145,"name":"stakeDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"7951:12:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Stake_$1714_storage_$","typeString":"mapping(address => struct Stacking.Stake storage ref)"}},"id":2148,"indexExpression":{"expression":{"id":2146,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7964:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7968:6:10","memberName":"sender","nodeType":"MemberAccess","src":"7964:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7951:24:10","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$1714_storage","typeString":"struct Stacking.Stake storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2149,"name":"_stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2093,"src":"7978:6:10","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$1714_memory_ptr","typeString":"struct Stacking.Stake memory"}},"src":"7951:33:10","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$1714_storage","typeString":"struct Stacking.Stake storage ref"}},"id":2151,"nodeType":"ExpressionStatement","src":"7951:33:10"},{"eventCall":{"arguments":[{"expression":{"id":2153,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8015:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8019:6:10","memberName":"sender","nodeType":"MemberAccess","src":"8015:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2155,"name":"_stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2093,"src":"8027:6:10","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$1714_memory_ptr","typeString":"struct Stacking.Stake memory"}},"id":2156,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8034:12:10","memberName":"amountStaked","nodeType":"MemberAccess","referencedDeclaration":1709,"src":"8027:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2157,"name":"_stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2093,"src":"8048:6:10","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$1714_memory_ptr","typeString":"struct Stacking.Stake memory"}},"id":2158,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8055:23:10","memberName":"weightAtLastInteraction","nodeType":"MemberAccess","referencedDeclaration":1713,"src":"8048:30:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2152,"name":"StakeDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1701,"src":"8002:12:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":2159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8002:77:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2160,"nodeType":"EmitStatement","src":"7997:82:10"}]},"documentation":{"id":2050,"nodeType":"StructuredDocumentation","src":"6927:115:10","text":" @dev Stakes a specified amount of tokens.\n @param amount The amount of tokens to stake."},"functionSelector":"a07b10d6","id":2162,"implemented":true,"kind":"function","modifiers":[],"name":"stak","nameLocation":"7057:4:10","nodeType":"FunctionDefinition","parameters":{"id":2053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2052,"mutability":"mutable","name":"amount","nameLocation":"7070:6:10","nodeType":"VariableDeclaration","scope":2162,"src":"7062:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2051,"name":"uint256","nodeType":"ElementaryTypeName","src":"7062:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7061:16:10"},"returnParameters":{"id":2054,"nodeType":"ParameterList","parameters":[],"src":"7087:0:10"},"scope":2871,"src":"7048:1039:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2301,"nodeType":"Block","src":"8286:1218:10","statements":[{"expression":{"arguments":[{"expression":{"id":2171,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8318:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8322:6:10","memberName":"sender","nodeType":"MemberAccess","src":"8318:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2170,"name":"_setUserWeightAtPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2546,"src":"8297:20:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8297:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2174,"nodeType":"ExpressionStatement","src":"8297:32:10"},{"assignments":[2176],"declarations":[{"constant":false,"id":2176,"mutability":"mutable","name":"_pendingRewards","nameLocation":"8350:15:10","nodeType":"VariableDeclaration","scope":2301,"src":"8342:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2175,"name":"uint256","nodeType":"ElementaryTypeName","src":"8342:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2177,"nodeType":"VariableDeclarationStatement","src":"8342:23:10"},{"assignments":[2179],"declarations":[{"constant":false,"id":2179,"mutability":"mutable","name":"_claimLeftOff","nameLocation":"8384:13:10","nodeType":"VariableDeclaration","scope":2301,"src":"8376:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2178,"name":"uint256","nodeType":"ElementaryTypeName","src":"8376:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2184,"initialValue":{"baseExpression":{"id":2180,"name":"claimLeftOff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1780,"src":"8400:12:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2183,"indexExpression":{"expression":{"id":2181,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8413:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8417:6:10","memberName":"sender","nodeType":"MemberAccess","src":"8413:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8400:24:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8376:48:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2185,"name":"_claimLeftOff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2179,"src":"8441:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2186,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1727,"src":"8458:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8441:23:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2191,"nodeType":"IfStatement","src":"8437:53:10","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2188,"name":"ClaimedUpToPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1691,"src":"8473:15:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8473:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2190,"nodeType":"RevertStatement","src":"8466:24:10"}},{"body":{"id":2280,"nodeType":"Block","src":"8564:776:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8583:43:10","subExpression":{"baseExpression":{"baseExpression":{"id":2200,"name":"userClaimedPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1760,"src":"8584:15:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(address => mapping(uint256 => bool))"}},"id":2203,"indexExpression":{"expression":{"id":2201,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8600:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8604:6:10","memberName":"sender","nodeType":"MemberAccess","src":"8600:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8584:27:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":2205,"indexExpression":{"id":2204,"name":"_claimLeftOff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2179,"src":"8612:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8584:42:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2208,"name":"_claimLeftOff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2179,"src":"8651:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2207,"name":"contractWeightAtPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2775,"src":"8630:20:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":2209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8630:35:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8668:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8630:39:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8583:86:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2279,"nodeType":"IfStatement","src":"8579:750:10","trueBody":{"id":2278,"nodeType":"Block","src":"8671:658:10","statements":[{"expression":{"id":2220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2213,"name":"userClaimedPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1760,"src":"8690:15:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(address => mapping(uint256 => bool))"}},"id":2217,"indexExpression":{"expression":{"id":2214,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8706:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8710:6:10","memberName":"sender","nodeType":"MemberAccess","src":"8706:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8690:27:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":2218,"indexExpression":{"id":2216,"name":"_claimLeftOff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2179,"src":"8718:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8690:42:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8735:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"8690:49:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2221,"nodeType":"ExpressionStatement","src":"8690:49:10"},{"assignments":[2224],"declarations":[{"constant":false,"id":2224,"mutability":"mutable","name":"_pool","nameLocation":"8770:5:10","nodeType":"VariableDeclaration","scope":2278,"src":"8758:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$1725_memory_ptr","typeString":"struct Stacking.Pool"},"typeName":{"id":2223,"nodeType":"UserDefinedTypeName","pathNode":{"id":2222,"name":"Pool","nameLocations":["8758:4:10"],"nodeType":"IdentifierPath","referencedDeclaration":1725,"src":"8758:4:10"},"referencedDeclaration":1725,"src":"8758:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$1725_storage_ptr","typeString":"struct Stacking.Pool"}},"visibility":"internal"}],"id":2228,"initialValue":{"baseExpression":{"id":2225,"name":"poolDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"8778:11:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Pool_$1725_storage_$","typeString":"mapping(uint256 => struct Stacking.Pool storage ref)"}},"id":2227,"indexExpression":{"id":2226,"name":"_claimLeftOff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2179,"src":"8790:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8778:26:10","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$1725_storage","typeString":"struct Stacking.Pool storage ref"}},"nodeType":"VariableDeclarationStatement","src":"8758:46:10"},{"assignments":[2230],"declarations":[{"constant":false,"id":2230,"mutability":"mutable","name":"_weightAtPool","nameLocation":"8831:13:10","nodeType":"VariableDeclaration","scope":2278,"src":"8823:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2229,"name":"uint256","nodeType":"ElementaryTypeName","src":"8823:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2237,"initialValue":{"baseExpression":{"baseExpression":{"id":2231,"name":"_userWeightAtPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1766,"src":"8847:17:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":2234,"indexExpression":{"expression":{"id":2232,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8865:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8869:6:10","memberName":"sender","nodeType":"MemberAccess","src":"8865:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8847:29:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2236,"indexExpression":{"id":2235,"name":"_claimLeftOff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2179,"src":"8877:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8847:44:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8823:68:10"},{"assignments":[2239],"declarations":[{"constant":false,"id":2239,"mutability":"mutable","name":"_poolRewards","nameLocation":"8920:12:10","nodeType":"VariableDeclaration","scope":2278,"src":"8912:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2238,"name":"uint256","nodeType":"ElementaryTypeName","src":"8912:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2249,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2240,"name":"_pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2224,"src":"8936:5:10","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$1725_memory_ptr","typeString":"struct Stacking.Pool memory"}},"id":2241,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8942:6:10","memberName":"volume","nodeType":"MemberAccess","referencedDeclaration":1716,"src":"8936:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2242,"name":"_weightAtPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2230,"src":"8951:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8936:28:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2244,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8935:30:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"arguments":[{"id":2246,"name":"_claimLeftOff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2179,"src":"9010:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2245,"name":"contractWeightAtPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2775,"src":"8989:20:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":2247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8989:35:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8935:89:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8912:112:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2250,"name":"_pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2224,"src":"9047:5:10","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$1725_memory_ptr","typeString":"struct Stacking.Pool memory"}},"id":2251,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9053:12:10","memberName":"totalClaimed","nodeType":"MemberAccess","referencedDeclaration":1718,"src":"9047:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2252,"name":"_poolRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"9068:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9047:33:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":2254,"name":"_pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2224,"src":"9083:5:10","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$1725_memory_ptr","typeString":"struct Stacking.Pool memory"}},"id":2255,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9089:6:10","memberName":"volume","nodeType":"MemberAccess","referencedDeclaration":1716,"src":"9083:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9047:48:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2266,"nodeType":"IfStatement","src":"9043:145:10","trueBody":{"id":2265,"nodeType":"Block","src":"9097:91:10","statements":[{"expression":{"id":2263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2257,"name":"_poolRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"9120:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2258,"name":"_pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2224,"src":"9135:5:10","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$1725_memory_ptr","typeString":"struct Stacking.Pool memory"}},"id":2259,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9141:6:10","memberName":"volume","nodeType":"MemberAccess","referencedDeclaration":1716,"src":"9135:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":2260,"name":"_pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2224,"src":"9150:5:10","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$1725_memory_ptr","typeString":"struct Stacking.Pool memory"}},"id":2261,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9156:12:10","memberName":"totalClaimed","nodeType":"MemberAccess","referencedDeclaration":1718,"src":"9150:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9135:33:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9120:48:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2264,"nodeType":"ExpressionStatement","src":"9120:48:10"}]}},{"expression":{"id":2269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2267,"name":"_pendingRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2176,"src":"9208:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2268,"name":"_poolRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"9227:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9208:31:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2270,"nodeType":"ExpressionStatement","src":"9208:31:10"},{"expression":{"id":2276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2271,"name":"poolDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"9258:11:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Pool_$1725_storage_$","typeString":"mapping(uint256 => struct Stacking.Pool storage ref)"}},"id":2273,"indexExpression":{"id":2272,"name":"_claimLeftOff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2179,"src":"9270:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9258:26:10","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$1725_storage","typeString":"struct Stacking.Pool storage ref"}},"id":2274,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9285:12:10","memberName":"totalClaimed","nodeType":"MemberAccess","referencedDeclaration":1718,"src":"9258:39:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2275,"name":"_poolRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"9301:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9258:55:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2277,"nodeType":"ExpressionStatement","src":"9258:55:10"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2194,"name":"_claimLeftOff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2179,"src":"8523:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2195,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1727,"src":"8539:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8523:22:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2281,"initializationExpression":{"expression":{"id":2192,"name":"_claimLeftOff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2179,"src":"8508:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2193,"nodeType":"ExpressionStatement","src":"8508:13:10"},"loopExpression":{"expression":{"id":2198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"8547:15:10","subExpression":{"id":2197,"name":"_claimLeftOff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2179,"src":"8549:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2199,"nodeType":"ExpressionStatement","src":"8547:15:10"},"nodeType":"ForStatement","src":"8503:837:10"},{"expression":{"id":2287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2282,"name":"claimLeftOff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1780,"src":"9358:12:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2285,"indexExpression":{"expression":{"id":2283,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9371:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9375:6:10","memberName":"sender","nodeType":"MemberAccess","src":"9371:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9358:24:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2286,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1727,"src":"9385:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9358:33:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2288,"nodeType":"ExpressionStatement","src":"9358:33:10"},{"expression":{"id":2291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2289,"name":"unclaimedRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1739,"src":"9402:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":2290,"name":"_pendingRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2176,"src":"9422:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9402:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2292,"nodeType":"ExpressionStatement","src":"9402:35:10"},{"expression":{"arguments":[{"id":2297,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"9475:3:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2298,"name":"_pendingRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2176,"src":"9480:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2294,"name":"prime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1733,"src":"9455:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2293,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":842,"src":"9448:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$842_$","typeString":"type(contract IERC20)"}},"id":2295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9448:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$842","typeString":"contract IERC20"}},"id":2296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9462:12:10","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":936,"src":"9448:26:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$842_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$842_$","typeString":"function (contract IERC20,address,uint256)"}},"id":2299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9448:48:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2300,"nodeType":"ExpressionStatement","src":"9448:48:10"}]},"documentation":{"id":2163,"nodeType":"StructuredDocumentation","src":"8099:131:10","text":" @dev Claims the pending rewards for the caller.\n @param _to The address to send the claimed rewards to."},"functionSelector":"1e83409a","id":2302,"implemented":true,"kind":"function","modifiers":[{"id":2168,"kind":"modifierInvocation","modifierName":{"id":2167,"name":"nonReentrant","nameLocations":["8273:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":142,"src":"8273:12:10"},"nodeType":"ModifierInvocation","src":"8273:12:10"}],"name":"claim","nameLocation":"8245:5:10","nodeType":"FunctionDefinition","parameters":{"id":2166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2165,"mutability":"mutable","name":"_to","nameLocation":"8259:3:10","nodeType":"VariableDeclaration","scope":2302,"src":"8251:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2164,"name":"address","nodeType":"ElementaryTypeName","src":"8251:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8250:13:10"},"returnParameters":{"id":2169,"nodeType":"ParameterList","parameters":[],"src":"8286:0:10"},"scope":2871,"src":"8236:1268:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2394,"nodeType":"Block","src":"9709:680:10","statements":[{"assignments":[2312],"declarations":[{"constant":false,"id":2312,"mutability":"mutable","name":"_stake","nameLocation":"9733:6:10","nodeType":"VariableDeclaration","scope":2394,"src":"9720:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$1714_memory_ptr","typeString":"struct Stacking.Stake"},"typeName":{"id":2311,"nodeType":"UserDefinedTypeName","pathNode":{"id":2310,"name":"Stake","nameLocations":["9720:5:10"],"nodeType":"IdentifierPath","referencedDeclaration":1714,"src":"9720:5:10"},"referencedDeclaration":1714,"src":"9720:5:10","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$1714_storage_ptr","typeString":"struct Stacking.Stake"}},"visibility":"internal"}],"id":2317,"initialValue":{"baseExpression":{"id":2313,"name":"stakeDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"9742:12:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Stake_$1714_storage_$","typeString":"mapping(address => struct Stacking.Stake storage ref)"}},"id":2316,"indexExpression":{"expression":{"id":2314,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9755:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9759:6:10","memberName":"sender","nodeType":"MemberAccess","src":"9755:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9742:24:10","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$1714_storage","typeString":"struct Stacking.Stake storage ref"}},"nodeType":"VariableDeclarationStatement","src":"9720:46:10"},{"assignments":[2319],"declarations":[{"constant":false,"id":2319,"mutability":"mutable","name":"_stakedAmount","nameLocation":"9795:13:10","nodeType":"VariableDeclaration","scope":2394,"src":"9787:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2318,"name":"uint256","nodeType":"ElementaryTypeName","src":"9787:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2322,"initialValue":{"expression":{"id":2320,"name":"_stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2312,"src":"9811:6:10","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$1714_memory_ptr","typeString":"struct Stacking.Stake memory"}},"id":2321,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9818:12:10","memberName":"amountStaked","nodeType":"MemberAccess","referencedDeclaration":1709,"src":"9811:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9787:43:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2323,"name":"_stakedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2319,"src":"9847:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9864:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9847:18:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2329,"nodeType":"IfStatement","src":"9843:46:10","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2326,"name":"NothingStaked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1693,"src":"9874:13:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9874:15:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2328,"nodeType":"RevertStatement","src":"9867:22:10"}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2330,"name":"updatePool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2630,"src":"9902:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9902:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2332,"nodeType":"ExpressionStatement","src":"9902:12:10"},{"expression":{"arguments":[{"expression":{"id":2334,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9946:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9950:6:10","memberName":"sender","nodeType":"MemberAccess","src":"9946:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2333,"name":"_setUserWeightAtPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2546,"src":"9925:20:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9925:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2337,"nodeType":"ExpressionStatement","src":"9925:32:10"},{"expression":{"arguments":[{"hexValue":"66616c7365","id":2339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9990:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"id":2340,"name":"_stakedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2319,"src":"9997:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2338,"name":"_adjustContractWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"9968:21:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256)"}},"id":2341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9968:43:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2342,"nodeType":"ExpressionStatement","src":"9968:43:10"},{"expression":{"id":2345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2343,"name":"totalStaked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"10024:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":2344,"name":"_stakedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2319,"src":"10039:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10024:28:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2346,"nodeType":"ExpressionStatement","src":"10024:28:10"},{"expression":{"id":2351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2347,"name":"_stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2312,"src":"10065:6:10","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$1714_memory_ptr","typeString":"struct Stacking.Stake memory"}},"id":2349,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10072:12:10","memberName":"amountStaked","nodeType":"MemberAccess","referencedDeclaration":1709,"src":"10065:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10087:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10065:23:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2352,"nodeType":"ExpressionStatement","src":"10065:23:10"},{"expression":{"id":2358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2353,"name":"_stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2312,"src":"10099:6:10","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$1714_memory_ptr","typeString":"struct Stacking.Stake memory"}},"id":2355,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10106:15:10","memberName":"lastInteraction","nodeType":"MemberAccess","referencedDeclaration":1711,"src":"10099:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2356,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"10124:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10130:9:10","memberName":"timestamp","nodeType":"MemberAccess","src":"10124:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10099:40:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2359,"nodeType":"ExpressionStatement","src":"10099:40:10"},{"expression":{"id":2364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2360,"name":"_stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2312,"src":"10150:6:10","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$1714_memory_ptr","typeString":"struct Stacking.Stake memory"}},"id":2362,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10157:23:10","memberName":"weightAtLastInteraction","nodeType":"MemberAccess","referencedDeclaration":1713,"src":"10150:30:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10183:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10150:34:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2365,"nodeType":"ExpressionStatement","src":"10150:34:10"},{"expression":{"id":2371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2366,"name":"stakeDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"10197:12:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Stake_$1714_storage_$","typeString":"mapping(address => struct Stacking.Stake storage ref)"}},"id":2369,"indexExpression":{"expression":{"id":2367,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10210:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10214:6:10","memberName":"sender","nodeType":"MemberAccess","src":"10210:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10197:24:10","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$1714_storage","typeString":"struct Stacking.Stake storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2370,"name":"_stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2312,"src":"10224:6:10","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$1714_memory_ptr","typeString":"struct Stacking.Stake memory"}},"src":"10197:33:10","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$1714_storage","typeString":"struct Stacking.Stake storage ref"}},"id":2372,"nodeType":"ExpressionStatement","src":"10197:33:10"},{"expression":{"id":2380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2373,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1751,"src":"10241:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2378,"indexExpression":{"arguments":[{"id":2376,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"10259:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_Stacking_$2871","typeString":"contract Stacking"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Stacking_$2871","typeString":"contract Stacking"}],"id":2375,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10251:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2374,"name":"address","nodeType":"ElementaryTypeName","src":"10251:7:10","typeDescriptions":{}}},"id":2377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10251:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10241:24:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":2379,"name":"_stakedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2319,"src":"10267:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10241:39:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2381,"nodeType":"ExpressionStatement","src":"10241:39:10"},{"expression":{"id":2386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2382,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1751,"src":"10291:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2384,"indexExpression":{"id":2383,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2305,"src":"10301:3:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10291:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2385,"name":"_stakedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2319,"src":"10307:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10291:29:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2387,"nodeType":"ExpressionStatement","src":"10291:29:10"},{"eventCall":{"arguments":[{"expression":{"id":2389,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10355:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10359:6:10","memberName":"sender","nodeType":"MemberAccess","src":"10355:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2391,"name":"_stakedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2319,"src":"10367:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2388,"name":"Unstaked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1707,"src":"10346:8:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10346:35:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2393,"nodeType":"EmitStatement","src":"10341:40:10"}]},"documentation":{"id":2303,"nodeType":"StructuredDocumentation","src":"9510:140:10","text":" @dev Unstakes the tokens currently staked by the caller.\n @param _to The address to send the unstaked tokens to."},"functionSelector":"f2888dbb","id":2395,"implemented":true,"kind":"function","modifiers":[{"id":2308,"kind":"modifierInvocation","modifierName":{"id":2307,"name":"nonReentrant","nameLocations":["9696:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":142,"src":"9696:12:10"},"nodeType":"ModifierInvocation","src":"9696:12:10"}],"name":"unstake","nameLocation":"9666:7:10","nodeType":"FunctionDefinition","parameters":{"id":2306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2305,"mutability":"mutable","name":"_to","nameLocation":"9682:3:10","nodeType":"VariableDeclaration","scope":2395,"src":"9674:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2304,"name":"address","nodeType":"ElementaryTypeName","src":"9674:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9673:13:10"},"returnParameters":{"id":2309,"nodeType":"ParameterList","parameters":[],"src":"9709:0:10"},"scope":2871,"src":"9657:732:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2469,"nodeType":"Block","src":"10739:698:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2405,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1727,"src":"10754:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":2406,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2400,"src":"10764:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10754:17:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2411,"nodeType":"IfStatement","src":"10750:43:10","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2408,"name":"InvalidPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1689,"src":"10780:11:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10780:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2410,"nodeType":"RevertStatement","src":"10773:20:10"}},{"assignments":[2413],"declarations":[{"constant":false,"id":2413,"mutability":"mutable","name":"_poolLeftOff","nameLocation":"10812:12:10","nodeType":"VariableDeclaration","scope":2469,"src":"10804:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2412,"name":"uint256","nodeType":"ElementaryTypeName","src":"10804:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2417,"initialValue":{"baseExpression":{"id":2414,"name":"poolLeftOff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1747,"src":"10827:11:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2416,"indexExpression":{"id":2415,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2398,"src":"10839:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10827:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10804:41:10"},{"assignments":[2420],"declarations":[{"constant":false,"id":2420,"mutability":"mutable","name":"_stake","nameLocation":"10869:6:10","nodeType":"VariableDeclaration","scope":2469,"src":"10856:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$1714_memory_ptr","typeString":"struct Stacking.Stake"},"typeName":{"id":2419,"nodeType":"UserDefinedTypeName","pathNode":{"id":2418,"name":"Stake","nameLocations":["10856:5:10"],"nodeType":"IdentifierPath","referencedDeclaration":1714,"src":"10856:5:10"},"referencedDeclaration":1714,"src":"10856:5:10","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$1714_storage_ptr","typeString":"struct Stacking.Stake"}},"visibility":"internal"}],"id":2424,"initialValue":{"baseExpression":{"id":2421,"name":"stakeDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"10878:12:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Stake_$1714_storage_$","typeString":"mapping(address => struct Stacking.Stake storage ref)"}},"id":2423,"indexExpression":{"id":2422,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2398,"src":"10891:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10878:19:10","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$1714_storage","typeString":"struct Stacking.Stake storage ref"}},"nodeType":"VariableDeclarationStatement","src":"10856:41:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2425,"name":"_poolLeftOff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2413,"src":"10914:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2426,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2400,"src":"10929:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10914:22:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2467,"nodeType":"Block","src":"11001:429:10","statements":[{"assignments":[2438],"declarations":[{"constant":false,"id":2438,"mutability":"mutable","name":"_pool","nameLocation":"11028:5:10","nodeType":"VariableDeclaration","scope":2467,"src":"11016:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$1725_memory_ptr","typeString":"struct Stacking.Pool"},"typeName":{"id":2437,"nodeType":"UserDefinedTypeName","pathNode":{"id":2436,"name":"Pool","nameLocations":["11016:4:10"],"nodeType":"IdentifierPath","referencedDeclaration":1725,"src":"11016:4:10"},"referencedDeclaration":1725,"src":"11016:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$1725_storage_ptr","typeString":"struct Stacking.Pool"}},"visibility":"internal"}],"id":2442,"initialValue":{"baseExpression":{"id":2439,"name":"poolDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"11036:11:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Pool_$1725_storage_$","typeString":"mapping(uint256 => struct Stacking.Pool storage ref)"}},"id":2441,"indexExpression":{"id":2440,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2400,"src":"11048:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11036:20:10","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$1725_storage","typeString":"struct Stacking.Pool storage ref"}},"nodeType":"VariableDeclarationStatement","src":"11016:40:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2443,"name":"_stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2420,"src":"11075:6:10","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$1714_memory_ptr","typeString":"struct Stacking.Stake memory"}},"id":2444,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11082:12:10","memberName":"amountStaked","nodeType":"MemberAccess","referencedDeclaration":1709,"src":"11075:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11097:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11075:23:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2466,"nodeType":"IfStatement","src":"11071:348:10","trueBody":{"id":2465,"nodeType":"Block","src":"11100:319:10","statements":[{"assignments":[2448],"declarations":[{"constant":false,"id":2448,"mutability":"mutable","name":"_additionalWeight","nameLocation":"11127:17:10","nodeType":"VariableDeclaration","scope":2465,"src":"11119:25:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2447,"name":"uint256","nodeType":"ElementaryTypeName","src":"11119:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2457,"initialValue":{"arguments":[{"expression":{"id":2450,"name":"_pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2438,"src":"11201:5:10","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$1725_memory_ptr","typeString":"struct Stacking.Pool memory"}},"id":2451,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11207:7:10","memberName":"endTime","nodeType":"MemberAccess","referencedDeclaration":1722,"src":"11201:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2452,"name":"_stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2420,"src":"11237:6:10","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$1714_memory_ptr","typeString":"struct Stacking.Stake memory"}},"id":2453,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11244:15:10","memberName":"lastInteraction","nodeType":"MemberAccess","referencedDeclaration":1711,"src":"11237:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2454,"name":"_stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2420,"src":"11282:6:10","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$1714_memory_ptr","typeString":"struct Stacking.Stake memory"}},"id":2455,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11289:12:10","memberName":"amountStaked","nodeType":"MemberAccess","referencedDeclaration":1709,"src":"11282:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2449,"name":"_weightIncreaseSinceInteraction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"11147:31:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":2456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11147:173:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11119:201:10"},{"expression":{"id":2463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2458,"name":"userWeight_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2403,"src":"11339:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2459,"name":"_additionalWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2448,"src":"11353:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":2460,"name":"_stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2420,"src":"11373:6:10","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$1714_memory_ptr","typeString":"struct Stacking.Stake memory"}},"id":2461,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11380:23:10","memberName":"weightAtLastInteraction","nodeType":"MemberAccess","referencedDeclaration":1713,"src":"11373:30:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11353:50:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11339:64:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2464,"nodeType":"ExpressionStatement","src":"11339:64:10"}]}}]},"id":2468,"nodeType":"IfStatement","src":"10910:520:10","trueBody":{"expression":{"id":2434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2428,"name":"userWeight_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2403,"src":"10938:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"baseExpression":{"id":2429,"name":"_userWeightAtPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1766,"src":"10952:17:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":2431,"indexExpression":{"id":2430,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2398,"src":"10970:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10952:24:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2433,"indexExpression":{"id":2432,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2400,"src":"10977:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10952:33:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10938:47:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2435,"nodeType":"ExpressionStatement","src":"10938:47:10"}}]},"documentation":{"id":2396,"nodeType":"StructuredDocumentation","src":"10398:228:10","text":" @dev Returns the weight of the specified user at the specified pool.\n @param _user The user address.\n @param _poolId The pool ID.\n @return userWeight_ The weight of the user at the pool."},"functionSelector":"d429a5ea","id":2470,"implemented":true,"kind":"function","modifiers":[],"name":"userWeightAtPool","nameLocation":"10648:16:10","nodeType":"FunctionDefinition","parameters":{"id":2401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2398,"mutability":"mutable","name":"_user","nameLocation":"10673:5:10","nodeType":"VariableDeclaration","scope":2470,"src":"10665:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2397,"name":"address","nodeType":"ElementaryTypeName","src":"10665:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2400,"mutability":"mutable","name":"_poolId","nameLocation":"10688:7:10","nodeType":"VariableDeclaration","scope":2470,"src":"10680:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2399,"name":"uint256","nodeType":"ElementaryTypeName","src":"10680:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10664:32:10"},"returnParameters":{"id":2404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2403,"mutability":"mutable","name":"userWeight_","nameLocation":"10726:11:10","nodeType":"VariableDeclaration","scope":2470,"src":"10718:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2402,"name":"uint256","nodeType":"ElementaryTypeName","src":"10718:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10717:21:10"},"scope":2871,"src":"10639:798:10","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2545,"nodeType":"Block","src":"11629:891:10","statements":[{"assignments":[2477],"declarations":[{"constant":false,"id":2477,"mutability":"mutable","name":"_poolLeftOff","nameLocation":"11648:12:10","nodeType":"VariableDeclaration","scope":2545,"src":"11640:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2476,"name":"uint256","nodeType":"ElementaryTypeName","src":"11640:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2481,"initialValue":{"baseExpression":{"id":2478,"name":"poolLeftOff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1747,"src":"11663:11:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2480,"indexExpression":{"id":2479,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2473,"src":"11675:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11663:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11640:41:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2482,"name":"_poolLeftOff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2477,"src":"11698:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2483,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1727,"src":"11714:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11698:22:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2544,"nodeType":"IfStatement","src":"11694:819:10","trueBody":{"id":2543,"nodeType":"Block","src":"11722:791:10","statements":[{"assignments":[2487],"declarations":[{"constant":false,"id":2487,"mutability":"mutable","name":"_stake","nameLocation":"11750:6:10","nodeType":"VariableDeclaration","scope":2543,"src":"11737:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$1714_memory_ptr","typeString":"struct Stacking.Stake"},"typeName":{"id":2486,"nodeType":"UserDefinedTypeName","pathNode":{"id":2485,"name":"Stake","nameLocations":["11737:5:10"],"nodeType":"IdentifierPath","referencedDeclaration":1714,"src":"11737:5:10"},"referencedDeclaration":1714,"src":"11737:5:10","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$1714_storage_ptr","typeString":"struct Stacking.Stake"}},"visibility":"internal"}],"id":2491,"initialValue":{"baseExpression":{"id":2488,"name":"stakeDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"11759:12:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Stake_$1714_storage_$","typeString":"mapping(address => struct Stacking.Stake storage ref)"}},"id":2490,"indexExpression":{"id":2489,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2473,"src":"11772:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11759:19:10","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$1714_storage","typeString":"struct Stacking.Stake storage ref"}},"nodeType":"VariableDeclarationStatement","src":"11737:41:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2492,"name":"_stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2487,"src":"11797:6:10","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$1714_memory_ptr","typeString":"struct Stacking.Stake memory"}},"id":2493,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11804:12:10","memberName":"amountStaked","nodeType":"MemberAccess","referencedDeclaration":1709,"src":"11797:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11819:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11797:23:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2536,"nodeType":"IfStatement","src":"11793:656:10","trueBody":{"id":2535,"nodeType":"Block","src":"11822:627:10","statements":[{"body":{"id":2533,"nodeType":"Block","src":"11899:535:10","statements":[{"assignments":[2506],"declarations":[{"constant":false,"id":2506,"mutability":"mutable","name":"_pool","nameLocation":"11934:5:10","nodeType":"VariableDeclaration","scope":2533,"src":"11922:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$1725_memory_ptr","typeString":"struct Stacking.Pool"},"typeName":{"id":2505,"nodeType":"UserDefinedTypeName","pathNode":{"id":2504,"name":"Pool","nameLocations":["11922:4:10"],"nodeType":"IdentifierPath","referencedDeclaration":1725,"src":"11922:4:10"},"referencedDeclaration":1725,"src":"11922:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$1725_storage_ptr","typeString":"struct Stacking.Pool"}},"visibility":"internal"}],"id":2510,"initialValue":{"baseExpression":{"id":2507,"name":"poolDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"11942:11:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Pool_$1725_storage_$","typeString":"mapping(uint256 => struct Stacking.Pool storage ref)"}},"id":2509,"indexExpression":{"id":2508,"name":"_poolLeftOff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2477,"src":"11954:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11942:25:10","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$1725_storage","typeString":"struct Stacking.Pool storage ref"}},"nodeType":"VariableDeclarationStatement","src":"11922:45:10"},{"assignments":[2512],"declarations":[{"constant":false,"id":2512,"mutability":"mutable","name":"_additionalWeight","nameLocation":"12019:17:10","nodeType":"VariableDeclaration","scope":2533,"src":"12011:25:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2511,"name":"uint256","nodeType":"ElementaryTypeName","src":"12011:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2521,"initialValue":{"arguments":[{"expression":{"id":2514,"name":"_pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2506,"src":"12097:5:10","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$1725_memory_ptr","typeString":"struct Stacking.Pool memory"}},"id":2515,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12103:7:10","memberName":"endTime","nodeType":"MemberAccess","referencedDeclaration":1722,"src":"12097:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2516,"name":"_stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2487,"src":"12137:6:10","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$1714_memory_ptr","typeString":"struct Stacking.Stake memory"}},"id":2517,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12144:15:10","memberName":"lastInteraction","nodeType":"MemberAccess","referencedDeclaration":1711,"src":"12137:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2518,"name":"_stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2487,"src":"12186:6:10","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$1714_memory_ptr","typeString":"struct Stacking.Stake memory"}},"id":2519,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12193:12:10","memberName":"amountStaked","nodeType":"MemberAccess","referencedDeclaration":1709,"src":"12186:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2513,"name":"_weightIncreaseSinceInteraction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"12039:31:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":2520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12039:189:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12011:217:10"},{"expression":{"id":2531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2522,"name":"_userWeightAtPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1766,"src":"12273:17:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":2525,"indexExpression":{"id":2523,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2473,"src":"12291:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12273:24:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2526,"indexExpression":{"id":2524,"name":"_poolLeftOff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2477,"src":"12298:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12273:38:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2527,"name":"_additionalWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"12339:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":2528,"name":"_stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2487,"src":"12384:6:10","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$1714_memory_ptr","typeString":"struct Stacking.Stake memory"}},"id":2529,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12391:23:10","memberName":"weightAtLastInteraction","nodeType":"MemberAccess","referencedDeclaration":1713,"src":"12384:30:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12339:75:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12273:141:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2532,"nodeType":"ExpressionStatement","src":"12273:141:10"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2498,"name":"_poolLeftOff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2477,"src":"11860:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2499,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1727,"src":"11875:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11860:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2534,"initializationExpression":{"expression":{"id":2496,"name":"_poolLeftOff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2477,"src":"11846:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2497,"nodeType":"ExpressionStatement","src":"11846:12:10"},"loopExpression":{"expression":{"id":2502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"11883:14:10","subExpression":{"id":2501,"name":"_poolLeftOff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2477,"src":"11885:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2503,"nodeType":"ExpressionStatement","src":"11883:14:10"},"nodeType":"ForStatement","src":"11841:593:10"}]}},{"expression":{"id":2541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2537,"name":"poolLeftOff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1747,"src":"12474:11:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2539,"indexExpression":{"id":2538,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2473,"src":"12486:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12474:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2540,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1727,"src":"12495:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12474:27:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2542,"nodeType":"ExpressionStatement","src":"12474:27:10"}]}}]},"documentation":{"id":2471,"nodeType":"StructuredDocumentation","src":"11445:124:10","text":" @dev Sets the user's weight at each pool up to the current pool.\n @param _user The user address."},"id":2546,"implemented":true,"kind":"function","modifiers":[],"name":"_setUserWeightAtPool","nameLocation":"11584:20:10","nodeType":"FunctionDefinition","parameters":{"id":2474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2473,"mutability":"mutable","name":"_user","nameLocation":"11613:5:10","nodeType":"VariableDeclaration","scope":2546,"src":"11605:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2472,"name":"address","nodeType":"ElementaryTypeName","src":"11605:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11604:15:10"},"returnParameters":{"id":2475,"nodeType":"ParameterList","parameters":[],"src":"11629:0:10"},"scope":2871,"src":"11575:945:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2629,"nodeType":"Block","src":"12666:818:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2550,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"12681:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12687:9:10","memberName":"timestamp","nodeType":"MemberAccess","src":"12681:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":2552,"name":"currentPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1754,"src":"12700:11:10","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$1725_storage","typeString":"struct Stacking.Pool storage ref"}},"id":2553,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12712:7:10","memberName":"endTime","nodeType":"MemberAccess","referencedDeclaration":1722,"src":"12700:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12681:38:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2628,"nodeType":"IfStatement","src":"12677:800:10","trueBody":{"id":2627,"nodeType":"Block","src":"12721:756:10","statements":[{"assignments":[2556],"declarations":[{"constant":false,"id":2556,"mutability":"mutable","name":"_additionalWeight","nameLocation":"12757:17:10","nodeType":"VariableDeclaration","scope":2627,"src":"12749:25:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2555,"name":"uint256","nodeType":"ElementaryTypeName","src":"12749:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2563,"initialValue":{"arguments":[{"expression":{"id":2558,"name":"currentPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1754,"src":"12827:11:10","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$1725_storage","typeString":"struct Stacking.Pool storage ref"}},"id":2559,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12839:7:10","memberName":"endTime","nodeType":"MemberAccess","referencedDeclaration":1722,"src":"12827:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2560,"name":"lastInteraction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1735,"src":"12865:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2561,"name":"totalStaked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"12899:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2557,"name":"_weightIncreaseSinceInteraction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"12777:31:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":2562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12777:148:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12749:176:10"},{"expression":{"id":2571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2564,"name":"poolDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"12953:11:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Pool_$1725_storage_$","typeString":"mapping(uint256 => struct Stacking.Pool storage ref)"}},"id":2566,"indexExpression":{"id":2565,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1727,"src":"12965:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12953:19:10","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$1725_storage","typeString":"struct Stacking.Pool storage ref"}},"id":2567,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12973:11:10","memberName":"weightAtEnd","nodeType":"MemberAccess","referencedDeclaration":1724,"src":"12953:31:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2568,"name":"_additionalWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2556,"src":"13004:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2569,"name":"_contractWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1737,"src":"13041:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13004:52:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12953:103:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2572,"nodeType":"ExpressionStatement","src":"12953:103:10"},{"expression":{"id":2574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"13082:8:10","subExpression":{"id":2573,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1727,"src":"13084:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2575,"nodeType":"ExpressionStatement","src":"13082:8:10"},{"assignments":[2578],"declarations":[{"constant":false,"id":2578,"mutability":"mutable","name":"_pool","nameLocation":"13119:5:10","nodeType":"VariableDeclaration","scope":2627,"src":"13107:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$1725_memory_ptr","typeString":"struct Stacking.Pool"},"typeName":{"id":2577,"nodeType":"UserDefinedTypeName","pathNode":{"id":2576,"name":"Pool","nameLocations":["13107:4:10"],"nodeType":"IdentifierPath","referencedDeclaration":1725,"src":"13107:4:10"},"referencedDeclaration":1725,"src":"13107:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$1725_storage_ptr","typeString":"struct Stacking.Pool"}},"visibility":"internal"}],"id":2579,"nodeType":"VariableDeclarationStatement","src":"13107:17:10"},{"expression":{"id":2594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2580,"name":"_pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2578,"src":"13139:5:10","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$1725_memory_ptr","typeString":"struct Stacking.Pool memory"}},"id":2582,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"13145:6:10","memberName":"volume","nodeType":"MemberAccess","referencedDeclaration":1716,"src":"13139:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2589,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"13186:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_Stacking_$2871","typeString":"contract Stacking"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Stacking_$2871","typeString":"contract Stacking"}],"id":2588,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13178:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2587,"name":"address","nodeType":"ElementaryTypeName","src":"13178:7:10","typeDescriptions":{}}},"id":2590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13178:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":2584,"name":"prime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1733,"src":"13161:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2583,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":842,"src":"13154:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$842_$","typeString":"type(contract IERC20)"}},"id":2585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13154:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$842","typeString":"contract IERC20"}},"id":2586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13168:9:10","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":799,"src":"13154:23:10","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13154:38:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2592,"name":"unclaimedRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1739,"src":"13195:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13154:57:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13139:72:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2595,"nodeType":"ExpressionStatement","src":"13139:72:10"},{"expression":{"id":2601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2596,"name":"_pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2578,"src":"13226:5:10","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$1725_memory_ptr","typeString":"struct Stacking.Pool memory"}},"id":2598,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"13232:9:10","memberName":"startTime","nodeType":"MemberAccess","referencedDeclaration":1720,"src":"13226:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2599,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"13244:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13250:9:10","memberName":"timestamp","nodeType":"MemberAccess","src":"13244:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13226:33:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2602,"nodeType":"ExpressionStatement","src":"13226:33:10"},{"expression":{"id":2610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2603,"name":"_pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2578,"src":"13274:5:10","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$1725_memory_ptr","typeString":"struct Stacking.Pool memory"}},"id":2605,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"13280:7:10","memberName":"endTime","nodeType":"MemberAccess","referencedDeclaration":1722,"src":"13274:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2606,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"13290:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13296:9:10","memberName":"timestamp","nodeType":"MemberAccess","src":"13290:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2608,"name":"poolLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1741,"src":"13308:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13290:28:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13274:44:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2611,"nodeType":"ExpressionStatement","src":"13274:44:10"},{"expression":{"id":2614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2612,"name":"currentPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1754,"src":"13345:11:10","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$1725_storage","typeString":"struct Stacking.Pool storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2613,"name":"_pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2578,"src":"13359:5:10","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$1725_memory_ptr","typeString":"struct Stacking.Pool memory"}},"src":"13345:19:10","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$1725_storage","typeString":"struct Stacking.Pool storage ref"}},"id":2615,"nodeType":"ExpressionStatement","src":"13345:19:10"},{"expression":{"id":2620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2616,"name":"poolDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"13379:11:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Pool_$1725_storage_$","typeString":"mapping(uint256 => struct Stacking.Pool storage ref)"}},"id":2618,"indexExpression":{"id":2617,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1727,"src":"13391:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13379:19:10","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$1725_storage","typeString":"struct Stacking.Pool storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2619,"name":"_pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2578,"src":"13401:5:10","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$1725_memory_ptr","typeString":"struct Stacking.Pool memory"}},"src":"13379:27:10","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$1725_storage","typeString":"struct Stacking.Pool storage ref"}},"id":2621,"nodeType":"ExpressionStatement","src":"13379:27:10"},{"expression":{"id":2625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2622,"name":"unclaimedRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1739,"src":"13433:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":2623,"name":"_pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2578,"src":"13453:5:10","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$1725_memory_ptr","typeString":"struct Stacking.Pool memory"}},"id":2624,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13459:6:10","memberName":"volume","nodeType":"MemberAccess","referencedDeclaration":1716,"src":"13453:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13433:32:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2626,"nodeType":"ExpressionStatement","src":"13433:32:10"}]}}]},"documentation":{"id":2547,"nodeType":"StructuredDocumentation","src":"12532:97:10","text":" @dev Updates the current pool if the current time exceeds the pool end time."},"id":2630,"implemented":true,"kind":"function","modifiers":[],"name":"updatePool","nameLocation":"12644:10:10","nodeType":"FunctionDefinition","parameters":{"id":2548,"nodeType":"ParameterList","parameters":[],"src":"12654:2:10"},"returnParameters":{"id":2549,"nodeType":"ParameterList","parameters":[],"src":"12666:0:10"},"scope":2871,"src":"12635:849:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2666,"nodeType":"Block","src":"14058:219:10","statements":[{"assignments":[2643],"declarations":[{"constant":false,"id":2643,"mutability":"mutable","name":"_timePassed","nameLocation":"14077:11:10","nodeType":"VariableDeclaration","scope":2666,"src":"14069:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2642,"name":"uint256","nodeType":"ElementaryTypeName","src":"14069:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2647,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2644,"name":"_timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2633,"src":"14091:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2645,"name":"_lastInteraction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2635,"src":"14104:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14091:29:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14069:51:10"},{"assignments":[2649],"declarations":[{"constant":false,"id":2649,"mutability":"mutable","name":"_multiplierReceived","nameLocation":"14139:19:10","nodeType":"VariableDeclaration","scope":2666,"src":"14131:27:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2648,"name":"uint256","nodeType":"ElementaryTypeName","src":"14131:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2656,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31653138","id":2650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14162:4:10","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2651,"name":"_timePassed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2643,"src":"14169:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14162:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2653,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14161:20:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2654,"name":"timeToDouble","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1731,"src":"14184:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14161:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14131:65:10"},{"expression":{"id":2664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2657,"name":"additionalWeight_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2640,"src":"14207:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2658,"name":"_baseAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2637,"src":"14228:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2659,"name":"_multiplierReceived","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2649,"src":"14242:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14228:33:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2661,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14227:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31653138","id":2662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14265:4:10","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"14227:42:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14207:62:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2665,"nodeType":"ExpressionStatement","src":"14207:62:10"}]},"documentation":{"id":2631,"nodeType":"StructuredDocumentation","src":"13491:369:10","text":" @dev Calculates the additional weight increase since the last interaction.\n @param _timestamp The current timestamp.\n @param _lastInteraction The timestamp of the last interaction.\n @param _baseAmount The base amount to calculate the additional weight increase.\n @return additionalWeight_ The additional weight increase."},"id":2667,"implemented":true,"kind":"function","modifiers":[],"name":"_weightIncreaseSinceInteraction","nameLocation":"13875:31:10","nodeType":"FunctionDefinition","parameters":{"id":2638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2633,"mutability":"mutable","name":"_timestamp","nameLocation":"13925:10:10","nodeType":"VariableDeclaration","scope":2667,"src":"13917:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2632,"name":"uint256","nodeType":"ElementaryTypeName","src":"13917:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2635,"mutability":"mutable","name":"_lastInteraction","nameLocation":"13954:16:10","nodeType":"VariableDeclaration","scope":2667,"src":"13946:24:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2634,"name":"uint256","nodeType":"ElementaryTypeName","src":"13946:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2637,"mutability":"mutable","name":"_baseAmount","nameLocation":"13989:11:10","nodeType":"VariableDeclaration","scope":2667,"src":"13981:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2636,"name":"uint256","nodeType":"ElementaryTypeName","src":"13981:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13906:101:10"},"returnParameters":{"id":2641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2640,"mutability":"mutable","name":"additionalWeight_","nameLocation":"14039:17:10","nodeType":"VariableDeclaration","scope":2667,"src":"14031:25:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2639,"name":"uint256","nodeType":"ElementaryTypeName","src":"14031:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14030:27:10"},"scope":2871,"src":"13866:411:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2719,"nodeType":"Block","src":"14609:575:10","statements":[{"assignments":[2676],"declarations":[{"constant":false,"id":2676,"mutability":"mutable","name":"_weightReceivedSinceInteraction","nameLocation":"14628:31:10","nodeType":"VariableDeclaration","scope":2719,"src":"14620:39:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2675,"name":"uint256","nodeType":"ElementaryTypeName","src":"14620:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2683,"initialValue":{"arguments":[{"expression":{"id":2678,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"14712:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14718:9:10","memberName":"timestamp","nodeType":"MemberAccess","src":"14712:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2680,"name":"lastInteraction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1735,"src":"14746:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2681,"name":"totalStaked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"14780:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2677,"name":"_weightIncreaseSinceInteraction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"14662:31:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":2682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14662:144:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14620:186:10"},{"expression":{"id":2686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2684,"name":"_contractWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1737,"src":"14817:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2685,"name":"_weightReceivedSinceInteraction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2676,"src":"14836:31:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14817:50:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2687,"nodeType":"ExpressionStatement","src":"14817:50:10"},{"condition":{"id":2688,"name":"_stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"14884:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2712,"nodeType":"Block","src":"14951:180:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":2695,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14986:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14990:6:10","memberName":"sender","nodeType":"MemberAccess","src":"14986:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2694,"name":"userTotalWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2754,"src":"14970:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14970:27:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2698,"name":"_contractWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1737,"src":"15000:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14970:45:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"id":2709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2704,"name":"_contractWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1737,"src":"15073:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"arguments":[{"expression":{"id":2706,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"15108:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15112:6:10","memberName":"sender","nodeType":"MemberAccess","src":"15108:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2705,"name":"userTotalWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2754,"src":"15092:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15092:27:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15073:46:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2710,"nodeType":"ExpressionStatement","src":"15073:46:10"},"id":2711,"nodeType":"IfStatement","src":"14966:153:10","trueBody":{"expression":{"id":2702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2700,"name":"_contractWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1737,"src":"15034:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15052:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15034:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2703,"nodeType":"ExpressionStatement","src":"15034:19:10"}}]},"id":2713,"nodeType":"IfStatement","src":"14880:251:10","trueBody":{"id":2693,"nodeType":"Block","src":"14892:53:10","statements":[{"expression":{"id":2691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2689,"name":"_contractWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1737,"src":"14907:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2690,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2672,"src":"14926:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14907:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2692,"nodeType":"ExpressionStatement","src":"14907:26:10"}]}},{"expression":{"id":2717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2714,"name":"lastInteraction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1735,"src":"15143:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2715,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"15161:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15167:9:10","memberName":"timestamp","nodeType":"MemberAccess","src":"15161:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15143:33:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2718,"nodeType":"ExpressionStatement","src":"15143:33:10"}]},"documentation":{"id":2668,"nodeType":"StructuredDocumentation","src":"14283:250:10","text":" @dev Adjusts the contract's weight based on stake or unstake actions.\n @param _stake A boolean indicating if it's a stake action (true) or unstake action (false).\n @param _amount The amount being staked or unstaked."},"id":2720,"implemented":true,"kind":"function","modifiers":[],"name":"_adjustContractWeight","nameLocation":"14548:21:10","nodeType":"FunctionDefinition","parameters":{"id":2673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2670,"mutability":"mutable","name":"_stake","nameLocation":"14575:6:10","nodeType":"VariableDeclaration","scope":2720,"src":"14570:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2669,"name":"bool","nodeType":"ElementaryTypeName","src":"14570:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2672,"mutability":"mutable","name":"_amount","nameLocation":"14591:7:10","nodeType":"VariableDeclaration","scope":2720,"src":"14583:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2671,"name":"uint256","nodeType":"ElementaryTypeName","src":"14583:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14569:30:10"},"returnParameters":{"id":2674,"nodeType":"ParameterList","parameters":[],"src":"14609:0:10"},"scope":2871,"src":"14539:645:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2753,"nodeType":"Block","src":"15472:317:10","statements":[{"assignments":[2730],"declarations":[{"constant":false,"id":2730,"mutability":"mutable","name":"_stake","nameLocation":"15496:6:10","nodeType":"VariableDeclaration","scope":2753,"src":"15483:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$1714_memory_ptr","typeString":"struct Stacking.Stake"},"typeName":{"id":2729,"nodeType":"UserDefinedTypeName","pathNode":{"id":2728,"name":"Stake","nameLocations":["15483:5:10"],"nodeType":"IdentifierPath","referencedDeclaration":1714,"src":"15483:5:10"},"referencedDeclaration":1714,"src":"15483:5:10","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$1714_storage_ptr","typeString":"struct Stacking.Stake"}},"visibility":"internal"}],"id":2734,"initialValue":{"baseExpression":{"id":2731,"name":"stakeDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"15505:12:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Stake_$1714_storage_$","typeString":"mapping(address => struct Stacking.Stake storage ref)"}},"id":2733,"indexExpression":{"id":2732,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2723,"src":"15518:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15505:19:10","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$1714_storage","typeString":"struct Stacking.Stake storage ref"}},"nodeType":"VariableDeclarationStatement","src":"15483:41:10"},{"assignments":[2736],"declarations":[{"constant":false,"id":2736,"mutability":"mutable","name":"_additionalWeight","nameLocation":"15543:17:10","nodeType":"VariableDeclaration","scope":2753,"src":"15535:25:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2735,"name":"uint256","nodeType":"ElementaryTypeName","src":"15535:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2745,"initialValue":{"arguments":[{"expression":{"id":2738,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"15609:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15615:9:10","memberName":"timestamp","nodeType":"MemberAccess","src":"15609:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2740,"name":"_stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2730,"src":"15639:6:10","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$1714_memory_ptr","typeString":"struct Stacking.Stake memory"}},"id":2741,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15646:15:10","memberName":"lastInteraction","nodeType":"MemberAccess","referencedDeclaration":1711,"src":"15639:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2742,"name":"_stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2730,"src":"15676:6:10","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$1714_memory_ptr","typeString":"struct Stacking.Stake memory"}},"id":2743,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15683:12:10","memberName":"amountStaked","nodeType":"MemberAccess","referencedDeclaration":1709,"src":"15676:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2737,"name":"_weightIncreaseSinceInteraction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"15563:31:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":2744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15563:143:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15535:171:10"},{"expression":{"id":2751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2746,"name":"userWeight_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"15717:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2747,"name":"_additionalWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2736,"src":"15731:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":2748,"name":"_stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2730,"src":"15751:6:10","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$1714_memory_ptr","typeString":"struct Stacking.Stake memory"}},"id":2749,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15758:23:10","memberName":"weightAtLastInteraction","nodeType":"MemberAccess","referencedDeclaration":1713,"src":"15751:30:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15731:50:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15717:64:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2752,"nodeType":"ExpressionStatement","src":"15717:64:10"}]},"documentation":{"id":2721,"nodeType":"StructuredDocumentation","src":"15190:162:10","text":" @dev Retrieves the total weight of a user.\n @param _user The user's address.\n @return userWeight_ The total weight of the user."},"functionSelector":"19beb249","id":2754,"implemented":true,"kind":"function","modifiers":[],"name":"userTotalWeight","nameLocation":"15367:15:10","nodeType":"FunctionDefinition","parameters":{"id":2724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2723,"mutability":"mutable","name":"_user","nameLocation":"15391:5:10","nodeType":"VariableDeclaration","scope":2754,"src":"15383:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2722,"name":"address","nodeType":"ElementaryTypeName","src":"15383:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15382:15:10"},"returnParameters":{"id":2727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2726,"mutability":"mutable","name":"userWeight_","nameLocation":"15454:11:10","nodeType":"VariableDeclaration","scope":2754,"src":"15446:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2725,"name":"uint256","nodeType":"ElementaryTypeName","src":"15446:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15445:21:10"},"scope":2871,"src":"15358:431:10","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2774,"nodeType":"Block","src":"16125:112:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2762,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1727,"src":"16140:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":2763,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2757,"src":"16150:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16140:17:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2768,"nodeType":"IfStatement","src":"16136:43:10","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2765,"name":"InvalidPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1689,"src":"16166:11:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16166:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2767,"nodeType":"RevertStatement","src":"16159:20:10"}},{"expression":{"expression":{"baseExpression":{"id":2769,"name":"poolDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"16197:11:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Pool_$1725_storage_$","typeString":"mapping(uint256 => struct Stacking.Pool storage ref)"}},"id":2771,"indexExpression":{"id":2770,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2757,"src":"16209:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16197:20:10","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$1725_storage","typeString":"struct Stacking.Pool storage ref"}},"id":2772,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16218:11:10","memberName":"weightAtEnd","nodeType":"MemberAccess","referencedDeclaration":1724,"src":"16197:32:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2761,"id":2773,"nodeType":"Return","src":"16190:39:10"}]},"documentation":{"id":2755,"nodeType":"StructuredDocumentation","src":"15795:197:10","text":" @dev Retrieves the contract's weight at a specific pool.\n @param _poolId The ID of the pool.\n @return contractWeight_ The contract's weight at the specified pool."},"functionSelector":"15fad854","id":2775,"implemented":true,"kind":"function","modifiers":[],"name":"contractWeightAtPool","nameLocation":"16009:20:10","nodeType":"FunctionDefinition","parameters":{"id":2758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2757,"mutability":"mutable","name":"_poolId","nameLocation":"16038:7:10","nodeType":"VariableDeclaration","scope":2775,"src":"16030:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2756,"name":"uint256","nodeType":"ElementaryTypeName","src":"16030:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16029:17:10"},"returnParameters":{"id":2761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2760,"mutability":"mutable","name":"contractWeight_","nameLocation":"16103:15:10","nodeType":"VariableDeclaration","scope":2775,"src":"16095:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2759,"name":"uint256","nodeType":"ElementaryTypeName","src":"16095:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16094:25:10"},"scope":2871,"src":"16000:237:10","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2796,"nodeType":"Block","src":"16452:235:10","statements":[{"assignments":[2782],"declarations":[{"constant":false,"id":2782,"mutability":"mutable","name":"_weightIncrease","nameLocation":"16471:15:10","nodeType":"VariableDeclaration","scope":2796,"src":"16463:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2781,"name":"uint256","nodeType":"ElementaryTypeName","src":"16463:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2789,"initialValue":{"arguments":[{"expression":{"id":2784,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"16535:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16541:9:10","memberName":"timestamp","nodeType":"MemberAccess","src":"16535:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2786,"name":"lastInteraction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1735,"src":"16565:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2787,"name":"totalStaked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"16595:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2783,"name":"_weightIncreaseSinceInteraction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"16489:31:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":2788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:128:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16463:154:10"},{"expression":{"id":2794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2790,"name":"contractWeight_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2779,"src":"16628:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2791,"name":"_weightIncrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2782,"src":"16646:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2792,"name":"_contractWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1737,"src":"16664:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16646:33:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16628:51:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2795,"nodeType":"ExpressionStatement","src":"16628:51:10"}]},"documentation":{"id":2776,"nodeType":"StructuredDocumentation","src":"16243:129:10","text":" @dev Retrieves the current contract's weight.\n @return contractWeight_ The current contract's weight."},"functionSelector":"2a745dd0","id":2797,"implemented":true,"kind":"function","modifiers":[],"name":"contractWeight","nameLocation":"16387:14:10","nodeType":"FunctionDefinition","parameters":{"id":2777,"nodeType":"ParameterList","parameters":[],"src":"16401:2:10"},"returnParameters":{"id":2780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2779,"mutability":"mutable","name":"contractWeight_","nameLocation":"16435:15:10","nodeType":"VariableDeclaration","scope":2797,"src":"16427:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2778,"name":"uint256","nodeType":"ElementaryTypeName","src":"16427:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16426:25:10"},"scope":2871,"src":"16378:309:10","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2815,"nodeType":"Block","src":"16924:83:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2809,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"16974:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_Stacking_$2871","typeString":"contract Stacking"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Stacking_$2871","typeString":"contract Stacking"}],"id":2808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16966:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2807,"name":"address","nodeType":"ElementaryTypeName","src":"16966:7:10","typeDescriptions":{}}},"id":2810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16966:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":2804,"name":"prime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1733,"src":"16949:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2803,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":842,"src":"16942:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$842_$","typeString":"type(contract IERC20)"}},"id":2805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16942:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$842","typeString":"contract IERC20"}},"id":2806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16956:9:10","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":799,"src":"16942:23:10","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16942:38:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2812,"name":"unclaimedRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1739,"src":"16983:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16942:57:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2802,"id":2814,"nodeType":"Return","src":"16935:64:10"}]},"documentation":{"id":2798,"nodeType":"StructuredDocumentation","src":"16696:149:10","text":" @dev Retrieves the pending rewards that haven't been claimed yet.\n @return pendingRewards_ The amount of pending rewards."},"functionSelector":"eded3fda","id":2816,"implemented":true,"kind":"function","modifiers":[],"name":"pendingRewards","nameLocation":"16859:14:10","nodeType":"FunctionDefinition","parameters":{"id":2799,"nodeType":"ParameterList","parameters":[],"src":"16873:2:10"},"returnParameters":{"id":2802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2801,"mutability":"mutable","name":"pendingRewards_","nameLocation":"16907:15:10","nodeType":"VariableDeclaration","scope":2816,"src":"16899:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2800,"name":"uint256","nodeType":"ElementaryTypeName","src":"16899:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16898:25:10"},"scope":2871,"src":"16850:157:10","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2869,"nodeType":"Block","src":"17388:316:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2826,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1727,"src":"17403:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":2827,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2821,"src":"17413:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17403:17:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2832,"nodeType":"IfStatement","src":"17399:43:10","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2829,"name":"InvalidPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1689,"src":"17429:11:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17429:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2831,"nodeType":"RevertStatement","src":"17422:20:10"}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":2833,"name":"userClaimedPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1760,"src":"17457:15:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(address => mapping(uint256 => bool))"}},"id":2835,"indexExpression":{"id":2834,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2819,"src":"17473:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17457:22:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":2837,"indexExpression":{"id":2836,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2821,"src":"17480:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17457:31:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2839,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2821,"src":"17513:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2838,"name":"contractWeightAtPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2775,"src":"17492:20:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":2840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17492:29:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17525:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17492:34:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"17457:69:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2846,"nodeType":"IfStatement","src":"17453:83:10","trueBody":{"expression":{"hexValue":"30","id":2844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17535:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2825,"id":2845,"nodeType":"Return","src":"17528:8:10"}},{"assignments":[2849],"declarations":[{"constant":false,"id":2849,"mutability":"mutable","name":"_pool","nameLocation":"17561:5:10","nodeType":"VariableDeclaration","scope":2869,"src":"17549:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$1725_memory_ptr","typeString":"struct Stacking.Pool"},"typeName":{"id":2848,"nodeType":"UserDefinedTypeName","pathNode":{"id":2847,"name":"Pool","nameLocations":["17549:4:10"],"nodeType":"IdentifierPath","referencedDeclaration":1725,"src":"17549:4:10"},"referencedDeclaration":1725,"src":"17549:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$1725_storage_ptr","typeString":"struct Stacking.Pool"}},"visibility":"internal"}],"id":2853,"initialValue":{"baseExpression":{"id":2850,"name":"poolDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"17569:11:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Pool_$1725_storage_$","typeString":"mapping(uint256 => struct Stacking.Pool storage ref)"}},"id":2852,"indexExpression":{"id":2851,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2821,"src":"17581:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17569:20:10","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$1725_storage","typeString":"struct Stacking.Pool storage ref"}},"nodeType":"VariableDeclarationStatement","src":"17549:40:10"},{"expression":{"id":2867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2854,"name":"claimable_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2824,"src":"17602:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2855,"name":"_pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2849,"src":"17616:5:10","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$1725_memory_ptr","typeString":"struct Stacking.Pool memory"}},"id":2856,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17622:6:10","memberName":"volume","nodeType":"MemberAccess","referencedDeclaration":1716,"src":"17616:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":2858,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2819,"src":"17648:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2859,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2821,"src":"17655:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2857,"name":"userWeightAtPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2470,"src":"17631:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":2860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17631:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17616:47:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2862,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17615:49:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"arguments":[{"id":2864,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2821,"src":"17688:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2863,"name":"contractWeightAtPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2775,"src":"17667:20:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":2865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17667:29:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17615:81:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17602:94:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2868,"nodeType":"ExpressionStatement","src":"17602:94:10"}]},"documentation":{"id":2817,"nodeType":"StructuredDocumentation","src":"17013:266:10","text":" @dev Calculates the claimable rewards for a specific pool and user.\n @param _user The user's address.\n @param _poolId The ID of the pool.\n @return claimable_ The amount of rewards claimable by the user in the specified pool."},"functionSelector":"ea905cdf","id":2870,"implemented":true,"kind":"function","modifiers":[],"name":"claimAmountForPool","nameLocation":"17294:18:10","nodeType":"FunctionDefinition","parameters":{"id":2822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2819,"mutability":"mutable","name":"_user","nameLocation":"17321:5:10","nodeType":"VariableDeclaration","scope":2870,"src":"17313:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2818,"name":"address","nodeType":"ElementaryTypeName","src":"17313:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2821,"mutability":"mutable","name":"_poolId","nameLocation":"17336:7:10","nodeType":"VariableDeclaration","scope":2870,"src":"17328:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2820,"name":"uint256","nodeType":"ElementaryTypeName","src":"17328:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17312:32:10"},"returnParameters":{"id":2825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2824,"mutability":"mutable","name":"claimable_","nameLocation":"17376:10:10","nodeType":"VariableDeclaration","scope":2870,"src":"17368:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2823,"name":"uint256","nodeType":"ElementaryTypeName","src":"17368:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17367:20:10"},"scope":2871,"src":"17285:419:10","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2872,"src":"349:17366:10","usedErrors":[1687,1689,1691,1693]}],"src":"33:17682:10"},"id":10}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":7,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[],"devdoc":{"details":"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == _ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":123,"contract":"@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard","label":"_status","offset":0,"slot":"0","type":"t_uint256"}],"types":{"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"constructor":{"details":"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_222":{"entryPoint":null,"id":222,"parameterSlots":2,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":376,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":451,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":502,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_memory":{"entryPoint":247,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":99,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":278,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":746,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":635,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1067,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_uint256":{"entryPoint":882,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":1028,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":902,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1222,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":332,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":767,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":693,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1192,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":193,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":892,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1160,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":646,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":146,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":942,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":119,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":124,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":114,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":109,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":129,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":783,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1147,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":1000,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":796,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":952,"id":null,"parameterSlots":3,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":995,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:8574:11","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:11","statements":[{"nodeType":"YulAssignment","src":"57:19:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:11","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:11"},"nodeType":"YulFunctionCall","src":"67:9:11"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:11"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:11","type":""}],"src":"7:75:11"},{"body":{"nodeType":"YulBlock","src":"177:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:11"},"nodeType":"YulFunctionCall","src":"187:12:11"},"nodeType":"YulExpressionStatement","src":"187:12:11"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:11"},{"body":{"nodeType":"YulBlock","src":"300:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:11"},"nodeType":"YulFunctionCall","src":"310:12:11"},"nodeType":"YulExpressionStatement","src":"310:12:11"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:11"},{"body":{"nodeType":"YulBlock","src":"423:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"443:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"433:6:11"},"nodeType":"YulFunctionCall","src":"433:12:11"},"nodeType":"YulExpressionStatement","src":"433:12:11"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"334:117:11"},{"body":{"nodeType":"YulBlock","src":"546:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"563:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"566:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"556:6:11"},"nodeType":"YulFunctionCall","src":"556:12:11"},"nodeType":"YulExpressionStatement","src":"556:12:11"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"457:117:11"},{"body":{"nodeType":"YulBlock","src":"628:54:11","statements":[{"nodeType":"YulAssignment","src":"638:38:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"656:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"663:2:11","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"652:3:11"},"nodeType":"YulFunctionCall","src":"652:14:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"672:2:11","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"668:3:11"},"nodeType":"YulFunctionCall","src":"668:7:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"648:3:11"},"nodeType":"YulFunctionCall","src":"648:28:11"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"638:6:11"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"611:5:11","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"621:6:11","type":""}],"src":"580:102:11"},{"body":{"nodeType":"YulBlock","src":"716:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"733:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"736:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"726:6:11"},"nodeType":"YulFunctionCall","src":"726:88:11"},"nodeType":"YulExpressionStatement","src":"726:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"830:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"833:4:11","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"823:6:11"},"nodeType":"YulFunctionCall","src":"823:15:11"},"nodeType":"YulExpressionStatement","src":"823:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"854:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"857:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"847:6:11"},"nodeType":"YulFunctionCall","src":"847:15:11"},"nodeType":"YulExpressionStatement","src":"847:15:11"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"688:180:11"},{"body":{"nodeType":"YulBlock","src":"917:238:11","statements":[{"nodeType":"YulVariableDeclaration","src":"927:58:11","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"949:6:11"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"979:4:11"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"957:21:11"},"nodeType":"YulFunctionCall","src":"957:27:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"945:3:11"},"nodeType":"YulFunctionCall","src":"945:40:11"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"931:10:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"1096:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1098:16:11"},"nodeType":"YulFunctionCall","src":"1098:18:11"},"nodeType":"YulExpressionStatement","src":"1098:18:11"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1039:10:11"},{"kind":"number","nodeType":"YulLiteral","src":"1051:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1036:2:11"},"nodeType":"YulFunctionCall","src":"1036:34:11"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1075:10:11"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1087:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1072:2:11"},"nodeType":"YulFunctionCall","src":"1072:22:11"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1033:2:11"},"nodeType":"YulFunctionCall","src":"1033:62:11"},"nodeType":"YulIf","src":"1030:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1134:2:11","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1138:10:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1127:6:11"},"nodeType":"YulFunctionCall","src":"1127:22:11"},"nodeType":"YulExpressionStatement","src":"1127:22:11"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"903:6:11","type":""},{"name":"size","nodeType":"YulTypedName","src":"911:4:11","type":""}],"src":"874:281:11"},{"body":{"nodeType":"YulBlock","src":"1202:88:11","statements":[{"nodeType":"YulAssignment","src":"1212:30:11","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1222:18:11"},"nodeType":"YulFunctionCall","src":"1222:20:11"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1212:6:11"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1271:6:11"},{"name":"size","nodeType":"YulIdentifier","src":"1279:4:11"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1251:19:11"},"nodeType":"YulFunctionCall","src":"1251:33:11"},"nodeType":"YulExpressionStatement","src":"1251:33:11"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1186:4:11","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1195:6:11","type":""}],"src":"1161:129:11"},{"body":{"nodeType":"YulBlock","src":"1363:241:11","statements":[{"body":{"nodeType":"YulBlock","src":"1468:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1470:16:11"},"nodeType":"YulFunctionCall","src":"1470:18:11"},"nodeType":"YulExpressionStatement","src":"1470:18:11"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1440:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"1448:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1437:2:11"},"nodeType":"YulFunctionCall","src":"1437:30:11"},"nodeType":"YulIf","src":"1434:56:11"},{"nodeType":"YulAssignment","src":"1500:37:11","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1530:6:11"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1508:21:11"},"nodeType":"YulFunctionCall","src":"1508:29:11"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1500:4:11"}]},{"nodeType":"YulAssignment","src":"1574:23:11","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1586:4:11"},{"kind":"number","nodeType":"YulLiteral","src":"1592:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1582:3:11"},"nodeType":"YulFunctionCall","src":"1582:15:11"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1574:4:11"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1347:6:11","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1358:4:11","type":""}],"src":"1296:308:11"},{"body":{"nodeType":"YulBlock","src":"1672:184:11","statements":[{"nodeType":"YulVariableDeclaration","src":"1682:10:11","value":{"kind":"number","nodeType":"YulLiteral","src":"1691:1:11","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1686:1:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"1751:63:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1776:3:11"},{"name":"i","nodeType":"YulIdentifier","src":"1781:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:11"},"nodeType":"YulFunctionCall","src":"1772:11:11"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1795:3:11"},{"name":"i","nodeType":"YulIdentifier","src":"1800:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1791:3:11"},"nodeType":"YulFunctionCall","src":"1791:11:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1785:5:11"},"nodeType":"YulFunctionCall","src":"1785:18:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1765:6:11"},"nodeType":"YulFunctionCall","src":"1765:39:11"},"nodeType":"YulExpressionStatement","src":"1765:39:11"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1712:1:11"},{"name":"length","nodeType":"YulIdentifier","src":"1715:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1709:2:11"},"nodeType":"YulFunctionCall","src":"1709:13:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1723:19:11","statements":[{"nodeType":"YulAssignment","src":"1725:15:11","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1734:1:11"},{"kind":"number","nodeType":"YulLiteral","src":"1737:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1730:3:11"},"nodeType":"YulFunctionCall","src":"1730:10:11"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1725:1:11"}]}]},"pre":{"nodeType":"YulBlock","src":"1705:3:11","statements":[]},"src":"1701:113:11"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1834:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"1839:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1830:3:11"},"nodeType":"YulFunctionCall","src":"1830:16:11"},{"kind":"number","nodeType":"YulLiteral","src":"1848:1:11","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1823:6:11"},"nodeType":"YulFunctionCall","src":"1823:27:11"},"nodeType":"YulExpressionStatement","src":"1823:27:11"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1654:3:11","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1659:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"1664:6:11","type":""}],"src":"1610:246:11"},{"body":{"nodeType":"YulBlock","src":"1957:339:11","statements":[{"nodeType":"YulAssignment","src":"1967:75:11","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2034:6:11"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"1992:41:11"},"nodeType":"YulFunctionCall","src":"1992:49:11"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"1976:15:11"},"nodeType":"YulFunctionCall","src":"1976:66:11"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1967:5:11"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2058:5:11"},{"name":"length","nodeType":"YulIdentifier","src":"2065:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2051:6:11"},"nodeType":"YulFunctionCall","src":"2051:21:11"},"nodeType":"YulExpressionStatement","src":"2051:21:11"},{"nodeType":"YulVariableDeclaration","src":"2081:27:11","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2096:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"2103:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2092:3:11"},"nodeType":"YulFunctionCall","src":"2092:16:11"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2085:3:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"2146:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2148:77:11"},"nodeType":"YulFunctionCall","src":"2148:79:11"},"nodeType":"YulExpressionStatement","src":"2148:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2127:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"2132:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2123:3:11"},"nodeType":"YulFunctionCall","src":"2123:16:11"},{"name":"end","nodeType":"YulIdentifier","src":"2141:3:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2120:2:11"},"nodeType":"YulFunctionCall","src":"2120:25:11"},"nodeType":"YulIf","src":"2117:112:11"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2273:3:11"},{"name":"dst","nodeType":"YulIdentifier","src":"2278:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"2283:6:11"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2238:34:11"},"nodeType":"YulFunctionCall","src":"2238:52:11"},"nodeType":"YulExpressionStatement","src":"2238:52:11"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1930:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"1935:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"1943:3:11","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1951:5:11","type":""}],"src":"1862:434:11"},{"body":{"nodeType":"YulBlock","src":"2389:282:11","statements":[{"body":{"nodeType":"YulBlock","src":"2438:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2440:77:11"},"nodeType":"YulFunctionCall","src":"2440:79:11"},"nodeType":"YulExpressionStatement","src":"2440:79:11"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2417:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"2425:4:11","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2413:3:11"},"nodeType":"YulFunctionCall","src":"2413:17:11"},{"name":"end","nodeType":"YulIdentifier","src":"2432:3:11"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2409:3:11"},"nodeType":"YulFunctionCall","src":"2409:27:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2402:6:11"},"nodeType":"YulFunctionCall","src":"2402:35:11"},"nodeType":"YulIf","src":"2399:122:11"},{"nodeType":"YulVariableDeclaration","src":"2530:27:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2550:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2544:5:11"},"nodeType":"YulFunctionCall","src":"2544:13:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2534:6:11","type":""}]},{"nodeType":"YulAssignment","src":"2566:99:11","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2638:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"2646:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2634:3:11"},"nodeType":"YulFunctionCall","src":"2634:17:11"},{"name":"length","nodeType":"YulIdentifier","src":"2653:6:11"},{"name":"end","nodeType":"YulIdentifier","src":"2661:3:11"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"2575:58:11"},"nodeType":"YulFunctionCall","src":"2575:90:11"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2566:5:11"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2367:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"2375:3:11","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2383:5:11","type":""}],"src":"2316:355:11"},{"body":{"nodeType":"YulBlock","src":"2791:739:11","statements":[{"body":{"nodeType":"YulBlock","src":"2837:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2839:77:11"},"nodeType":"YulFunctionCall","src":"2839:79:11"},"nodeType":"YulExpressionStatement","src":"2839:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2812:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"2821:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2808:3:11"},"nodeType":"YulFunctionCall","src":"2808:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"2833:2:11","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2804:3:11"},"nodeType":"YulFunctionCall","src":"2804:32:11"},"nodeType":"YulIf","src":"2801:119:11"},{"nodeType":"YulBlock","src":"2930:291:11","statements":[{"nodeType":"YulVariableDeclaration","src":"2945:38:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2969:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2980:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2965:3:11"},"nodeType":"YulFunctionCall","src":"2965:17:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2959:5:11"},"nodeType":"YulFunctionCall","src":"2959:24:11"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2949:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"3030:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3032:77:11"},"nodeType":"YulFunctionCall","src":"3032:79:11"},"nodeType":"YulExpressionStatement","src":"3032:79:11"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3002:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"3010:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2999:2:11"},"nodeType":"YulFunctionCall","src":"2999:30:11"},"nodeType":"YulIf","src":"2996:117:11"},{"nodeType":"YulAssignment","src":"3127:84:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3183:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"3194:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3179:3:11"},"nodeType":"YulFunctionCall","src":"3179:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3203:7:11"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3137:41:11"},"nodeType":"YulFunctionCall","src":"3137:74:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3127:6:11"}]}]},{"nodeType":"YulBlock","src":"3231:292:11","statements":[{"nodeType":"YulVariableDeclaration","src":"3246:39:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3270:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3281:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3266:3:11"},"nodeType":"YulFunctionCall","src":"3266:18:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3260:5:11"},"nodeType":"YulFunctionCall","src":"3260:25:11"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3250:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"3332:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3334:77:11"},"nodeType":"YulFunctionCall","src":"3334:79:11"},"nodeType":"YulExpressionStatement","src":"3334:79:11"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3304:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"3312:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3301:2:11"},"nodeType":"YulFunctionCall","src":"3301:30:11"},"nodeType":"YulIf","src":"3298:117:11"},{"nodeType":"YulAssignment","src":"3429:84:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3485:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"3496:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3481:3:11"},"nodeType":"YulFunctionCall","src":"3481:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3505:7:11"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3439:41:11"},"nodeType":"YulFunctionCall","src":"3439:74:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3429:6:11"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2753:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2764:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2776:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2784:6:11","type":""}],"src":"2677:853:11"},{"body":{"nodeType":"YulBlock","src":"3595:40:11","statements":[{"nodeType":"YulAssignment","src":"3606:22:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3622:5:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3616:5:11"},"nodeType":"YulFunctionCall","src":"3616:12:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3606:6:11"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3578:5:11","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3588:6:11","type":""}],"src":"3536:99:11"},{"body":{"nodeType":"YulBlock","src":"3669:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3686:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3689:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3679:6:11"},"nodeType":"YulFunctionCall","src":"3679:88:11"},"nodeType":"YulExpressionStatement","src":"3679:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3783:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3786:4:11","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3776:6:11"},"nodeType":"YulFunctionCall","src":"3776:15:11"},"nodeType":"YulExpressionStatement","src":"3776:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3807:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3810:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3800:6:11"},"nodeType":"YulFunctionCall","src":"3800:15:11"},"nodeType":"YulExpressionStatement","src":"3800:15:11"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"3641:180:11"},{"body":{"nodeType":"YulBlock","src":"3878:269:11","statements":[{"nodeType":"YulAssignment","src":"3888:22:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3902:4:11"},{"kind":"number","nodeType":"YulLiteral","src":"3908:1:11","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3898:3:11"},"nodeType":"YulFunctionCall","src":"3898:12:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3888:6:11"}]},{"nodeType":"YulVariableDeclaration","src":"3919:38:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3949:4:11"},{"kind":"number","nodeType":"YulLiteral","src":"3955:1:11","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3945:3:11"},"nodeType":"YulFunctionCall","src":"3945:12:11"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"3923:18:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"3996:51:11","statements":[{"nodeType":"YulAssignment","src":"4010:27:11","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4024:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"4032:4:11","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4020:3:11"},"nodeType":"YulFunctionCall","src":"4020:17:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4010:6:11"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3976:18:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3969:6:11"},"nodeType":"YulFunctionCall","src":"3969:26:11"},"nodeType":"YulIf","src":"3966:81:11"},{"body":{"nodeType":"YulBlock","src":"4099:42:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"4113:16:11"},"nodeType":"YulFunctionCall","src":"4113:18:11"},"nodeType":"YulExpressionStatement","src":"4113:18:11"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4063:18:11"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4086:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"4094:2:11","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4083:2:11"},"nodeType":"YulFunctionCall","src":"4083:14:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4060:2:11"},"nodeType":"YulFunctionCall","src":"4060:38:11"},"nodeType":"YulIf","src":"4057:84:11"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3862:4:11","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3871:6:11","type":""}],"src":"3827:320:11"},{"body":{"nodeType":"YulBlock","src":"4207:87:11","statements":[{"nodeType":"YulAssignment","src":"4217:11:11","value":{"name":"ptr","nodeType":"YulIdentifier","src":"4225:3:11"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4217:4:11"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4245:1:11","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"4248:3:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4238:6:11"},"nodeType":"YulFunctionCall","src":"4238:14:11"},"nodeType":"YulExpressionStatement","src":"4238:14:11"},{"nodeType":"YulAssignment","src":"4261:26:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4279:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4282:4:11","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"4269:9:11"},"nodeType":"YulFunctionCall","src":"4269:18:11"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4261:4:11"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"4194:3:11","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"4202:4:11","type":""}],"src":"4153:141:11"},{"body":{"nodeType":"YulBlock","src":"4344:49:11","statements":[{"nodeType":"YulAssignment","src":"4354:33:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4372:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"4379:2:11","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4368:3:11"},"nodeType":"YulFunctionCall","src":"4368:14:11"},{"kind":"number","nodeType":"YulLiteral","src":"4384:2:11","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4364:3:11"},"nodeType":"YulFunctionCall","src":"4364:23:11"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4354:6:11"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4327:5:11","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4337:6:11","type":""}],"src":"4300:93:11"},{"body":{"nodeType":"YulBlock","src":"4452:54:11","statements":[{"nodeType":"YulAssignment","src":"4462:37:11","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"4487:4:11"},{"name":"value","nodeType":"YulIdentifier","src":"4493:5:11"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4483:3:11"},"nodeType":"YulFunctionCall","src":"4483:16:11"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"4462:8:11"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"4427:4:11","type":""},{"name":"value","nodeType":"YulTypedName","src":"4433:5:11","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"4443:8:11","type":""}],"src":"4399:107:11"},{"body":{"nodeType":"YulBlock","src":"4588:317:11","statements":[{"nodeType":"YulVariableDeclaration","src":"4598:35:11","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"4619:10:11"},{"kind":"number","nodeType":"YulLiteral","src":"4631:1:11","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4615:3:11"},"nodeType":"YulFunctionCall","src":"4615:18:11"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"4602:9:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4642:109:11","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"4673:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4684:66:11","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"4654:18:11"},"nodeType":"YulFunctionCall","src":"4654:97:11"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"4646:4:11","type":""}]},{"nodeType":"YulAssignment","src":"4760:51:11","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"4791:9:11"},{"name":"toInsert","nodeType":"YulIdentifier","src":"4802:8:11"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"4772:18:11"},"nodeType":"YulFunctionCall","src":"4772:39:11"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"4760:8:11"}]},{"nodeType":"YulAssignment","src":"4820:30:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4833:5:11"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"4844:4:11"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4840:3:11"},"nodeType":"YulFunctionCall","src":"4840:9:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4829:3:11"},"nodeType":"YulFunctionCall","src":"4829:21:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4820:5:11"}]},{"nodeType":"YulAssignment","src":"4859:40:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4872:5:11"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"4883:8:11"},{"name":"mask","nodeType":"YulIdentifier","src":"4893:4:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4879:3:11"},"nodeType":"YulFunctionCall","src":"4879:19:11"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4869:2:11"},"nodeType":"YulFunctionCall","src":"4869:30:11"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4859:6:11"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4549:5:11","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"4556:10:11","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"4568:8:11","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4581:6:11","type":""}],"src":"4512:393:11"},{"body":{"nodeType":"YulBlock","src":"4956:32:11","statements":[{"nodeType":"YulAssignment","src":"4966:16:11","value":{"name":"value","nodeType":"YulIdentifier","src":"4977:5:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4966:7:11"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4938:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4948:7:11","type":""}],"src":"4911:77:11"},{"body":{"nodeType":"YulBlock","src":"5026:28:11","statements":[{"nodeType":"YulAssignment","src":"5036:12:11","value":{"name":"value","nodeType":"YulIdentifier","src":"5043:5:11"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5036:3:11"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5012:5:11","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5022:3:11","type":""}],"src":"4994:60:11"},{"body":{"nodeType":"YulBlock","src":"5120:82:11","statements":[{"nodeType":"YulAssignment","src":"5130:66:11","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5188:5:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5170:17:11"},"nodeType":"YulFunctionCall","src":"5170:24:11"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"5161:8:11"},"nodeType":"YulFunctionCall","src":"5161:34:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5143:17:11"},"nodeType":"YulFunctionCall","src":"5143:53:11"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"5130:9:11"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5100:5:11","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"5110:9:11","type":""}],"src":"5060:142:11"},{"body":{"nodeType":"YulBlock","src":"5255:28:11","statements":[{"nodeType":"YulAssignment","src":"5265:12:11","value":{"name":"value","nodeType":"YulIdentifier","src":"5272:5:11"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5265:3:11"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5241:5:11","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5251:3:11","type":""}],"src":"5208:75:11"},{"body":{"nodeType":"YulBlock","src":"5365:193:11","statements":[{"nodeType":"YulVariableDeclaration","src":"5375:63:11","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"5430:7:11"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5399:30:11"},"nodeType":"YulFunctionCall","src":"5399:39:11"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"5379:16:11","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5454:4:11"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5494:4:11"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"5488:5:11"},"nodeType":"YulFunctionCall","src":"5488:11:11"},{"name":"offset","nodeType":"YulIdentifier","src":"5501:6:11"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"5533:16:11"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"5509:23:11"},"nodeType":"YulFunctionCall","src":"5509:41:11"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"5460:27:11"},"nodeType":"YulFunctionCall","src":"5460:91:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5447:6:11"},"nodeType":"YulFunctionCall","src":"5447:105:11"},"nodeType":"YulExpressionStatement","src":"5447:105:11"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5342:4:11","type":""},{"name":"offset","nodeType":"YulTypedName","src":"5348:6:11","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"5356:7:11","type":""}],"src":"5289:269:11"},{"body":{"nodeType":"YulBlock","src":"5613:24:11","statements":[{"nodeType":"YulAssignment","src":"5623:8:11","value":{"kind":"number","nodeType":"YulLiteral","src":"5630:1:11","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5623:3:11"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5609:3:11","type":""}],"src":"5564:73:11"},{"body":{"nodeType":"YulBlock","src":"5696:136:11","statements":[{"nodeType":"YulVariableDeclaration","src":"5706:46:11","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"5720:30:11"},"nodeType":"YulFunctionCall","src":"5720:32:11"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"5710:6:11","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5805:4:11"},{"name":"offset","nodeType":"YulIdentifier","src":"5811:6:11"},{"name":"zero_0","nodeType":"YulIdentifier","src":"5819:6:11"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5761:43:11"},"nodeType":"YulFunctionCall","src":"5761:65:11"},"nodeType":"YulExpressionStatement","src":"5761:65:11"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5682:4:11","type":""},{"name":"offset","nodeType":"YulTypedName","src":"5688:6:11","type":""}],"src":"5643:189:11"},{"body":{"nodeType":"YulBlock","src":"5888:136:11","statements":[{"body":{"nodeType":"YulBlock","src":"5955:63:11","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5999:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"6006:1:11","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"5969:29:11"},"nodeType":"YulFunctionCall","src":"5969:39:11"},"nodeType":"YulExpressionStatement","src":"5969:39:11"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5908:5:11"},{"name":"end","nodeType":"YulIdentifier","src":"5915:3:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5905:2:11"},"nodeType":"YulFunctionCall","src":"5905:14:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5920:26:11","statements":[{"nodeType":"YulAssignment","src":"5922:22:11","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5935:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"5942:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5931:3:11"},"nodeType":"YulFunctionCall","src":"5931:13:11"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"5922:5:11"}]}]},"pre":{"nodeType":"YulBlock","src":"5902:2:11","statements":[]},"src":"5898:120:11"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"5876:5:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"5883:3:11","type":""}],"src":"5838:186:11"},{"body":{"nodeType":"YulBlock","src":"6109:464:11","statements":[{"body":{"nodeType":"YulBlock","src":"6135:431:11","statements":[{"nodeType":"YulVariableDeclaration","src":"6149:54:11","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6197:5:11"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"6165:31:11"},"nodeType":"YulFunctionCall","src":"6165:38:11"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"6153:8:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6216:63:11","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"6239:8:11"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"6267:10:11"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"6249:17:11"},"nodeType":"YulFunctionCall","src":"6249:29:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6235:3:11"},"nodeType":"YulFunctionCall","src":"6235:44:11"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"6220:11:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"6436:27:11","statements":[{"nodeType":"YulAssignment","src":"6438:23:11","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"6453:8:11"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"6438:11:11"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"6420:10:11"},{"kind":"number","nodeType":"YulLiteral","src":"6432:2:11","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6417:2:11"},"nodeType":"YulFunctionCall","src":"6417:18:11"},"nodeType":"YulIf","src":"6414:49:11"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"6505:11:11"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"6522:8:11"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"6550:3:11"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"6532:17:11"},"nodeType":"YulFunctionCall","src":"6532:22:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6518:3:11"},"nodeType":"YulFunctionCall","src":"6518:37:11"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"6476:28:11"},"nodeType":"YulFunctionCall","src":"6476:80:11"},"nodeType":"YulExpressionStatement","src":"6476:80:11"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"6126:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"6131:2:11","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6123:2:11"},"nodeType":"YulFunctionCall","src":"6123:11:11"},"nodeType":"YulIf","src":"6120:446:11"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"6085:5:11","type":""},{"name":"len","nodeType":"YulTypedName","src":"6092:3:11","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"6097:10:11","type":""}],"src":"6030:543:11"},{"body":{"nodeType":"YulBlock","src":"6642:54:11","statements":[{"nodeType":"YulAssignment","src":"6652:37:11","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"6677:4:11"},{"name":"value","nodeType":"YulIdentifier","src":"6683:5:11"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6673:3:11"},"nodeType":"YulFunctionCall","src":"6673:16:11"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"6652:8:11"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"6617:4:11","type":""},{"name":"value","nodeType":"YulTypedName","src":"6623:5:11","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"6633:8:11","type":""}],"src":"6579:117:11"},{"body":{"nodeType":"YulBlock","src":"6753:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"6763:68:11","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6812:1:11","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"6815:5:11"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6808:3:11"},"nodeType":"YulFunctionCall","src":"6808:13:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6827:1:11","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6823:3:11"},"nodeType":"YulFunctionCall","src":"6823:6:11"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"6779:28:11"},"nodeType":"YulFunctionCall","src":"6779:51:11"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6775:3:11"},"nodeType":"YulFunctionCall","src":"6775:56:11"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"6767:4:11","type":""}]},{"nodeType":"YulAssignment","src":"6840:25:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6854:4:11"},{"name":"mask","nodeType":"YulIdentifier","src":"6860:4:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6850:3:11"},"nodeType":"YulFunctionCall","src":"6850:15:11"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"6840:6:11"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6730:4:11","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"6736:5:11","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"6746:6:11","type":""}],"src":"6702:169:11"},{"body":{"nodeType":"YulBlock","src":"6957:214:11","statements":[{"nodeType":"YulAssignment","src":"7090:37:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7117:4:11"},{"name":"len","nodeType":"YulIdentifier","src":"7123:3:11"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"7098:18:11"},"nodeType":"YulFunctionCall","src":"7098:29:11"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"7090:4:11"}]},{"nodeType":"YulAssignment","src":"7136:29:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7147:4:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7157:1:11","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"7160:3:11"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7153:3:11"},"nodeType":"YulFunctionCall","src":"7153:11:11"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7144:2:11"},"nodeType":"YulFunctionCall","src":"7144:21:11"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"7136:4:11"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6938:4:11","type":""},{"name":"len","nodeType":"YulTypedName","src":"6944:3:11","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"6952:4:11","type":""}],"src":"6876:295:11"},{"body":{"nodeType":"YulBlock","src":"7268:1303:11","statements":[{"nodeType":"YulVariableDeclaration","src":"7279:51:11","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7326:3:11"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"7293:32:11"},"nodeType":"YulFunctionCall","src":"7293:37:11"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"7283:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"7415:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7417:16:11"},"nodeType":"YulFunctionCall","src":"7417:18:11"},"nodeType":"YulExpressionStatement","src":"7417:18:11"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7387:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"7395:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7384:2:11"},"nodeType":"YulFunctionCall","src":"7384:30:11"},"nodeType":"YulIf","src":"7381:56:11"},{"nodeType":"YulVariableDeclaration","src":"7447:52:11","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7493:4:11"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"7487:5:11"},"nodeType":"YulFunctionCall","src":"7487:11:11"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"7461:25:11"},"nodeType":"YulFunctionCall","src":"7461:38:11"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"7451:6:11","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7592:4:11"},{"name":"oldLen","nodeType":"YulIdentifier","src":"7598:6:11"},{"name":"newLen","nodeType":"YulIdentifier","src":"7606:6:11"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"7546:45:11"},"nodeType":"YulFunctionCall","src":"7546:67:11"},"nodeType":"YulExpressionStatement","src":"7546:67:11"},{"nodeType":"YulVariableDeclaration","src":"7623:18:11","value":{"kind":"number","nodeType":"YulLiteral","src":"7640:1:11","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"7627:9:11","type":""}]},{"nodeType":"YulAssignment","src":"7651:17:11","value":{"kind":"number","nodeType":"YulLiteral","src":"7664:4:11","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"7651:9:11"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"7715:611:11","statements":[{"nodeType":"YulVariableDeclaration","src":"7729:37:11","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7748:6:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7760:4:11","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7756:3:11"},"nodeType":"YulFunctionCall","src":"7756:9:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7744:3:11"},"nodeType":"YulFunctionCall","src":"7744:22:11"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"7733:7:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7780:51:11","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7826:4:11"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"7794:31:11"},"nodeType":"YulFunctionCall","src":"7794:37:11"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"7784:6:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7844:10:11","value":{"kind":"number","nodeType":"YulLiteral","src":"7853:1:11","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"7848:1:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"7912:163:11","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"7937:6:11"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7955:3:11"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"7960:9:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7951:3:11"},"nodeType":"YulFunctionCall","src":"7951:19:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7945:5:11"},"nodeType":"YulFunctionCall","src":"7945:26:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"7930:6:11"},"nodeType":"YulFunctionCall","src":"7930:42:11"},"nodeType":"YulExpressionStatement","src":"7930:42:11"},{"nodeType":"YulAssignment","src":"7989:24:11","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8003:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"8011:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7999:3:11"},"nodeType":"YulFunctionCall","src":"7999:14:11"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"7989:6:11"}]},{"nodeType":"YulAssignment","src":"8030:31:11","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8047:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"8058:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8043:3:11"},"nodeType":"YulFunctionCall","src":"8043:18:11"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8030:9:11"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7878:1:11"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"7881:7:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7875:2:11"},"nodeType":"YulFunctionCall","src":"7875:14:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7890:21:11","statements":[{"nodeType":"YulAssignment","src":"7892:17:11","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7901:1:11"},{"kind":"number","nodeType":"YulLiteral","src":"7904:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7897:3:11"},"nodeType":"YulFunctionCall","src":"7897:12:11"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"7892:1:11"}]}]},"pre":{"nodeType":"YulBlock","src":"7871:3:11","statements":[]},"src":"7867:208:11"},{"body":{"nodeType":"YulBlock","src":"8111:156:11","statements":[{"nodeType":"YulVariableDeclaration","src":"8129:43:11","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8156:3:11"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8161:9:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8152:3:11"},"nodeType":"YulFunctionCall","src":"8152:19:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8146:5:11"},"nodeType":"YulFunctionCall","src":"8146:26:11"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"8133:9:11","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8196:6:11"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"8223:9:11"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8238:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"8246:4:11","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8234:3:11"},"nodeType":"YulFunctionCall","src":"8234:17:11"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"8204:18:11"},"nodeType":"YulFunctionCall","src":"8204:48:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8189:6:11"},"nodeType":"YulFunctionCall","src":"8189:64:11"},"nodeType":"YulExpressionStatement","src":"8189:64:11"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"8094:7:11"},{"name":"newLen","nodeType":"YulIdentifier","src":"8103:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8091:2:11"},"nodeType":"YulFunctionCall","src":"8091:19:11"},"nodeType":"YulIf","src":"8088:179:11"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8287:4:11"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8301:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"8309:1:11","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8297:3:11"},"nodeType":"YulFunctionCall","src":"8297:14:11"},{"kind":"number","nodeType":"YulLiteral","src":"8313:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8293:3:11"},"nodeType":"YulFunctionCall","src":"8293:22:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8280:6:11"},"nodeType":"YulFunctionCall","src":"8280:36:11"},"nodeType":"YulExpressionStatement","src":"8280:36:11"}]},"nodeType":"YulCase","src":"7708:618:11","value":{"kind":"number","nodeType":"YulLiteral","src":"7713:1:11","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"8343:222:11","statements":[{"nodeType":"YulVariableDeclaration","src":"8357:14:11","value":{"kind":"number","nodeType":"YulLiteral","src":"8370:1:11","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"8361:5:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"8394:67:11","statements":[{"nodeType":"YulAssignment","src":"8412:35:11","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8431:3:11"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8436:9:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8427:3:11"},"nodeType":"YulFunctionCall","src":"8427:19:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8421:5:11"},"nodeType":"YulFunctionCall","src":"8421:26:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8412:5:11"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"8387:6:11"},"nodeType":"YulIf","src":"8384:77:11"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8481:4:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8540:5:11"},{"name":"newLen","nodeType":"YulIdentifier","src":"8547:6:11"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"8487:52:11"},"nodeType":"YulFunctionCall","src":"8487:67:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8474:6:11"},"nodeType":"YulFunctionCall","src":"8474:81:11"},"nodeType":"YulExpressionStatement","src":"8474:81:11"}]},"nodeType":"YulCase","src":"8335:230:11","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7688:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"7696:2:11","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7685:2:11"},"nodeType":"YulFunctionCall","src":"7685:14:11"},"nodeType":"YulSwitch","src":"7678:887:11"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"7257:4:11","type":""},{"name":"src","nodeType":"YulTypedName","src":"7263:3:11","type":""}],"src":"7176:1395:11"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n","id":11,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b50604051620017ec380380620017ec8339818101604052810190620000379190620001f6565b8160039081620000489190620004c6565b5080600490816200005a9190620004c6565b505050620005ad565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620000cc8262000081565b810181811067ffffffffffffffff82111715620000ee57620000ed62000092565b5b80604052505050565b60006200010362000063565b9050620001118282620000c1565b919050565b600067ffffffffffffffff82111562000134576200013362000092565b5b6200013f8262000081565b9050602081019050919050565b60005b838110156200016c5780820151818401526020810190506200014f565b60008484015250505050565b60006200018f620001898462000116565b620000f7565b905082815260208101848484011115620001ae57620001ad6200007c565b5b620001bb8482856200014c565b509392505050565b600082601f830112620001db57620001da62000077565b5b8151620001ed84826020860162000178565b91505092915050565b6000806040838503121562000210576200020f6200006d565b5b600083015167ffffffffffffffff81111562000231576200023062000072565b5b6200023f85828601620001c3565b925050602083015167ffffffffffffffff81111562000263576200026262000072565b5b6200027185828601620001c3565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620002ce57607f821691505b602082108103620002e457620002e362000286565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200034e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200030f565b6200035a86836200030f565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620003a7620003a16200039b8462000372565b6200037c565b62000372565b9050919050565b6000819050919050565b620003c38362000386565b620003db620003d282620003ae565b8484546200031c565b825550505050565b600090565b620003f2620003e3565b620003ff818484620003b8565b505050565b5b8181101562000427576200041b600082620003e8565b60018101905062000405565b5050565b601f82111562000476576200044081620002ea565b6200044b84620002ff565b810160208510156200045b578190505b620004736200046a85620002ff565b83018262000404565b50505b505050565b600082821c905092915050565b60006200049b600019846008026200047b565b1980831691505092915050565b6000620004b6838362000488565b9150826002028217905092915050565b620004d1826200027b565b67ffffffffffffffff811115620004ed57620004ec62000092565b5b620004f98254620002b5565b620005068282856200042b565b600060209050601f8311600181146200053e576000841562000529578287015190505b620005358582620004a8565b865550620005a5565b601f1984166200054e86620002ea565b60005b82811015620005785784890151825560018201915060208501945060208101905062000551565b8683101562000598578489015162000594601f89168262000488565b8355505b6001600288020188555050505b505050505050565b61122f80620005bd6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610b0c565b60405180910390f35b6100e660048036038101906100e19190610bc7565b610308565b6040516100f39190610c22565b60405180910390f35b61010461032b565b6040516101119190610c4c565b60405180910390f35b610134600480360381019061012f9190610c67565b610335565b6040516101419190610c22565b60405180910390f35b610152610364565b60405161015f9190610cd6565b60405180910390f35b610182600480360381019061017d9190610bc7565b61036d565b60405161018f9190610c22565b60405180910390f35b6101b260048036038101906101ad9190610cf1565b6103a4565b6040516101bf9190610c4c565b60405180910390f35b6101d06103ec565b6040516101dd9190610b0c565b60405180910390f35b61020060048036038101906101fb9190610bc7565b61047e565b60405161020d9190610c22565b60405180910390f35b610230600480360381019061022b9190610bc7565b6104f5565b60405161023d9190610c22565b60405180910390f35b610260600480360381019061025b9190610d1e565b610518565b60405161026d9190610c4c565b60405180910390f35b60606003805461028590610d8d565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610d8d565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b60008061031361059f565b90506103208185856105a7565b600191505092915050565b6000600254905090565b60008061034061059f565b905061034d858285610770565b6103588585856107fc565b60019150509392505050565b60006012905090565b60008061037861059f565b905061039981858561038a8589610518565b6103949190610ded565b6105a7565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546103fb90610d8d565b80601f016020809104026020016040519081016040528092919081815260200182805461042790610d8d565b80156104745780601f1061044957610100808354040283529160200191610474565b820191906000526020600020905b81548152906001019060200180831161045757829003601f168201915b5050505050905090565b60008061048961059f565b905060006104978286610518565b9050838110156104dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d390610e93565b60405180910390fd5b6104e982868684036105a7565b60019250505092915050565b60008061050061059f565b905061050d8185856107fc565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610616576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060d90610f25565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610685576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067c90610fb7565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107639190610c4c565b60405180910390a3505050565b600061077c8484610518565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107f657818110156107e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107df90611023565b60405180910390fd5b6107f584848484036105a7565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361086b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610862906110b5565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d190611147565b60405180910390fd5b6108e5838383610a72565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561096b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610962906111d9565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a599190610c4c565b60405180910390a3610a6c848484610a77565b50505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ab6578082015181840152602081019050610a9b565b60008484015250505050565b6000601f19601f8301169050919050565b6000610ade82610a7c565b610ae88185610a87565b9350610af8818560208601610a98565b610b0181610ac2565b840191505092915050565b60006020820190508181036000830152610b268184610ad3565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b5e82610b33565b9050919050565b610b6e81610b53565b8114610b7957600080fd5b50565b600081359050610b8b81610b65565b92915050565b6000819050919050565b610ba481610b91565b8114610baf57600080fd5b50565b600081359050610bc181610b9b565b92915050565b60008060408385031215610bde57610bdd610b2e565b5b6000610bec85828601610b7c565b9250506020610bfd85828601610bb2565b9150509250929050565b60008115159050919050565b610c1c81610c07565b82525050565b6000602082019050610c376000830184610c13565b92915050565b610c4681610b91565b82525050565b6000602082019050610c616000830184610c3d565b92915050565b600080600060608486031215610c8057610c7f610b2e565b5b6000610c8e86828701610b7c565b9350506020610c9f86828701610b7c565b9250506040610cb086828701610bb2565b9150509250925092565b600060ff82169050919050565b610cd081610cba565b82525050565b6000602082019050610ceb6000830184610cc7565b92915050565b600060208284031215610d0757610d06610b2e565b5b6000610d1584828501610b7c565b91505092915050565b60008060408385031215610d3557610d34610b2e565b5b6000610d4385828601610b7c565b9250506020610d5485828601610b7c565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610da557607f821691505b602082108103610db857610db7610d5e565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610df882610b91565b9150610e0383610b91565b9250828201905080821115610e1b57610e1a610dbe565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000610e7d602583610a87565b9150610e8882610e21565b604082019050919050565b60006020820190508181036000830152610eac81610e70565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000610f0f602483610a87565b9150610f1a82610eb3565b604082019050919050565b60006020820190508181036000830152610f3e81610f02565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000610fa1602283610a87565b9150610fac82610f45565b604082019050919050565b60006020820190508181036000830152610fd081610f94565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b600061100d601d83610a87565b915061101882610fd7565b602082019050919050565b6000602082019050818103600083015261103c81611000565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b600061109f602583610a87565b91506110aa82611043565b604082019050919050565b600060208201905081810360008301526110ce81611092565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611131602383610a87565b915061113c826110d5565b604082019050919050565b6000602082019050818103600083015261116081611124565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006111c3602683610a87565b91506111ce82611167565b604082019050919050565b600060208201905081810360008301526111f2816111b6565b905091905056fea26469706673582212208bf89113c83d92bd5ff0f89cfa7dafd4f92513878e53c7fab10e39104c9924e264736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x17EC CODESIZE SUB DUP1 PUSH3 0x17EC DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x1F6 JUMP JUMPDEST DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x48 SWAP2 SWAP1 PUSH3 0x4C6 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0x5A SWAP2 SWAP1 PUSH3 0x4C6 JUMP JUMPDEST POP POP POP PUSH3 0x5AD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0xCC DUP3 PUSH3 0x81 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0xEE JUMPI PUSH3 0xED PUSH3 0x92 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x103 PUSH3 0x63 JUMP JUMPDEST SWAP1 POP PUSH3 0x111 DUP3 DUP3 PUSH3 0xC1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x134 JUMPI PUSH3 0x133 PUSH3 0x92 JUMP JUMPDEST JUMPDEST PUSH3 0x13F DUP3 PUSH3 0x81 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x16C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x14F JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x18F PUSH3 0x189 DUP5 PUSH3 0x116 JUMP JUMPDEST PUSH3 0xF7 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x1AE JUMPI PUSH3 0x1AD PUSH3 0x7C JUMP JUMPDEST JUMPDEST PUSH3 0x1BB DUP5 DUP3 DUP6 PUSH3 0x14C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x1DB JUMPI PUSH3 0x1DA PUSH3 0x77 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x1ED DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x178 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x210 JUMPI PUSH3 0x20F PUSH3 0x6D JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x231 JUMPI PUSH3 0x230 PUSH3 0x72 JUMP JUMPDEST JUMPDEST PUSH3 0x23F DUP6 DUP3 DUP7 ADD PUSH3 0x1C3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x263 JUMPI PUSH3 0x262 PUSH3 0x72 JUMP JUMPDEST JUMPDEST PUSH3 0x271 DUP6 DUP3 DUP7 ADD PUSH3 0x1C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2CE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x2E4 JUMPI PUSH3 0x2E3 PUSH3 0x286 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x34E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x30F JUMP JUMPDEST PUSH3 0x35A DUP7 DUP4 PUSH3 0x30F JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3A7 PUSH3 0x3A1 PUSH3 0x39B DUP5 PUSH3 0x372 JUMP JUMPDEST PUSH3 0x37C JUMP JUMPDEST PUSH3 0x372 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3C3 DUP4 PUSH3 0x386 JUMP JUMPDEST PUSH3 0x3DB PUSH3 0x3D2 DUP3 PUSH3 0x3AE JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x31C JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x3F2 PUSH3 0x3E3 JUMP JUMPDEST PUSH3 0x3FF DUP2 DUP5 DUP5 PUSH3 0x3B8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x427 JUMPI PUSH3 0x41B PUSH1 0x0 DUP3 PUSH3 0x3E8 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x405 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x476 JUMPI PUSH3 0x440 DUP2 PUSH3 0x2EA JUMP JUMPDEST PUSH3 0x44B DUP5 PUSH3 0x2FF JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x45B JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x473 PUSH3 0x46A DUP6 PUSH3 0x2FF JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x404 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x49B PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x47B JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4B6 DUP4 DUP4 PUSH3 0x488 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x4D1 DUP3 PUSH3 0x27B JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x4ED JUMPI PUSH3 0x4EC PUSH3 0x92 JUMP JUMPDEST JUMPDEST PUSH3 0x4F9 DUP3 SLOAD PUSH3 0x2B5 JUMP JUMPDEST PUSH3 0x506 DUP3 DUP3 DUP6 PUSH3 0x42B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x53E JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x529 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x535 DUP6 DUP3 PUSH3 0x4A8 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x5A5 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x54E DUP7 PUSH3 0x2EA JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x578 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x551 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x598 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x594 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x488 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x122F DUP1 PUSH3 0x5BD PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xC67 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xCF1 JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x47E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xD1E JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x313 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x320 DUP2 DUP6 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x340 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x34D DUP6 DUP3 DUP6 PUSH2 0x770 JUMP JUMPDEST PUSH2 0x358 DUP6 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x378 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x399 DUP2 DUP6 DUP6 PUSH2 0x38A DUP6 DUP10 PUSH2 0x518 JUMP JUMPDEST PUSH2 0x394 SWAP2 SWAP1 PUSH2 0xDED JUMP JUMPDEST PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3FB SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x427 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x474 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x449 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x474 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x457 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x489 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x497 DUP3 DUP7 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D3 SWAP1 PUSH2 0xE93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E9 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x500 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x50D DUP2 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x616 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60D SWAP1 PUSH2 0xF25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x685 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67C SWAP1 PUSH2 0xFB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x763 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77C DUP5 DUP5 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7F6 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DF SWAP1 PUSH2 0x1023 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F5 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x86B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x862 SWAP1 PUSH2 0x10B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D1 SWAP1 PUSH2 0x1147 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E5 DUP4 DUP4 DUP4 PUSH2 0xA72 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x96B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x962 SWAP1 PUSH2 0x11D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA59 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA6C DUP5 DUP5 DUP5 PUSH2 0xA77 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAB6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA9B JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xADE DUP3 PUSH2 0xA7C JUMP JUMPDEST PUSH2 0xAE8 DUP2 DUP6 PUSH2 0xA87 JUMP JUMPDEST SWAP4 POP PUSH2 0xAF8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA98 JUMP JUMPDEST PUSH2 0xB01 DUP2 PUSH2 0xAC2 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB26 DUP2 DUP5 PUSH2 0xAD3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB5E DUP3 PUSH2 0xB33 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB6E DUP2 PUSH2 0xB53 JUMP JUMPDEST DUP2 EQ PUSH2 0xB79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB8B DUP2 PUSH2 0xB65 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBA4 DUP2 PUSH2 0xB91 JUMP JUMPDEST DUP2 EQ PUSH2 0xBAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBC1 DUP2 PUSH2 0xB9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBDE JUMPI PUSH2 0xBDD PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBEC DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xBFD DUP6 DUP3 DUP7 ADD PUSH2 0xBB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC1C DUP2 PUSH2 0xC07 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC37 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC13 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC46 DUP2 PUSH2 0xB91 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC61 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC3D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC80 JUMPI PUSH2 0xC7F PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC8E DUP7 DUP3 DUP8 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC9F DUP7 DUP3 DUP8 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCB0 DUP7 DUP3 DUP8 ADD PUSH2 0xBB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCD0 DUP2 PUSH2 0xCBA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCEB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCC7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD07 JUMPI PUSH2 0xD06 PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD15 DUP5 DUP3 DUP6 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD35 JUMPI PUSH2 0xD34 PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD43 DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD54 DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xDA5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xDB8 JUMPI PUSH2 0xDB7 PUSH2 0xD5E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xDF8 DUP3 PUSH2 0xB91 JUMP JUMPDEST SWAP2 POP PUSH2 0xE03 DUP4 PUSH2 0xB91 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE1B JUMPI PUSH2 0xE1A PUSH2 0xDBE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE7D PUSH1 0x25 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xE88 DUP3 PUSH2 0xE21 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEAC DUP2 PUSH2 0xE70 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF0F PUSH1 0x24 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xF1A DUP3 PUSH2 0xEB3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF3E DUP2 PUSH2 0xF02 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFA1 PUSH1 0x22 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xFAC DUP3 PUSH2 0xF45 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFD0 DUP2 PUSH2 0xF94 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100D PUSH1 0x1D DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x1018 DUP3 PUSH2 0xFD7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x103C DUP2 PUSH2 0x1000 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x109F PUSH1 0x25 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x10AA DUP3 PUSH2 0x1043 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10CE DUP2 PUSH2 0x1092 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1131 PUSH1 0x23 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x113C DUP3 PUSH2 0x10D5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1160 DUP2 PUSH2 0x1124 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11C3 PUSH1 0x26 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x11CE DUP3 PUSH2 0x1167 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11F2 DUP2 PUSH2 0x11B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP12 0xF8 SWAP2 SGT 0xC8 RETURNDATASIZE SWAP3 0xBD 0x5F CREATE 0xF8 SWAP13 STATICCALL PUSH30 0xAFD4F92513878E53C7FAB10E39104C9924E264736F6C6343000812003300 ","sourceMap":"1532:11312:2:-:0;;;1980:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2054:5;2046;:13;;;;;;:::i;:::-;;2079:7;2069;:17;;;;;;:::i;:::-;;1980:113;;1532:11312;;7:75:11;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:853::-;2776:6;2784;2833:2;2821:9;2812:7;2808:23;2804:32;2801:119;;;2839:79;;:::i;:::-;2801:119;2980:1;2969:9;2965:17;2959:24;3010:18;3002:6;2999:30;2996:117;;;3032:79;;:::i;:::-;2996:117;3137:74;3203:7;3194:6;3183:9;3179:22;3137:74;:::i;:::-;3127:84;;2930:291;3281:2;3270:9;3266:18;3260:25;3312:18;3304:6;3301:30;3298:117;;;3334:79;;:::i;:::-;3298:117;3439:74;3505:7;3496:6;3485:9;3481:22;3439:74;:::i;:::-;3429:84;;3231:292;2677:853;;;;;:::o;3536:99::-;3588:6;3622:5;3616:12;3606:22;;3536:99;;;:::o;3641:180::-;3689:77;3686:1;3679:88;3786:4;3783:1;3776:15;3810:4;3807:1;3800:15;3827:320;3871:6;3908:1;3902:4;3898:12;3888:22;;3955:1;3949:4;3945:12;3976:18;3966:81;;4032:4;4024:6;4020:17;4010:27;;3966:81;4094:2;4086:6;4083:14;4063:18;4060:38;4057:84;;4113:18;;:::i;:::-;4057:84;3878:269;3827:320;;;:::o;4153:141::-;4202:4;4225:3;4217:11;;4248:3;4245:1;4238:14;4282:4;4279:1;4269:18;4261:26;;4153:141;;;:::o;4300:93::-;4337:6;4384:2;4379;4372:5;4368:14;4364:23;4354:33;;4300:93;;;:::o;4399:107::-;4443:8;4493:5;4487:4;4483:16;4462:37;;4399:107;;;;:::o;4512:393::-;4581:6;4631:1;4619:10;4615:18;4654:97;4684:66;4673:9;4654:97;:::i;:::-;4772:39;4802:8;4791:9;4772:39;:::i;:::-;4760:51;;4844:4;4840:9;4833:5;4829:21;4820:30;;4893:4;4883:8;4879:19;4872:5;4869:30;4859:40;;4588:317;;4512:393;;;;;:::o;4911:77::-;4948:7;4977:5;4966:16;;4911:77;;;:::o;4994:60::-;5022:3;5043:5;5036:12;;4994:60;;;:::o;5060:142::-;5110:9;5143:53;5161:34;5170:24;5188:5;5170:24;:::i;:::-;5161:34;:::i;:::-;5143:53;:::i;:::-;5130:66;;5060:142;;;:::o;5208:75::-;5251:3;5272:5;5265:12;;5208:75;;;:::o;5289:269::-;5399:39;5430:7;5399:39;:::i;:::-;5460:91;5509:41;5533:16;5509:41;:::i;:::-;5501:6;5494:4;5488:11;5460:91;:::i;:::-;5454:4;5447:105;5365:193;5289:269;;;:::o;5564:73::-;5609:3;5564:73;:::o;5643:189::-;5720:32;;:::i;:::-;5761:65;5819:6;5811;5805:4;5761:65;:::i;:::-;5696:136;5643:189;;:::o;5838:186::-;5898:120;5915:3;5908:5;5905:14;5898:120;;;5969:39;6006:1;5999:5;5969:39;:::i;:::-;5942:1;5935:5;5931:13;5922:22;;5898:120;;;5838:186;;:::o;6030:543::-;6131:2;6126:3;6123:11;6120:446;;;6165:38;6197:5;6165:38;:::i;:::-;6249:29;6267:10;6249:29;:::i;:::-;6239:8;6235:44;6432:2;6420:10;6417:18;6414:49;;;6453:8;6438:23;;6414:49;6476:80;6532:22;6550:3;6532:22;:::i;:::-;6522:8;6518:37;6505:11;6476:80;:::i;:::-;6135:431;;6120:446;6030:543;;;:::o;6579:117::-;6633:8;6683:5;6677:4;6673:16;6652:37;;6579:117;;;;:::o;6702:169::-;6746:6;6779:51;6827:1;6823:6;6815:5;6812:1;6808:13;6779:51;:::i;:::-;6775:56;6860:4;6854;6850:15;6840:25;;6753:118;6702:169;;;;:::o;6876:295::-;6952:4;7098:29;7123:3;7117:4;7098:29;:::i;:::-;7090:37;;7160:3;7157:1;7153:11;7147:4;7144:21;7136:29;;6876:295;;;;:::o;7176:1395::-;7293:37;7326:3;7293:37;:::i;:::-;7395:18;7387:6;7384:30;7381:56;;;7417:18;;:::i;:::-;7381:56;7461:38;7493:4;7487:11;7461:38;:::i;:::-;7546:67;7606:6;7598;7592:4;7546:67;:::i;:::-;7640:1;7664:4;7651:17;;7696:2;7688:6;7685:14;7713:1;7708:618;;;;8370:1;8387:6;8384:77;;;8436:9;8431:3;8427:19;8421:26;8412:35;;8384:77;8487:67;8547:6;8540:5;8487:67;:::i;:::-;8481:4;8474:81;8343:222;7678:887;;7708:618;7760:4;7756:9;7748:6;7744:22;7794:37;7826:4;7794:37;:::i;:::-;7853:1;7867:208;7881:7;7878:1;7875:14;7867:208;;;7960:9;7955:3;7951:19;7945:26;7937:6;7930:42;8011:1;8003:6;7999:14;7989:24;;8058:2;8047:9;8043:18;8030:31;;7904:4;7901:1;7897:12;7892:17;;7867:208;;;8103:6;8094:7;8091:19;8088:179;;;8161:9;8156:3;8152:19;8146:26;8204:48;8246:4;8238:6;8234:17;8223:9;8204:48;:::i;:::-;8196:6;8189:64;8111:156;8088:179;8313:1;8309;8301:6;8297:14;8293:22;8287:4;8280:36;7715:611;;;7678:887;;7268:1303;;;7176:1395;;:::o;1532:11312:2:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_763":{"entryPoint":2679,"id":763,"parameterSlots":3,"returnSlots":0},"@_approve_698":{"entryPoint":1447,"id":698,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_752":{"entryPoint":2674,"id":752,"parameterSlots":3,"returnSlots":0},"@_msgSender_1621":{"entryPoint":1439,"id":1621,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_741":{"entryPoint":1904,"id":741,"parameterSlots":3,"returnSlots":0},"@_transfer_524":{"entryPoint":2044,"id":524,"parameterSlots":3,"returnSlots":0},"@allowance_319":{"entryPoint":1304,"id":319,"parameterSlots":2,"returnSlots":1},"@approve_344":{"entryPoint":776,"id":344,"parameterSlots":2,"returnSlots":1},"@balanceOf_276":{"entryPoint":932,"id":276,"parameterSlots":1,"returnSlots":1},"@decimals_252":{"entryPoint":868,"id":252,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_447":{"entryPoint":1150,"id":447,"parameterSlots":2,"returnSlots":1},"@increaseAllowance_406":{"entryPoint":877,"id":406,"parameterSlots":2,"returnSlots":1},"@name_232":{"entryPoint":630,"id":232,"parameterSlots":0,"returnSlots":1},"@symbol_242":{"entryPoint":1004,"id":242,"parameterSlots":0,"returnSlots":1},"@totalSupply_262":{"entryPoint":811,"id":262,"parameterSlots":0,"returnSlots":1},"@transferFrom_377":{"entryPoint":821,"id":377,"parameterSlots":3,"returnSlots":1},"@transfer_301":{"entryPoint":1269,"id":301,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address":{"entryPoint":2940,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":2994,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3313,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":3358,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":3175,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":3015,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":3091,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":2771,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack":{"entryPoint":4388,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack":{"entryPoint":3988,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack":{"entryPoint":4096,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack":{"entryPoint":4534,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack":{"entryPoint":4242,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack":{"entryPoint":3842,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack":{"entryPoint":3696,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3133,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":3271,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":3106,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2828,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4423,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4023,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4131,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4569,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4277,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3877,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3731,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3148,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":3286,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":2684,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":2695,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":3565,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":2899,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":3079,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2867,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":2961,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":3258,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":2712,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":3469,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":3518,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":3422,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":2862,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":2754,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f":{"entryPoint":4309,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029":{"entryPoint":3909,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe":{"entryPoint":4055,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6":{"entryPoint":4455,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea":{"entryPoint":4163,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208":{"entryPoint":3763,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8":{"entryPoint":3617,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":2917,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":2971,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:13699:11","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:11","statements":[{"nodeType":"YulAssignment","src":"77:22:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:11"},"nodeType":"YulFunctionCall","src":"87:12:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:11"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:11","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:11","type":""}],"src":"7:99:11"},{"body":{"nodeType":"YulBlock","src":"208:73:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"225:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"230:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"218:6:11"},"nodeType":"YulFunctionCall","src":"218:19:11"},"nodeType":"YulExpressionStatement","src":"218:19:11"},{"nodeType":"YulAssignment","src":"246:29:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"265:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"270:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"261:3:11"},"nodeType":"YulFunctionCall","src":"261:14:11"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"246:11:11"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"180:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"185:6:11","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"196:11:11","type":""}],"src":"112:169:11"},{"body":{"nodeType":"YulBlock","src":"349:184:11","statements":[{"nodeType":"YulVariableDeclaration","src":"359:10:11","value":{"kind":"number","nodeType":"YulLiteral","src":"368:1:11","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"363:1:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"428:63:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"453:3:11"},{"name":"i","nodeType":"YulIdentifier","src":"458:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"449:3:11"},"nodeType":"YulFunctionCall","src":"449:11:11"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"472:3:11"},{"name":"i","nodeType":"YulIdentifier","src":"477:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"468:3:11"},"nodeType":"YulFunctionCall","src":"468:11:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"462:5:11"},"nodeType":"YulFunctionCall","src":"462:18:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"442:6:11"},"nodeType":"YulFunctionCall","src":"442:39:11"},"nodeType":"YulExpressionStatement","src":"442:39:11"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"389:1:11"},{"name":"length","nodeType":"YulIdentifier","src":"392:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"386:2:11"},"nodeType":"YulFunctionCall","src":"386:13:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"400:19:11","statements":[{"nodeType":"YulAssignment","src":"402:15:11","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"411:1:11"},{"kind":"number","nodeType":"YulLiteral","src":"414:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"407:3:11"},"nodeType":"YulFunctionCall","src":"407:10:11"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"402:1:11"}]}]},"pre":{"nodeType":"YulBlock","src":"382:3:11","statements":[]},"src":"378:113:11"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"511:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"516:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"507:3:11"},"nodeType":"YulFunctionCall","src":"507:16:11"},{"kind":"number","nodeType":"YulLiteral","src":"525:1:11","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"500:6:11"},"nodeType":"YulFunctionCall","src":"500:27:11"},"nodeType":"YulExpressionStatement","src":"500:27:11"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"331:3:11","type":""},{"name":"dst","nodeType":"YulTypedName","src":"336:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"341:6:11","type":""}],"src":"287:246:11"},{"body":{"nodeType":"YulBlock","src":"587:54:11","statements":[{"nodeType":"YulAssignment","src":"597:38:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"615:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"622:2:11","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"611:3:11"},"nodeType":"YulFunctionCall","src":"611:14:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"631:2:11","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"627:3:11"},"nodeType":"YulFunctionCall","src":"627:7:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"607:3:11"},"nodeType":"YulFunctionCall","src":"607:28:11"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"597:6:11"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"570:5:11","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"580:6:11","type":""}],"src":"539:102:11"},{"body":{"nodeType":"YulBlock","src":"739:285:11","statements":[{"nodeType":"YulVariableDeclaration","src":"749:53:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"796:5:11"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"763:32:11"},"nodeType":"YulFunctionCall","src":"763:39:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"753:6:11","type":""}]},{"nodeType":"YulAssignment","src":"811:78:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"877:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"882:6:11"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"818:58:11"},"nodeType":"YulFunctionCall","src":"818:71:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"811:3:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"937:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"944:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"933:3:11"},"nodeType":"YulFunctionCall","src":"933:16:11"},{"name":"pos","nodeType":"YulIdentifier","src":"951:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"956:6:11"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"898:34:11"},"nodeType":"YulFunctionCall","src":"898:65:11"},"nodeType":"YulExpressionStatement","src":"898:65:11"},{"nodeType":"YulAssignment","src":"972:46:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"983:3:11"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1010:6:11"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"988:21:11"},"nodeType":"YulFunctionCall","src":"988:29:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"979:3:11"},"nodeType":"YulFunctionCall","src":"979:39:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"972:3:11"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"720:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"727:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"735:3:11","type":""}],"src":"647:377:11"},{"body":{"nodeType":"YulBlock","src":"1148:195:11","statements":[{"nodeType":"YulAssignment","src":"1158:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1170:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1181:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1166:3:11"},"nodeType":"YulFunctionCall","src":"1166:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1158:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1205:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1216:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1201:3:11"},"nodeType":"YulFunctionCall","src":"1201:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1224:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"1230:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1220:3:11"},"nodeType":"YulFunctionCall","src":"1220:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1194:6:11"},"nodeType":"YulFunctionCall","src":"1194:47:11"},"nodeType":"YulExpressionStatement","src":"1194:47:11"},{"nodeType":"YulAssignment","src":"1250:86:11","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1322:6:11"},{"name":"tail","nodeType":"YulIdentifier","src":"1331:4:11"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1258:63:11"},"nodeType":"YulFunctionCall","src":"1258:78:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1250:4:11"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1120:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1132:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1143:4:11","type":""}],"src":"1030:313:11"},{"body":{"nodeType":"YulBlock","src":"1389:35:11","statements":[{"nodeType":"YulAssignment","src":"1399:19:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1415:2:11","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1409:5:11"},"nodeType":"YulFunctionCall","src":"1409:9:11"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1399:6:11"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1382:6:11","type":""}],"src":"1349:75:11"},{"body":{"nodeType":"YulBlock","src":"1519:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1536:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1539:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1529:6:11"},"nodeType":"YulFunctionCall","src":"1529:12:11"},"nodeType":"YulExpressionStatement","src":"1529:12:11"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1430:117:11"},{"body":{"nodeType":"YulBlock","src":"1642:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1659:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1662:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1652:6:11"},"nodeType":"YulFunctionCall","src":"1652:12:11"},"nodeType":"YulExpressionStatement","src":"1652:12:11"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1553:117:11"},{"body":{"nodeType":"YulBlock","src":"1721:81:11","statements":[{"nodeType":"YulAssignment","src":"1731:65:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1746:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"1753:42:11","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1742:3:11"},"nodeType":"YulFunctionCall","src":"1742:54:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1731:7:11"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1703:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1713:7:11","type":""}],"src":"1676:126:11"},{"body":{"nodeType":"YulBlock","src":"1853:51:11","statements":[{"nodeType":"YulAssignment","src":"1863:35:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1892:5:11"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1874:17:11"},"nodeType":"YulFunctionCall","src":"1874:24:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1863:7:11"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1835:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1845:7:11","type":""}],"src":"1808:96:11"},{"body":{"nodeType":"YulBlock","src":"1953:79:11","statements":[{"body":{"nodeType":"YulBlock","src":"2010:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2019:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2022:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2012:6:11"},"nodeType":"YulFunctionCall","src":"2012:12:11"},"nodeType":"YulExpressionStatement","src":"2012:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1976:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2001:5:11"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1983:17:11"},"nodeType":"YulFunctionCall","src":"1983:24:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1973:2:11"},"nodeType":"YulFunctionCall","src":"1973:35:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1966:6:11"},"nodeType":"YulFunctionCall","src":"1966:43:11"},"nodeType":"YulIf","src":"1963:63:11"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1946:5:11","type":""}],"src":"1910:122:11"},{"body":{"nodeType":"YulBlock","src":"2090:87:11","statements":[{"nodeType":"YulAssignment","src":"2100:29:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2122:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2109:12:11"},"nodeType":"YulFunctionCall","src":"2109:20:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2100:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2165:5:11"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2138:26:11"},"nodeType":"YulFunctionCall","src":"2138:33:11"},"nodeType":"YulExpressionStatement","src":"2138:33:11"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2068:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"2076:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2084:5:11","type":""}],"src":"2038:139:11"},{"body":{"nodeType":"YulBlock","src":"2228:32:11","statements":[{"nodeType":"YulAssignment","src":"2238:16:11","value":{"name":"value","nodeType":"YulIdentifier","src":"2249:5:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2238:7:11"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2210:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2220:7:11","type":""}],"src":"2183:77:11"},{"body":{"nodeType":"YulBlock","src":"2309:79:11","statements":[{"body":{"nodeType":"YulBlock","src":"2366:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2375:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2378:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2368:6:11"},"nodeType":"YulFunctionCall","src":"2368:12:11"},"nodeType":"YulExpressionStatement","src":"2368:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2332:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2357:5:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2339:17:11"},"nodeType":"YulFunctionCall","src":"2339:24:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2329:2:11"},"nodeType":"YulFunctionCall","src":"2329:35:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2322:6:11"},"nodeType":"YulFunctionCall","src":"2322:43:11"},"nodeType":"YulIf","src":"2319:63:11"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2302:5:11","type":""}],"src":"2266:122:11"},{"body":{"nodeType":"YulBlock","src":"2446:87:11","statements":[{"nodeType":"YulAssignment","src":"2456:29:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2478:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2465:12:11"},"nodeType":"YulFunctionCall","src":"2465:20:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2456:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2521:5:11"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2494:26:11"},"nodeType":"YulFunctionCall","src":"2494:33:11"},"nodeType":"YulExpressionStatement","src":"2494:33:11"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2424:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"2432:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2440:5:11","type":""}],"src":"2394:139:11"},{"body":{"nodeType":"YulBlock","src":"2622:391:11","statements":[{"body":{"nodeType":"YulBlock","src":"2668:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2670:77:11"},"nodeType":"YulFunctionCall","src":"2670:79:11"},"nodeType":"YulExpressionStatement","src":"2670:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2643:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"2652:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2639:3:11"},"nodeType":"YulFunctionCall","src":"2639:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"2664:2:11","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2635:3:11"},"nodeType":"YulFunctionCall","src":"2635:32:11"},"nodeType":"YulIf","src":"2632:119:11"},{"nodeType":"YulBlock","src":"2761:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"2776:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"2790:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2780:6:11","type":""}]},{"nodeType":"YulAssignment","src":"2805:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2840:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"2851:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2836:3:11"},"nodeType":"YulFunctionCall","src":"2836:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2860:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2815:20:11"},"nodeType":"YulFunctionCall","src":"2815:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2805:6:11"}]}]},{"nodeType":"YulBlock","src":"2888:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"2903:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"2917:2:11","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2907:6:11","type":""}]},{"nodeType":"YulAssignment","src":"2933:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2968:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"2979:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2964:3:11"},"nodeType":"YulFunctionCall","src":"2964:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2988:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2943:20:11"},"nodeType":"YulFunctionCall","src":"2943:53:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2933:6:11"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2584:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2595:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2607:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2615:6:11","type":""}],"src":"2539:474:11"},{"body":{"nodeType":"YulBlock","src":"3061:48:11","statements":[{"nodeType":"YulAssignment","src":"3071:32:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3096:5:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3089:6:11"},"nodeType":"YulFunctionCall","src":"3089:13:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3082:6:11"},"nodeType":"YulFunctionCall","src":"3082:21:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3071:7:11"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3043:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3053:7:11","type":""}],"src":"3019:90:11"},{"body":{"nodeType":"YulBlock","src":"3174:50:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3191:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3211:5:11"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"3196:14:11"},"nodeType":"YulFunctionCall","src":"3196:21:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3184:6:11"},"nodeType":"YulFunctionCall","src":"3184:34:11"},"nodeType":"YulExpressionStatement","src":"3184:34:11"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3162:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3169:3:11","type":""}],"src":"3115:109:11"},{"body":{"nodeType":"YulBlock","src":"3322:118:11","statements":[{"nodeType":"YulAssignment","src":"3332:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3344:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3355:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3340:3:11"},"nodeType":"YulFunctionCall","src":"3340:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3332:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3406:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3419:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3430:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3415:3:11"},"nodeType":"YulFunctionCall","src":"3415:17:11"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"3368:37:11"},"nodeType":"YulFunctionCall","src":"3368:65:11"},"nodeType":"YulExpressionStatement","src":"3368:65:11"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3294:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3306:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3317:4:11","type":""}],"src":"3230:210:11"},{"body":{"nodeType":"YulBlock","src":"3511:53:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3528:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3551:5:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3533:17:11"},"nodeType":"YulFunctionCall","src":"3533:24:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3521:6:11"},"nodeType":"YulFunctionCall","src":"3521:37:11"},"nodeType":"YulExpressionStatement","src":"3521:37:11"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3499:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3506:3:11","type":""}],"src":"3446:118:11"},{"body":{"nodeType":"YulBlock","src":"3668:124:11","statements":[{"nodeType":"YulAssignment","src":"3678:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3690:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3701:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3686:3:11"},"nodeType":"YulFunctionCall","src":"3686:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3678:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3758:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3771:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3782:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3767:3:11"},"nodeType":"YulFunctionCall","src":"3767:17:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"3714:43:11"},"nodeType":"YulFunctionCall","src":"3714:71:11"},"nodeType":"YulExpressionStatement","src":"3714:71:11"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3640:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3652:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3663:4:11","type":""}],"src":"3570:222:11"},{"body":{"nodeType":"YulBlock","src":"3898:519:11","statements":[{"body":{"nodeType":"YulBlock","src":"3944:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3946:77:11"},"nodeType":"YulFunctionCall","src":"3946:79:11"},"nodeType":"YulExpressionStatement","src":"3946:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3919:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"3928:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3915:3:11"},"nodeType":"YulFunctionCall","src":"3915:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"3940:2:11","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3911:3:11"},"nodeType":"YulFunctionCall","src":"3911:32:11"},"nodeType":"YulIf","src":"3908:119:11"},{"nodeType":"YulBlock","src":"4037:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"4052:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"4066:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4056:6:11","type":""}]},{"nodeType":"YulAssignment","src":"4081:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4116:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"4127:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4112:3:11"},"nodeType":"YulFunctionCall","src":"4112:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4136:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4091:20:11"},"nodeType":"YulFunctionCall","src":"4091:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4081:6:11"}]}]},{"nodeType":"YulBlock","src":"4164:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"4179:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"4193:2:11","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4183:6:11","type":""}]},{"nodeType":"YulAssignment","src":"4209:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4244:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"4255:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4240:3:11"},"nodeType":"YulFunctionCall","src":"4240:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4264:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4219:20:11"},"nodeType":"YulFunctionCall","src":"4219:53:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4209:6:11"}]}]},{"nodeType":"YulBlock","src":"4292:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"4307:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"4321:2:11","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4311:6:11","type":""}]},{"nodeType":"YulAssignment","src":"4337:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4372:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"4383:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4368:3:11"},"nodeType":"YulFunctionCall","src":"4368:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4392:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4347:20:11"},"nodeType":"YulFunctionCall","src":"4347:53:11"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4337:6:11"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3852:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3863:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3875:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3883:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3891:6:11","type":""}],"src":"3798:619:11"},{"body":{"nodeType":"YulBlock","src":"4466:43:11","statements":[{"nodeType":"YulAssignment","src":"4476:27:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4491:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"4498:4:11","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4487:3:11"},"nodeType":"YulFunctionCall","src":"4487:16:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4476:7:11"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4448:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4458:7:11","type":""}],"src":"4423:86:11"},{"body":{"nodeType":"YulBlock","src":"4576:51:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4593:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4614:5:11"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"4598:15:11"},"nodeType":"YulFunctionCall","src":"4598:22:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4586:6:11"},"nodeType":"YulFunctionCall","src":"4586:35:11"},"nodeType":"YulExpressionStatement","src":"4586:35:11"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4564:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4571:3:11","type":""}],"src":"4515:112:11"},{"body":{"nodeType":"YulBlock","src":"4727:120:11","statements":[{"nodeType":"YulAssignment","src":"4737:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4749:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4760:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4745:3:11"},"nodeType":"YulFunctionCall","src":"4745:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4737:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4813:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4826:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4837:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4822:3:11"},"nodeType":"YulFunctionCall","src":"4822:17:11"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"4773:39:11"},"nodeType":"YulFunctionCall","src":"4773:67:11"},"nodeType":"YulExpressionStatement","src":"4773:67:11"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4699:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4711:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4722:4:11","type":""}],"src":"4633:214:11"},{"body":{"nodeType":"YulBlock","src":"4919:263:11","statements":[{"body":{"nodeType":"YulBlock","src":"4965:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4967:77:11"},"nodeType":"YulFunctionCall","src":"4967:79:11"},"nodeType":"YulExpressionStatement","src":"4967:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4940:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"4949:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4936:3:11"},"nodeType":"YulFunctionCall","src":"4936:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"4961:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4932:3:11"},"nodeType":"YulFunctionCall","src":"4932:32:11"},"nodeType":"YulIf","src":"4929:119:11"},{"nodeType":"YulBlock","src":"5058:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"5073:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"5087:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5077:6:11","type":""}]},{"nodeType":"YulAssignment","src":"5102:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5137:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"5148:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5133:3:11"},"nodeType":"YulFunctionCall","src":"5133:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5157:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5112:20:11"},"nodeType":"YulFunctionCall","src":"5112:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5102:6:11"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4889:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4900:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4912:6:11","type":""}],"src":"4853:329:11"},{"body":{"nodeType":"YulBlock","src":"5271:391:11","statements":[{"body":{"nodeType":"YulBlock","src":"5317:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5319:77:11"},"nodeType":"YulFunctionCall","src":"5319:79:11"},"nodeType":"YulExpressionStatement","src":"5319:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5292:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"5301:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5288:3:11"},"nodeType":"YulFunctionCall","src":"5288:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"5313:2:11","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5284:3:11"},"nodeType":"YulFunctionCall","src":"5284:32:11"},"nodeType":"YulIf","src":"5281:119:11"},{"nodeType":"YulBlock","src":"5410:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"5425:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"5439:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5429:6:11","type":""}]},{"nodeType":"YulAssignment","src":"5454:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5489:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"5500:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5485:3:11"},"nodeType":"YulFunctionCall","src":"5485:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5509:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5464:20:11"},"nodeType":"YulFunctionCall","src":"5464:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5454:6:11"}]}]},{"nodeType":"YulBlock","src":"5537:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"5552:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"5566:2:11","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5556:6:11","type":""}]},{"nodeType":"YulAssignment","src":"5582:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5617:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"5628:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5613:3:11"},"nodeType":"YulFunctionCall","src":"5613:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5637:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5592:20:11"},"nodeType":"YulFunctionCall","src":"5592:53:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5582:6:11"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5233:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5244:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5256:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5264:6:11","type":""}],"src":"5188:474:11"},{"body":{"nodeType":"YulBlock","src":"5696:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5713:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5716:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5706:6:11"},"nodeType":"YulFunctionCall","src":"5706:88:11"},"nodeType":"YulExpressionStatement","src":"5706:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5810:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5813:4:11","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5803:6:11"},"nodeType":"YulFunctionCall","src":"5803:15:11"},"nodeType":"YulExpressionStatement","src":"5803:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5834:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5837:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5827:6:11"},"nodeType":"YulFunctionCall","src":"5827:15:11"},"nodeType":"YulExpressionStatement","src":"5827:15:11"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"5668:180:11"},{"body":{"nodeType":"YulBlock","src":"5905:269:11","statements":[{"nodeType":"YulAssignment","src":"5915:22:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5929:4:11"},{"kind":"number","nodeType":"YulLiteral","src":"5935:1:11","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"5925:3:11"},"nodeType":"YulFunctionCall","src":"5925:12:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5915:6:11"}]},{"nodeType":"YulVariableDeclaration","src":"5946:38:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5976:4:11"},{"kind":"number","nodeType":"YulLiteral","src":"5982:1:11","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5972:3:11"},"nodeType":"YulFunctionCall","src":"5972:12:11"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"5950:18:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"6023:51:11","statements":[{"nodeType":"YulAssignment","src":"6037:27:11","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6051:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"6059:4:11","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6047:3:11"},"nodeType":"YulFunctionCall","src":"6047:17:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6037:6:11"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6003:18:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5996:6:11"},"nodeType":"YulFunctionCall","src":"5996:26:11"},"nodeType":"YulIf","src":"5993:81:11"},{"body":{"nodeType":"YulBlock","src":"6126:42:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"6140:16:11"},"nodeType":"YulFunctionCall","src":"6140:18:11"},"nodeType":"YulExpressionStatement","src":"6140:18:11"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6090:18:11"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6113:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"6121:2:11","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6110:2:11"},"nodeType":"YulFunctionCall","src":"6110:14:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6087:2:11"},"nodeType":"YulFunctionCall","src":"6087:38:11"},"nodeType":"YulIf","src":"6084:84:11"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"5889:4:11","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"5898:6:11","type":""}],"src":"5854:320:11"},{"body":{"nodeType":"YulBlock","src":"6208:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6225:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6228:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6218:6:11"},"nodeType":"YulFunctionCall","src":"6218:88:11"},"nodeType":"YulExpressionStatement","src":"6218:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6322:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6325:4:11","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6315:6:11"},"nodeType":"YulFunctionCall","src":"6315:15:11"},"nodeType":"YulExpressionStatement","src":"6315:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6346:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6349:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6339:6:11"},"nodeType":"YulFunctionCall","src":"6339:15:11"},"nodeType":"YulExpressionStatement","src":"6339:15:11"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"6180:180:11"},{"body":{"nodeType":"YulBlock","src":"6410:147:11","statements":[{"nodeType":"YulAssignment","src":"6420:25:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6443:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6425:17:11"},"nodeType":"YulFunctionCall","src":"6425:20:11"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"6420:1:11"}]},{"nodeType":"YulAssignment","src":"6454:25:11","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6477:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6459:17:11"},"nodeType":"YulFunctionCall","src":"6459:20:11"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"6454:1:11"}]},{"nodeType":"YulAssignment","src":"6488:16:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6499:1:11"},{"name":"y","nodeType":"YulIdentifier","src":"6502:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6495:3:11"},"nodeType":"YulFunctionCall","src":"6495:9:11"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"6488:3:11"}]},{"body":{"nodeType":"YulBlock","src":"6528:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6530:16:11"},"nodeType":"YulFunctionCall","src":"6530:18:11"},"nodeType":"YulExpressionStatement","src":"6530:18:11"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6520:1:11"},{"name":"sum","nodeType":"YulIdentifier","src":"6523:3:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6517:2:11"},"nodeType":"YulFunctionCall","src":"6517:10:11"},"nodeType":"YulIf","src":"6514:36:11"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6397:1:11","type":""},{"name":"y","nodeType":"YulTypedName","src":"6400:1:11","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"6406:3:11","type":""}],"src":"6366:191:11"},{"body":{"nodeType":"YulBlock","src":"6669:118:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6691:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"6699:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6687:3:11"},"nodeType":"YulFunctionCall","src":"6687:14:11"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"6703:34:11","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6680:6:11"},"nodeType":"YulFunctionCall","src":"6680:58:11"},"nodeType":"YulExpressionStatement","src":"6680:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6759:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"6767:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6755:3:11"},"nodeType":"YulFunctionCall","src":"6755:15:11"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"6772:7:11","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6748:6:11"},"nodeType":"YulFunctionCall","src":"6748:32:11"},"nodeType":"YulExpressionStatement","src":"6748:32:11"}]},"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"6661:6:11","type":""}],"src":"6563:224:11"},{"body":{"nodeType":"YulBlock","src":"6939:220:11","statements":[{"nodeType":"YulAssignment","src":"6949:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7015:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"7020:2:11","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6956:58:11"},"nodeType":"YulFunctionCall","src":"6956:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6949:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7121:3:11"}],"functionName":{"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulIdentifier","src":"7032:88:11"},"nodeType":"YulFunctionCall","src":"7032:93:11"},"nodeType":"YulExpressionStatement","src":"7032:93:11"},{"nodeType":"YulAssignment","src":"7134:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7145:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"7150:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7141:3:11"},"nodeType":"YulFunctionCall","src":"7141:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7134:3:11"}]}]},"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6927:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6935:3:11","type":""}],"src":"6793:366:11"},{"body":{"nodeType":"YulBlock","src":"7336:248:11","statements":[{"nodeType":"YulAssignment","src":"7346:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7358:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"7369:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7354:3:11"},"nodeType":"YulFunctionCall","src":"7354:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7346:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7393:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"7404:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7389:3:11"},"nodeType":"YulFunctionCall","src":"7389:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7412:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"7418:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7408:3:11"},"nodeType":"YulFunctionCall","src":"7408:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7382:6:11"},"nodeType":"YulFunctionCall","src":"7382:47:11"},"nodeType":"YulExpressionStatement","src":"7382:47:11"},{"nodeType":"YulAssignment","src":"7438:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7572:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7446:124:11"},"nodeType":"YulFunctionCall","src":"7446:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7438:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7316:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7331:4:11","type":""}],"src":"7165:419:11"},{"body":{"nodeType":"YulBlock","src":"7696:117:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7718:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"7726:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7714:3:11"},"nodeType":"YulFunctionCall","src":"7714:14:11"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"7730:34:11","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7707:6:11"},"nodeType":"YulFunctionCall","src":"7707:58:11"},"nodeType":"YulExpressionStatement","src":"7707:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7786:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"7794:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7782:3:11"},"nodeType":"YulFunctionCall","src":"7782:15:11"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"7799:6:11","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7775:6:11"},"nodeType":"YulFunctionCall","src":"7775:31:11"},"nodeType":"YulExpressionStatement","src":"7775:31:11"}]},"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7688:6:11","type":""}],"src":"7590:223:11"},{"body":{"nodeType":"YulBlock","src":"7965:220:11","statements":[{"nodeType":"YulAssignment","src":"7975:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8041:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"8046:2:11","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7982:58:11"},"nodeType":"YulFunctionCall","src":"7982:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7975:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8147:3:11"}],"functionName":{"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulIdentifier","src":"8058:88:11"},"nodeType":"YulFunctionCall","src":"8058:93:11"},"nodeType":"YulExpressionStatement","src":"8058:93:11"},{"nodeType":"YulAssignment","src":"8160:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8171:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"8176:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8167:3:11"},"nodeType":"YulFunctionCall","src":"8167:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8160:3:11"}]}]},"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7953:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7961:3:11","type":""}],"src":"7819:366:11"},{"body":{"nodeType":"YulBlock","src":"8362:248:11","statements":[{"nodeType":"YulAssignment","src":"8372:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8384:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"8395:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8380:3:11"},"nodeType":"YulFunctionCall","src":"8380:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8372:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8419:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"8430:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8415:3:11"},"nodeType":"YulFunctionCall","src":"8415:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8438:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"8444:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8434:3:11"},"nodeType":"YulFunctionCall","src":"8434:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8408:6:11"},"nodeType":"YulFunctionCall","src":"8408:47:11"},"nodeType":"YulExpressionStatement","src":"8408:47:11"},{"nodeType":"YulAssignment","src":"8464:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8598:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8472:124:11"},"nodeType":"YulFunctionCall","src":"8472:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8464:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8342:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8357:4:11","type":""}],"src":"8191:419:11"},{"body":{"nodeType":"YulBlock","src":"8722:115:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8744:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"8752:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8740:3:11"},"nodeType":"YulFunctionCall","src":"8740:14:11"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"8756:34:11","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8733:6:11"},"nodeType":"YulFunctionCall","src":"8733:58:11"},"nodeType":"YulExpressionStatement","src":"8733:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8812:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"8820:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8808:3:11"},"nodeType":"YulFunctionCall","src":"8808:15:11"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"8825:4:11","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8801:6:11"},"nodeType":"YulFunctionCall","src":"8801:29:11"},"nodeType":"YulExpressionStatement","src":"8801:29:11"}]},"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"8714:6:11","type":""}],"src":"8616:221:11"},{"body":{"nodeType":"YulBlock","src":"8989:220:11","statements":[{"nodeType":"YulAssignment","src":"8999:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9065:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"9070:2:11","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9006:58:11"},"nodeType":"YulFunctionCall","src":"9006:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8999:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9171:3:11"}],"functionName":{"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulIdentifier","src":"9082:88:11"},"nodeType":"YulFunctionCall","src":"9082:93:11"},"nodeType":"YulExpressionStatement","src":"9082:93:11"},{"nodeType":"YulAssignment","src":"9184:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9195:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"9200:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9191:3:11"},"nodeType":"YulFunctionCall","src":"9191:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9184:3:11"}]}]},"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8977:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8985:3:11","type":""}],"src":"8843:366:11"},{"body":{"nodeType":"YulBlock","src":"9386:248:11","statements":[{"nodeType":"YulAssignment","src":"9396:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9408:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"9419:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9404:3:11"},"nodeType":"YulFunctionCall","src":"9404:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9396:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9443:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"9454:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9439:3:11"},"nodeType":"YulFunctionCall","src":"9439:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9462:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"9468:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9458:3:11"},"nodeType":"YulFunctionCall","src":"9458:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9432:6:11"},"nodeType":"YulFunctionCall","src":"9432:47:11"},"nodeType":"YulExpressionStatement","src":"9432:47:11"},{"nodeType":"YulAssignment","src":"9488:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9622:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9496:124:11"},"nodeType":"YulFunctionCall","src":"9496:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9488:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9366:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9381:4:11","type":""}],"src":"9215:419:11"},{"body":{"nodeType":"YulBlock","src":"9746:73:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9768:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"9776:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9764:3:11"},"nodeType":"YulFunctionCall","src":"9764:14:11"},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"9780:31:11","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9757:6:11"},"nodeType":"YulFunctionCall","src":"9757:55:11"},"nodeType":"YulExpressionStatement","src":"9757:55:11"}]},"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"9738:6:11","type":""}],"src":"9640:179:11"},{"body":{"nodeType":"YulBlock","src":"9971:220:11","statements":[{"nodeType":"YulAssignment","src":"9981:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10047:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"10052:2:11","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9988:58:11"},"nodeType":"YulFunctionCall","src":"9988:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9981:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10153:3:11"}],"functionName":{"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulIdentifier","src":"10064:88:11"},"nodeType":"YulFunctionCall","src":"10064:93:11"},"nodeType":"YulExpressionStatement","src":"10064:93:11"},{"nodeType":"YulAssignment","src":"10166:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10177:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"10182:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10173:3:11"},"nodeType":"YulFunctionCall","src":"10173:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10166:3:11"}]}]},"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9959:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9967:3:11","type":""}],"src":"9825:366:11"},{"body":{"nodeType":"YulBlock","src":"10368:248:11","statements":[{"nodeType":"YulAssignment","src":"10378:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10390:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"10401:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10386:3:11"},"nodeType":"YulFunctionCall","src":"10386:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10378:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10425:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"10436:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10421:3:11"},"nodeType":"YulFunctionCall","src":"10421:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10444:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"10450:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10440:3:11"},"nodeType":"YulFunctionCall","src":"10440:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10414:6:11"},"nodeType":"YulFunctionCall","src":"10414:47:11"},"nodeType":"YulExpressionStatement","src":"10414:47:11"},{"nodeType":"YulAssignment","src":"10470:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10604:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10478:124:11"},"nodeType":"YulFunctionCall","src":"10478:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10470:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10348:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10363:4:11","type":""}],"src":"10197:419:11"},{"body":{"nodeType":"YulBlock","src":"10728:118:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10750:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"10758:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10746:3:11"},"nodeType":"YulFunctionCall","src":"10746:14:11"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"10762:34:11","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10739:6:11"},"nodeType":"YulFunctionCall","src":"10739:58:11"},"nodeType":"YulExpressionStatement","src":"10739:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10818:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"10826:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10814:3:11"},"nodeType":"YulFunctionCall","src":"10814:15:11"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"10831:7:11","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10807:6:11"},"nodeType":"YulFunctionCall","src":"10807:32:11"},"nodeType":"YulExpressionStatement","src":"10807:32:11"}]},"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"10720:6:11","type":""}],"src":"10622:224:11"},{"body":{"nodeType":"YulBlock","src":"10998:220:11","statements":[{"nodeType":"YulAssignment","src":"11008:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11074:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"11079:2:11","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11015:58:11"},"nodeType":"YulFunctionCall","src":"11015:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11008:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11180:3:11"}],"functionName":{"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulIdentifier","src":"11091:88:11"},"nodeType":"YulFunctionCall","src":"11091:93:11"},"nodeType":"YulExpressionStatement","src":"11091:93:11"},{"nodeType":"YulAssignment","src":"11193:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11204:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"11209:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11200:3:11"},"nodeType":"YulFunctionCall","src":"11200:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11193:3:11"}]}]},"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10986:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10994:3:11","type":""}],"src":"10852:366:11"},{"body":{"nodeType":"YulBlock","src":"11395:248:11","statements":[{"nodeType":"YulAssignment","src":"11405:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11417:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"11428:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11413:3:11"},"nodeType":"YulFunctionCall","src":"11413:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11405:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11452:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"11463:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11448:3:11"},"nodeType":"YulFunctionCall","src":"11448:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11471:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"11477:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11467:3:11"},"nodeType":"YulFunctionCall","src":"11467:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11441:6:11"},"nodeType":"YulFunctionCall","src":"11441:47:11"},"nodeType":"YulExpressionStatement","src":"11441:47:11"},{"nodeType":"YulAssignment","src":"11497:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11631:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11505:124:11"},"nodeType":"YulFunctionCall","src":"11505:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11497:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11375:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11390:4:11","type":""}],"src":"11224:419:11"},{"body":{"nodeType":"YulBlock","src":"11755:116:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11777:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"11785:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11773:3:11"},"nodeType":"YulFunctionCall","src":"11773:14:11"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"11789:34:11","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11766:6:11"},"nodeType":"YulFunctionCall","src":"11766:58:11"},"nodeType":"YulExpressionStatement","src":"11766:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11845:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"11853:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11841:3:11"},"nodeType":"YulFunctionCall","src":"11841:15:11"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"11858:5:11","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11834:6:11"},"nodeType":"YulFunctionCall","src":"11834:30:11"},"nodeType":"YulExpressionStatement","src":"11834:30:11"}]},"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11747:6:11","type":""}],"src":"11649:222:11"},{"body":{"nodeType":"YulBlock","src":"12023:220:11","statements":[{"nodeType":"YulAssignment","src":"12033:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12099:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"12104:2:11","type":"","value":"35"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12040:58:11"},"nodeType":"YulFunctionCall","src":"12040:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12033:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12205:3:11"}],"functionName":{"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulIdentifier","src":"12116:88:11"},"nodeType":"YulFunctionCall","src":"12116:93:11"},"nodeType":"YulExpressionStatement","src":"12116:93:11"},{"nodeType":"YulAssignment","src":"12218:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12229:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"12234:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12225:3:11"},"nodeType":"YulFunctionCall","src":"12225:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12218:3:11"}]}]},"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12011:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12019:3:11","type":""}],"src":"11877:366:11"},{"body":{"nodeType":"YulBlock","src":"12420:248:11","statements":[{"nodeType":"YulAssignment","src":"12430:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12442:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"12453:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12438:3:11"},"nodeType":"YulFunctionCall","src":"12438:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12430:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12477:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"12488:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12473:3:11"},"nodeType":"YulFunctionCall","src":"12473:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12496:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"12502:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12492:3:11"},"nodeType":"YulFunctionCall","src":"12492:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12466:6:11"},"nodeType":"YulFunctionCall","src":"12466:47:11"},"nodeType":"YulExpressionStatement","src":"12466:47:11"},{"nodeType":"YulAssignment","src":"12522:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12656:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12530:124:11"},"nodeType":"YulFunctionCall","src":"12530:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12522:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12400:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12415:4:11","type":""}],"src":"12249:419:11"},{"body":{"nodeType":"YulBlock","src":"12780:119:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12802:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"12810:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12798:3:11"},"nodeType":"YulFunctionCall","src":"12798:14:11"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062","kind":"string","nodeType":"YulLiteral","src":"12814:34:11","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12791:6:11"},"nodeType":"YulFunctionCall","src":"12791:58:11"},"nodeType":"YulExpressionStatement","src":"12791:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12870:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"12878:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12866:3:11"},"nodeType":"YulFunctionCall","src":"12866:15:11"},{"hexValue":"616c616e6365","kind":"string","nodeType":"YulLiteral","src":"12883:8:11","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12859:6:11"},"nodeType":"YulFunctionCall","src":"12859:33:11"},"nodeType":"YulExpressionStatement","src":"12859:33:11"}]},"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12772:6:11","type":""}],"src":"12674:225:11"},{"body":{"nodeType":"YulBlock","src":"13051:220:11","statements":[{"nodeType":"YulAssignment","src":"13061:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13127:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"13132:2:11","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13068:58:11"},"nodeType":"YulFunctionCall","src":"13068:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13061:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13233:3:11"}],"functionName":{"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulIdentifier","src":"13144:88:11"},"nodeType":"YulFunctionCall","src":"13144:93:11"},"nodeType":"YulExpressionStatement","src":"13144:93:11"},{"nodeType":"YulAssignment","src":"13246:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13257:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"13262:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13253:3:11"},"nodeType":"YulFunctionCall","src":"13253:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13246:3:11"}]}]},"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13039:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13047:3:11","type":""}],"src":"12905:366:11"},{"body":{"nodeType":"YulBlock","src":"13448:248:11","statements":[{"nodeType":"YulAssignment","src":"13458:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13470:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"13481:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13466:3:11"},"nodeType":"YulFunctionCall","src":"13466:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13458:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13505:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"13516:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13501:3:11"},"nodeType":"YulFunctionCall","src":"13501:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13524:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"13530:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13520:3:11"},"nodeType":"YulFunctionCall","src":"13520:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13494:6:11"},"nodeType":"YulFunctionCall","src":"13494:47:11"},"nodeType":"YulExpressionStatement","src":"13494:47:11"},{"nodeType":"YulAssignment","src":"13550:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13684:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13558:124:11"},"nodeType":"YulFunctionCall","src":"13558:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13550:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13428:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13443:4:11","type":""}],"src":"13277:419:11"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: insufficient allowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(memPtr, 32), \"alance\")\n\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":11,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610b0c565b60405180910390f35b6100e660048036038101906100e19190610bc7565b610308565b6040516100f39190610c22565b60405180910390f35b61010461032b565b6040516101119190610c4c565b60405180910390f35b610134600480360381019061012f9190610c67565b610335565b6040516101419190610c22565b60405180910390f35b610152610364565b60405161015f9190610cd6565b60405180910390f35b610182600480360381019061017d9190610bc7565b61036d565b60405161018f9190610c22565b60405180910390f35b6101b260048036038101906101ad9190610cf1565b6103a4565b6040516101bf9190610c4c565b60405180910390f35b6101d06103ec565b6040516101dd9190610b0c565b60405180910390f35b61020060048036038101906101fb9190610bc7565b61047e565b60405161020d9190610c22565b60405180910390f35b610230600480360381019061022b9190610bc7565b6104f5565b60405161023d9190610c22565b60405180910390f35b610260600480360381019061025b9190610d1e565b610518565b60405161026d9190610c4c565b60405180910390f35b60606003805461028590610d8d565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610d8d565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b60008061031361059f565b90506103208185856105a7565b600191505092915050565b6000600254905090565b60008061034061059f565b905061034d858285610770565b6103588585856107fc565b60019150509392505050565b60006012905090565b60008061037861059f565b905061039981858561038a8589610518565b6103949190610ded565b6105a7565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546103fb90610d8d565b80601f016020809104026020016040519081016040528092919081815260200182805461042790610d8d565b80156104745780601f1061044957610100808354040283529160200191610474565b820191906000526020600020905b81548152906001019060200180831161045757829003601f168201915b5050505050905090565b60008061048961059f565b905060006104978286610518565b9050838110156104dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d390610e93565b60405180910390fd5b6104e982868684036105a7565b60019250505092915050565b60008061050061059f565b905061050d8185856107fc565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610616576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060d90610f25565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610685576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067c90610fb7565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107639190610c4c565b60405180910390a3505050565b600061077c8484610518565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107f657818110156107e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107df90611023565b60405180910390fd5b6107f584848484036105a7565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361086b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610862906110b5565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d190611147565b60405180910390fd5b6108e5838383610a72565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561096b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610962906111d9565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a599190610c4c565b60405180910390a3610a6c848484610a77565b50505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ab6578082015181840152602081019050610a9b565b60008484015250505050565b6000601f19601f8301169050919050565b6000610ade82610a7c565b610ae88185610a87565b9350610af8818560208601610a98565b610b0181610ac2565b840191505092915050565b60006020820190508181036000830152610b268184610ad3565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b5e82610b33565b9050919050565b610b6e81610b53565b8114610b7957600080fd5b50565b600081359050610b8b81610b65565b92915050565b6000819050919050565b610ba481610b91565b8114610baf57600080fd5b50565b600081359050610bc181610b9b565b92915050565b60008060408385031215610bde57610bdd610b2e565b5b6000610bec85828601610b7c565b9250506020610bfd85828601610bb2565b9150509250929050565b60008115159050919050565b610c1c81610c07565b82525050565b6000602082019050610c376000830184610c13565b92915050565b610c4681610b91565b82525050565b6000602082019050610c616000830184610c3d565b92915050565b600080600060608486031215610c8057610c7f610b2e565b5b6000610c8e86828701610b7c565b9350506020610c9f86828701610b7c565b9250506040610cb086828701610bb2565b9150509250925092565b600060ff82169050919050565b610cd081610cba565b82525050565b6000602082019050610ceb6000830184610cc7565b92915050565b600060208284031215610d0757610d06610b2e565b5b6000610d1584828501610b7c565b91505092915050565b60008060408385031215610d3557610d34610b2e565b5b6000610d4385828601610b7c565b9250506020610d5485828601610b7c565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610da557607f821691505b602082108103610db857610db7610d5e565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610df882610b91565b9150610e0383610b91565b9250828201905080821115610e1b57610e1a610dbe565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000610e7d602583610a87565b9150610e8882610e21565b604082019050919050565b60006020820190508181036000830152610eac81610e70565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000610f0f602483610a87565b9150610f1a82610eb3565b604082019050919050565b60006020820190508181036000830152610f3e81610f02565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000610fa1602283610a87565b9150610fac82610f45565b604082019050919050565b60006020820190508181036000830152610fd081610f94565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b600061100d601d83610a87565b915061101882610fd7565b602082019050919050565b6000602082019050818103600083015261103c81611000565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b600061109f602583610a87565b91506110aa82611043565b604082019050919050565b600060208201905081810360008301526110ce81611092565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611131602383610a87565b915061113c826110d5565b604082019050919050565b6000602082019050818103600083015261116081611124565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006111c3602683610a87565b91506111ce82611167565b604082019050919050565b600060208201905081810360008301526111f2816111b6565b905091905056fea26469706673582212208bf89113c83d92bd5ff0f89cfa7dafd4f92513878e53c7fab10e39104c9924e264736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xC67 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xCF1 JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x47E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xD1E JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x313 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x320 DUP2 DUP6 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x340 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x34D DUP6 DUP3 DUP6 PUSH2 0x770 JUMP JUMPDEST PUSH2 0x358 DUP6 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x378 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x399 DUP2 DUP6 DUP6 PUSH2 0x38A DUP6 DUP10 PUSH2 0x518 JUMP JUMPDEST PUSH2 0x394 SWAP2 SWAP1 PUSH2 0xDED JUMP JUMPDEST PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3FB SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x427 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x474 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x449 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x474 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x457 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x489 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x497 DUP3 DUP7 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D3 SWAP1 PUSH2 0xE93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E9 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x500 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x50D DUP2 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x616 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60D SWAP1 PUSH2 0xF25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x685 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67C SWAP1 PUSH2 0xFB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x763 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77C DUP5 DUP5 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7F6 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DF SWAP1 PUSH2 0x1023 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F5 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x86B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x862 SWAP1 PUSH2 0x10B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D1 SWAP1 PUSH2 0x1147 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E5 DUP4 DUP4 DUP4 PUSH2 0xA72 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x96B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x962 SWAP1 PUSH2 0x11D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA59 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA6C DUP5 DUP5 DUP5 PUSH2 0xA77 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAB6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA9B JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xADE DUP3 PUSH2 0xA7C JUMP JUMPDEST PUSH2 0xAE8 DUP2 DUP6 PUSH2 0xA87 JUMP JUMPDEST SWAP4 POP PUSH2 0xAF8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA98 JUMP JUMPDEST PUSH2 0xB01 DUP2 PUSH2 0xAC2 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB26 DUP2 DUP5 PUSH2 0xAD3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB5E DUP3 PUSH2 0xB33 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB6E DUP2 PUSH2 0xB53 JUMP JUMPDEST DUP2 EQ PUSH2 0xB79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB8B DUP2 PUSH2 0xB65 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBA4 DUP2 PUSH2 0xB91 JUMP JUMPDEST DUP2 EQ PUSH2 0xBAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBC1 DUP2 PUSH2 0xB9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBDE JUMPI PUSH2 0xBDD PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBEC DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xBFD DUP6 DUP3 DUP7 ADD PUSH2 0xBB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC1C DUP2 PUSH2 0xC07 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC37 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC13 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC46 DUP2 PUSH2 0xB91 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC61 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC3D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC80 JUMPI PUSH2 0xC7F PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC8E DUP7 DUP3 DUP8 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC9F DUP7 DUP3 DUP8 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCB0 DUP7 DUP3 DUP8 ADD PUSH2 0xBB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCD0 DUP2 PUSH2 0xCBA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCEB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCC7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD07 JUMPI PUSH2 0xD06 PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD15 DUP5 DUP3 DUP6 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD35 JUMPI PUSH2 0xD34 PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD43 DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD54 DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xDA5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xDB8 JUMPI PUSH2 0xDB7 PUSH2 0xD5E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xDF8 DUP3 PUSH2 0xB91 JUMP JUMPDEST SWAP2 POP PUSH2 0xE03 DUP4 PUSH2 0xB91 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE1B JUMPI PUSH2 0xE1A PUSH2 0xDBE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE7D PUSH1 0x25 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xE88 DUP3 PUSH2 0xE21 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEAC DUP2 PUSH2 0xE70 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF0F PUSH1 0x24 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xF1A DUP3 PUSH2 0xEB3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF3E DUP2 PUSH2 0xF02 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFA1 PUSH1 0x22 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xFAC DUP3 PUSH2 0xF45 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFD0 DUP2 PUSH2 0xF94 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100D PUSH1 0x1D DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x1018 DUP3 PUSH2 0xFD7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x103C DUP2 PUSH2 0x1000 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x109F PUSH1 0x25 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x10AA DUP3 PUSH2 0x1043 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10CE DUP2 PUSH2 0x1092 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1131 PUSH1 0x23 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x113C DUP3 PUSH2 0x10D5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1160 DUP2 PUSH2 0x1124 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11C3 PUSH1 0x26 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x11CE DUP3 PUSH2 0x1167 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11F2 DUP2 PUSH2 0x11B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP12 0xF8 SWAP2 SGT 0xC8 RETURNDATASIZE SWAP3 0xBD 0x5F CREATE 0xF8 SWAP13 STATICCALL PUSH30 0xAFD4F92513878E53C7FAB10E39104C9924E264736F6C6343000812003300 ","sourceMap":"1532:11312:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4444:197;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3255:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5203:256;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3104:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5854:234;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3419:125;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2369:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6575:427;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3740:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3987:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2158:98;2212:13;2244:5;2237:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;:::o;4444:197::-;4527:4;4543:13;4559:12;:10;:12::i;:::-;4543:28;;4581:32;4590:5;4597:7;4606:6;4581:8;:32::i;:::-;4630:4;4623:11;;;4444:197;;;;:::o;3255:106::-;3316:7;3342:12;;3335:19;;3255:106;:::o;5203:256::-;5300:4;5316:15;5334:12;:10;:12::i;:::-;5316:30;;5356:38;5372:4;5378:7;5387:6;5356:15;:38::i;:::-;5404:27;5414:4;5420:2;5424:6;5404:9;:27::i;:::-;5448:4;5441:11;;;5203:256;;;;;:::o;3104:91::-;3162:5;3186:2;3179:9;;3104:91;:::o;5854:234::-;5942:4;5958:13;5974:12;:10;:12::i;:::-;5958:28;;5996:64;6005:5;6012:7;6049:10;6021:25;6031:5;6038:7;6021:9;:25::i;:::-;:38;;;;:::i;:::-;5996:8;:64::i;:::-;6077:4;6070:11;;;5854:234;;;;:::o;3419:125::-;3493:7;3519:9;:18;3529:7;3519:18;;;;;;;;;;;;;;;;3512:25;;3419:125;;;:::o;2369:102::-;2425:13;2457:7;2450:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2369:102;:::o;6575:427::-;6668:4;6684:13;6700:12;:10;:12::i;:::-;6684:28;;6722:24;6749:25;6759:5;6766:7;6749:9;:25::i;:::-;6722:52;;6812:15;6792:16;:35;;6784:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;6903:60;6912:5;6919:7;6947:15;6928:16;:34;6903:8;:60::i;:::-;6991:4;6984:11;;;;6575:427;;;;:::o;3740:189::-;3819:4;3835:13;3851:12;:10;:12::i;:::-;3835:28;;3873;3883:5;3890:2;3894:6;3873:9;:28::i;:::-;3918:4;3911:11;;;3740:189;;;;:::o;3987:149::-;4076:7;4102:11;:18;4114:5;4102:18;;;;;;;;;;;;;;;:27;4121:7;4102:27;;;;;;;;;;;;;;;;4095:34;;3987:149;;;;:::o;640:96:8:-;693:7;719:10;712:17;;640:96;:::o;10457:340:2:-;10575:1;10558:19;;:5;:19;;;10550:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10655:1;10636:21;;:7;:21;;;10628:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10737:6;10707:11;:18;10719:5;10707:18;;;;;;;;;;;;;;;:27;10726:7;10707:27;;;;;;;;;;;;;;;:36;;;;10774:7;10758:32;;10767:5;10758:32;;;10783:6;10758:32;;;;;;:::i;:::-;;;;;;;;10457:340;;;:::o;11078:411::-;11178:24;11205:25;11215:5;11222:7;11205:9;:25::i;:::-;11178:52;;11264:17;11244:16;:37;11240:243;;11325:6;11305:16;:26;;11297:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11407:51;11416:5;11423:7;11451:6;11432:16;:25;11407:8;:51::i;:::-;11240:243;11168:321;11078:411;;;:::o;7456:788::-;7568:1;7552:18;;:4;:18;;;7544:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7644:1;7630:16;;:2;:16;;;7622:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;7697:38;7718:4;7724:2;7728:6;7697:20;:38::i;:::-;7746:19;7768:9;:15;7778:4;7768:15;;;;;;;;;;;;;;;;7746:37;;7816:6;7801:11;:21;;7793:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;7931:6;7917:11;:20;7899:9;:15;7909:4;7899:15;;;;;;;;;;;;;;;:38;;;;8131:6;8114:9;:13;8124:2;8114:13;;;;;;;;;;;;;;;;:23;;;;;;;;;;;8178:2;8163:26;;8172:4;8163:26;;;8182:6;8163:26;;;;;;:::i;:::-;;;;;;;;8200:37;8220:4;8226:2;8230:6;8200:19;:37::i;:::-;7534:710;7456:788;;;:::o;12073:91::-;;;;:::o;12752:90::-;;;;:::o;7:99:11:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:329::-;4912:6;4961:2;4949:9;4940:7;4936:23;4932:32;4929:119;;;4967:79;;:::i;:::-;4929:119;5087:1;5112:53;5157:7;5148:6;5137:9;5133:22;5112:53;:::i;:::-;5102:63;;5058:117;4853:329;;;;:::o;5188:474::-;5256:6;5264;5313:2;5301:9;5292:7;5288:23;5284:32;5281:119;;;5319:79;;:::i;:::-;5281:119;5439:1;5464:53;5509:7;5500:6;5489:9;5485:22;5464:53;:::i;:::-;5454:63;;5410:117;5566:2;5592:53;5637:7;5628:6;5617:9;5613:22;5592:53;:::i;:::-;5582:63;;5537:118;5188:474;;;;;:::o;5668:180::-;5716:77;5713:1;5706:88;5813:4;5810:1;5803:15;5837:4;5834:1;5827:15;5854:320;5898:6;5935:1;5929:4;5925:12;5915:22;;5982:1;5976:4;5972:12;6003:18;5993:81;;6059:4;6051:6;6047:17;6037:27;;5993:81;6121:2;6113:6;6110:14;6090:18;6087:38;6084:84;;6140:18;;:::i;:::-;6084:84;5905:269;5854:320;;;:::o;6180:180::-;6228:77;6225:1;6218:88;6325:4;6322:1;6315:15;6349:4;6346:1;6339:15;6366:191;6406:3;6425:20;6443:1;6425:20;:::i;:::-;6420:25;;6459:20;6477:1;6459:20;:::i;:::-;6454:25;;6502:1;6499;6495:9;6488:16;;6523:3;6520:1;6517:10;6514:36;;;6530:18;;:::i;:::-;6514:36;6366:191;;;;:::o;6563:224::-;6703:34;6699:1;6691:6;6687:14;6680:58;6772:7;6767:2;6759:6;6755:15;6748:32;6563:224;:::o;6793:366::-;6935:3;6956:67;7020:2;7015:3;6956:67;:::i;:::-;6949:74;;7032:93;7121:3;7032:93;:::i;:::-;7150:2;7145:3;7141:12;7134:19;;6793:366;;;:::o;7165:419::-;7331:4;7369:2;7358:9;7354:18;7346:26;;7418:9;7412:4;7408:20;7404:1;7393:9;7389:17;7382:47;7446:131;7572:4;7446:131;:::i;:::-;7438:139;;7165:419;;;:::o;7590:223::-;7730:34;7726:1;7718:6;7714:14;7707:58;7799:6;7794:2;7786:6;7782:15;7775:31;7590:223;:::o;7819:366::-;7961:3;7982:67;8046:2;8041:3;7982:67;:::i;:::-;7975:74;;8058:93;8147:3;8058:93;:::i;:::-;8176:2;8171:3;8167:12;8160:19;;7819:366;;;:::o;8191:419::-;8357:4;8395:2;8384:9;8380:18;8372:26;;8444:9;8438:4;8434:20;8430:1;8419:9;8415:17;8408:47;8472:131;8598:4;8472:131;:::i;:::-;8464:139;;8191:419;;;:::o;8616:221::-;8756:34;8752:1;8744:6;8740:14;8733:58;8825:4;8820:2;8812:6;8808:15;8801:29;8616:221;:::o;8843:366::-;8985:3;9006:67;9070:2;9065:3;9006:67;:::i;:::-;8999:74;;9082:93;9171:3;9082:93;:::i;:::-;9200:2;9195:3;9191:12;9184:19;;8843:366;;;:::o;9215:419::-;9381:4;9419:2;9408:9;9404:18;9396:26;;9468:9;9462:4;9458:20;9454:1;9443:9;9439:17;9432:47;9496:131;9622:4;9496:131;:::i;:::-;9488:139;;9215:419;;;:::o;9640:179::-;9780:31;9776:1;9768:6;9764:14;9757:55;9640:179;:::o;9825:366::-;9967:3;9988:67;10052:2;10047:3;9988:67;:::i;:::-;9981:74;;10064:93;10153:3;10064:93;:::i;:::-;10182:2;10177:3;10173:12;10166:19;;9825:366;;;:::o;10197:419::-;10363:4;10401:2;10390:9;10386:18;10378:26;;10450:9;10444:4;10440:20;10436:1;10425:9;10421:17;10414:47;10478:131;10604:4;10478:131;:::i;:::-;10470:139;;10197:419;;;:::o;10622:224::-;10762:34;10758:1;10750:6;10746:14;10739:58;10831:7;10826:2;10818:6;10814:15;10807:32;10622:224;:::o;10852:366::-;10994:3;11015:67;11079:2;11074:3;11015:67;:::i;:::-;11008:74;;11091:93;11180:3;11091:93;:::i;:::-;11209:2;11204:3;11200:12;11193:19;;10852:366;;;:::o;11224:419::-;11390:4;11428:2;11417:9;11413:18;11405:26;;11477:9;11471:4;11467:20;11463:1;11452:9;11448:17;11441:47;11505:131;11631:4;11505:131;:::i;:::-;11497:139;;11224:419;;;:::o;11649:222::-;11789:34;11785:1;11777:6;11773:14;11766:58;11858:5;11853:2;11845:6;11841:15;11834:30;11649:222;:::o;11877:366::-;12019:3;12040:67;12104:2;12099:3;12040:67;:::i;:::-;12033:74;;12116:93;12205:3;12116:93;:::i;:::-;12234:2;12229:3;12225:12;12218:19;;11877:366;;;:::o;12249:419::-;12415:4;12453:2;12442:9;12438:18;12430:26;;12502:9;12496:4;12492:20;12488:1;12477:9;12473:17;12466:47;12530:131;12656:4;12530:131;:::i;:::-;12522:139;;12249:419;;;:::o;12674:225::-;12814:34;12810:1;12802:6;12798:14;12791:58;12883:8;12878:2;12870:6;12866:15;12859:33;12674:225;:::o;12905:366::-;13047:3;13068:67;13132:2;13127:3;13068:67;:::i;:::-;13061:74;;13144:93;13233:3;13144:93;:::i;:::-;13262:2;13257:3;13253:12;13246:19;;12905:366;;;:::o;13277:419::-;13443:4;13481:2;13470:9;13466:18;13458:26;;13530:9;13524:4;13520:20;13516:1;13505:9;13501:17;13494:47;13558:131;13684:4;13558:131;:::i;:::-;13550:139;;13277:419;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"931000","executionCost":"infinite","totalCost":"infinite"},"external":{"allowance(address,address)":"infinite","approve(address,uint256)":"infinite","balanceOf(address)":"2863","decimals()":"432","decreaseAllowance(address,uint256)":"infinite","increaseAllowance(address,uint256)":"infinite","name()":"infinite","symbol()":"infinite","totalSupply()":"2482","transfer(address,uint256)":"infinite","transferFrom(address,address,uint256)":"infinite"},"internal":{"_afterTokenTransfer(address,address,uint256)":"15","_approve(address,address,uint256)":"infinite","_beforeTokenTransfer(address,address,uint256)":"15","_burn(address,uint256)":"infinite","_mint(address,uint256)":"infinite","_spendAllowance(address,address,uint256)":"infinite","_transfer(address,address,uint256)":"infinite"}},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(address from, address to, uint256 amount) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n}\\n\",\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":193,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":199,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":201,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":203,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":205,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"decimals()":{"details":"Returns the decimals places of the token."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.","kind":"dev","methods":{"DOMAIN_SEPARATOR()":{"details":"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"nonces(address)":{"details":"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."},"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":{"details":"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[],"devdoc":{"details":"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.","kind":"dev","methods":{},"title":"SafeERC20","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220dacc391c9ed0a612db69d25ae16000c7f145ca363e713e91c544048e63b3ff0f64736f6c63430008120033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDA 0xCC CODECOPY SHR SWAP15 0xD0 0xA6 SLT 0xDB PUSH10 0xD25AE16000C7F145CA36 RETURNDATACOPY PUSH18 0x3E91C544048E63B3FF0F64736F6C63430008 SLT STOP CALLER ","sourceMap":"701:6211:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220dacc391c9ed0a612db69d25ae16000c7f145ca363e713e91c544048e63b3ff0f64736f6c63430008120033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDA 0xCC CODECOPY SHR SWAP15 0xD0 0xA6 SLT 0xDB PUSH10 0xD25AE16000C7F145CA36 RETURNDATACOPY PUSH18 0x3E91C544048E63B3FF0F64736F6C63430008 SLT STOP CALLER ","sourceMap":"701:6211:6:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"_callOptionalReturn(contract IERC20,bytes memory)":"infinite","_callOptionalReturnBool(contract IERC20,bytes memory)":"infinite","forceApprove(contract IERC20,address,uint256)":"infinite","safeApprove(contract IERC20,address,uint256)":"infinite","safeDecreaseAllowance(contract IERC20,address,uint256)":"infinite","safeIncreaseAllowance(contract IERC20,address,uint256)":"infinite","safePermit(contract IERC20Permit,address,address,uint256,uint256,uint8,bytes32,bytes32)":"infinite","safeTransfer(contract IERC20,address,uint256)":"infinite","safeTransferFrom(contract IERC20,address,address,uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../extensions/IERC20Permit.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    /**\\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 oldAllowance = token.allowance(address(this), spender);\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\\n    }\\n\\n    /**\\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\\n        }\\n    }\\n\\n    /**\\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful. Compatible with tokens that require the approval to be set to\\n     * 0 before setting it to a non-zero value.\\n     */\\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\\n\\n        if (!_callOptionalReturnBool(token, approvalCall)) {\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\\n            _callOptionalReturn(token, approvalCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\\n     * Revert on invalid signature.\\n     */\\n    function safePermit(\\n        IERC20Permit token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\\"SafeERC20: permit did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\\n     */\\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\\n        // and not revert is the subcall reverts.\\n\\n        (bool success, bytes memory returndata) = address(token).call(data);\\n        return\\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && Address.isContract(address(token));\\n    }\\n}\\n\",\"keccak256\":\"0x909d608c2db6eb165ca178c81289a07ed2e118e444d0025b2a85c97d0b44a4fa\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"devdoc":{"details":"Collection of functions related to the address type","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122044203285c768a6cfdb15c34d545ebeabb0d1eca8785f7226e13240b8d37a326b64736f6c63430008120033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PREVRANDAO KECCAK256 ORIGIN DUP6 0xC7 PUSH9 0xA6CFDB15C34D545EBE 0xAB 0xB0 0xD1 0xEC 0xA8 PUSH25 0x5F7226E13240B8D37A326B64736F6C63430008120033000000 ","sourceMap":"194:9169:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122044203285c768a6cfdb15c34d545ebeabb0d1eca8785f7226e13240b8d37a326b64736f6c63430008120033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PREVRANDAO KECCAK256 ORIGIN DUP6 0xC7 PUSH9 0xA6CFDB15C34D545EBE 0xAB 0xB0 0xD1 0xEC 0xA8 PUSH25 0x5F7226E13240B8D37A326B64736F6C63430008120033000000 ","sourceMap":"194:9169:7:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"_revert(bytes memory,string memory)":"infinite","functionCall(address,bytes memory)":"infinite","functionCall(address,bytes memory,string memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionCallWithValue(address,bytes memory,uint256,string memory)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionDelegateCall(address,bytes memory,string memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory,string memory)":"infinite","isContract(address)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory,string memory)":"infinite","verifyCallResultFromTarget(address,bool,bytes memory,string memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/Prime.sol":{"Prime":{"abi":[{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mintToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"name()":{"details":"Returns the name of the token."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1655":{"entryPoint":null,"id":1655,"parameterSlots":1,"returnSlots":0},"@_222":{"entryPoint":null,"id":222,"parameterSlots":2,"returnSlots":0},"@_23":{"entryPoint":null,"id":23,"parameterSlots":0,"returnSlots":0},"@_afterTokenTransfer_763":{"entryPoint":834,"id":763,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_752":{"entryPoint":829,"id":752,"parameterSlots":3,"returnSlots":0},"@_mint_581":{"entryPoint":464,"id":581,"parameterSlots":2,"returnSlots":0},"@_msgSender_1621":{"entryPoint":258,"id":1621,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_111":{"entryPoint":266,"id":111,"parameterSlots":1,"returnSlots":0},"abi_decode_t_uint256_fromMemory":{"entryPoint":880,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":903,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack":{"entryPoint":1866,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":2045,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1905,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":2062,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":1111,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":953,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":1808,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":1986,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1422,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_uint256":{"entryPoint":844,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":1383,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":1257,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1577,"id":null,"parameterSlots":2,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":1132,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":1058,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1547,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":1247,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1515,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":1939,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":1011,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":964,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":1297,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":839,"id":null,"parameterSlots":0,"returnSlots":0},"shift_left_dynamic":{"entryPoint":1148,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1502,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":1355,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e":{"entryPoint":1825,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":1161,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":1307,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":854,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":1350,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:8086:11","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:11","statements":[{"nodeType":"YulAssignment","src":"57:19:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:11","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:11"},"nodeType":"YulFunctionCall","src":"67:9:11"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:11"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:11","type":""}],"src":"7:75:11"},{"body":{"nodeType":"YulBlock","src":"177:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:11"},"nodeType":"YulFunctionCall","src":"187:12:11"},"nodeType":"YulExpressionStatement","src":"187:12:11"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:11"},{"body":{"nodeType":"YulBlock","src":"300:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:11"},"nodeType":"YulFunctionCall","src":"310:12:11"},"nodeType":"YulExpressionStatement","src":"310:12:11"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:11"},{"body":{"nodeType":"YulBlock","src":"379:32:11","statements":[{"nodeType":"YulAssignment","src":"389:16:11","value":{"name":"value","nodeType":"YulIdentifier","src":"400:5:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:11"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:11","type":""}],"src":"334:77:11"},{"body":{"nodeType":"YulBlock","src":"460:79:11","statements":[{"body":{"nodeType":"YulBlock","src":"517:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"526:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"529:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"519:6:11"},"nodeType":"YulFunctionCall","src":"519:12:11"},"nodeType":"YulExpressionStatement","src":"519:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"483:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"508:5:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"490:17:11"},"nodeType":"YulFunctionCall","src":"490:24:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"480:2:11"},"nodeType":"YulFunctionCall","src":"480:35:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"473:6:11"},"nodeType":"YulFunctionCall","src":"473:43:11"},"nodeType":"YulIf","src":"470:63:11"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"453:5:11","type":""}],"src":"417:122:11"},{"body":{"nodeType":"YulBlock","src":"608:80:11","statements":[{"nodeType":"YulAssignment","src":"618:22:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"633:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"627:5:11"},"nodeType":"YulFunctionCall","src":"627:13:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"618:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:11"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"649:26:11"},"nodeType":"YulFunctionCall","src":"649:33:11"},"nodeType":"YulExpressionStatement","src":"649:33:11"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"586:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"594:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"602:5:11","type":""}],"src":"545:143:11"},{"body":{"nodeType":"YulBlock","src":"771:274:11","statements":[{"body":{"nodeType":"YulBlock","src":"817:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"819:77:11"},"nodeType":"YulFunctionCall","src":"819:79:11"},"nodeType":"YulExpressionStatement","src":"819:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"792:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"801:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"788:3:11"},"nodeType":"YulFunctionCall","src":"788:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"813:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"784:3:11"},"nodeType":"YulFunctionCall","src":"784:32:11"},"nodeType":"YulIf","src":"781:119:11"},{"nodeType":"YulBlock","src":"910:128:11","statements":[{"nodeType":"YulVariableDeclaration","src":"925:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"939:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"929:6:11","type":""}]},{"nodeType":"YulAssignment","src":"954:74:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1000:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"1011:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"996:3:11"},"nodeType":"YulFunctionCall","src":"996:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1020:7:11"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"964:31:11"},"nodeType":"YulFunctionCall","src":"964:64:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"954:6:11"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"741:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"752:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"764:6:11","type":""}],"src":"694:351:11"},{"body":{"nodeType":"YulBlock","src":"1110:40:11","statements":[{"nodeType":"YulAssignment","src":"1121:22:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1137:5:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1131:5:11"},"nodeType":"YulFunctionCall","src":"1131:12:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1121:6:11"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1093:5:11","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1103:6:11","type":""}],"src":"1051:99:11"},{"body":{"nodeType":"YulBlock","src":"1184:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1201:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1204:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1194:6:11"},"nodeType":"YulFunctionCall","src":"1194:88:11"},"nodeType":"YulExpressionStatement","src":"1194:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1298:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1301:4:11","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1291:6:11"},"nodeType":"YulFunctionCall","src":"1291:15:11"},"nodeType":"YulExpressionStatement","src":"1291:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1322:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1325:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1315:6:11"},"nodeType":"YulFunctionCall","src":"1315:15:11"},"nodeType":"YulExpressionStatement","src":"1315:15:11"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"1156:180:11"},{"body":{"nodeType":"YulBlock","src":"1370:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1387:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1390:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1380:6:11"},"nodeType":"YulFunctionCall","src":"1380:88:11"},"nodeType":"YulExpressionStatement","src":"1380:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1484:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1487:4:11","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1477:6:11"},"nodeType":"YulFunctionCall","src":"1477:15:11"},"nodeType":"YulExpressionStatement","src":"1477:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1508:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1511:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1501:6:11"},"nodeType":"YulFunctionCall","src":"1501:15:11"},"nodeType":"YulExpressionStatement","src":"1501:15:11"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"1342:180:11"},{"body":{"nodeType":"YulBlock","src":"1579:269:11","statements":[{"nodeType":"YulAssignment","src":"1589:22:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1603:4:11"},{"kind":"number","nodeType":"YulLiteral","src":"1609:1:11","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"1599:3:11"},"nodeType":"YulFunctionCall","src":"1599:12:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1589:6:11"}]},{"nodeType":"YulVariableDeclaration","src":"1620:38:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1650:4:11"},{"kind":"number","nodeType":"YulLiteral","src":"1656:1:11","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1646:3:11"},"nodeType":"YulFunctionCall","src":"1646:12:11"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"1624:18:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"1697:51:11","statements":[{"nodeType":"YulAssignment","src":"1711:27:11","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1725:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"1733:4:11","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1721:3:11"},"nodeType":"YulFunctionCall","src":"1721:17:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1711:6:11"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1677:18:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1670:6:11"},"nodeType":"YulFunctionCall","src":"1670:26:11"},"nodeType":"YulIf","src":"1667:81:11"},{"body":{"nodeType":"YulBlock","src":"1800:42:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"1814:16:11"},"nodeType":"YulFunctionCall","src":"1814:18:11"},"nodeType":"YulExpressionStatement","src":"1814:18:11"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1764:18:11"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1787:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"1795:2:11","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1784:2:11"},"nodeType":"YulFunctionCall","src":"1784:14:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1761:2:11"},"nodeType":"YulFunctionCall","src":"1761:38:11"},"nodeType":"YulIf","src":"1758:84:11"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1563:4:11","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1572:6:11","type":""}],"src":"1528:320:11"},{"body":{"nodeType":"YulBlock","src":"1908:87:11","statements":[{"nodeType":"YulAssignment","src":"1918:11:11","value":{"name":"ptr","nodeType":"YulIdentifier","src":"1926:3:11"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"1918:4:11"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1946:1:11","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"1949:3:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1939:6:11"},"nodeType":"YulFunctionCall","src":"1939:14:11"},"nodeType":"YulExpressionStatement","src":"1939:14:11"},{"nodeType":"YulAssignment","src":"1962:26:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1980:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1983:4:11","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1970:9:11"},"nodeType":"YulFunctionCall","src":"1970:18:11"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"1962:4:11"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"1895:3:11","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"1903:4:11","type":""}],"src":"1854:141:11"},{"body":{"nodeType":"YulBlock","src":"2045:49:11","statements":[{"nodeType":"YulAssignment","src":"2055:33:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2073:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"2080:2:11","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2069:3:11"},"nodeType":"YulFunctionCall","src":"2069:14:11"},{"kind":"number","nodeType":"YulLiteral","src":"2085:2:11","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2065:3:11"},"nodeType":"YulFunctionCall","src":"2065:23:11"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2055:6:11"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2028:5:11","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2038:6:11","type":""}],"src":"2001:93:11"},{"body":{"nodeType":"YulBlock","src":"2153:54:11","statements":[{"nodeType":"YulAssignment","src":"2163:37:11","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"2188:4:11"},{"name":"value","nodeType":"YulIdentifier","src":"2194:5:11"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2184:3:11"},"nodeType":"YulFunctionCall","src":"2184:16:11"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"2163:8:11"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"2128:4:11","type":""},{"name":"value","nodeType":"YulTypedName","src":"2134:5:11","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"2144:8:11","type":""}],"src":"2100:107:11"},{"body":{"nodeType":"YulBlock","src":"2289:317:11","statements":[{"nodeType":"YulVariableDeclaration","src":"2299:35:11","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"2320:10:11"},{"kind":"number","nodeType":"YulLiteral","src":"2332:1:11","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2316:3:11"},"nodeType":"YulFunctionCall","src":"2316:18:11"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"2303:9:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2343:109:11","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"2374:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2385:66:11","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"2355:18:11"},"nodeType":"YulFunctionCall","src":"2355:97:11"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"2347:4:11","type":""}]},{"nodeType":"YulAssignment","src":"2461:51:11","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"2492:9:11"},{"name":"toInsert","nodeType":"YulIdentifier","src":"2503:8:11"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"2473:18:11"},"nodeType":"YulFunctionCall","src":"2473:39:11"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"2461:8:11"}]},{"nodeType":"YulAssignment","src":"2521:30:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2534:5:11"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"2545:4:11"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2541:3:11"},"nodeType":"YulFunctionCall","src":"2541:9:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2530:3:11"},"nodeType":"YulFunctionCall","src":"2530:21:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2521:5:11"}]},{"nodeType":"YulAssignment","src":"2560:40:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2573:5:11"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"2584:8:11"},{"name":"mask","nodeType":"YulIdentifier","src":"2594:4:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2580:3:11"},"nodeType":"YulFunctionCall","src":"2580:19:11"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2570:2:11"},"nodeType":"YulFunctionCall","src":"2570:30:11"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2560:6:11"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2250:5:11","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"2257:10:11","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"2269:8:11","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2282:6:11","type":""}],"src":"2213:393:11"},{"body":{"nodeType":"YulBlock","src":"2644:28:11","statements":[{"nodeType":"YulAssignment","src":"2654:12:11","value":{"name":"value","nodeType":"YulIdentifier","src":"2661:5:11"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"2654:3:11"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2630:5:11","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"2640:3:11","type":""}],"src":"2612:60:11"},{"body":{"nodeType":"YulBlock","src":"2738:82:11","statements":[{"nodeType":"YulAssignment","src":"2748:66:11","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2806:5:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2788:17:11"},"nodeType":"YulFunctionCall","src":"2788:24:11"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"2779:8:11"},"nodeType":"YulFunctionCall","src":"2779:34:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2761:17:11"},"nodeType":"YulFunctionCall","src":"2761:53:11"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"2748:9:11"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2718:5:11","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"2728:9:11","type":""}],"src":"2678:142:11"},{"body":{"nodeType":"YulBlock","src":"2873:28:11","statements":[{"nodeType":"YulAssignment","src":"2883:12:11","value":{"name":"value","nodeType":"YulIdentifier","src":"2890:5:11"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"2883:3:11"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2859:5:11","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"2869:3:11","type":""}],"src":"2826:75:11"},{"body":{"nodeType":"YulBlock","src":"2983:193:11","statements":[{"nodeType":"YulVariableDeclaration","src":"2993:63:11","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"3048:7:11"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"3017:30:11"},"nodeType":"YulFunctionCall","src":"3017:39:11"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"2997:16:11","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3072:4:11"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3112:4:11"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"3106:5:11"},"nodeType":"YulFunctionCall","src":"3106:11:11"},{"name":"offset","nodeType":"YulIdentifier","src":"3119:6:11"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"3151:16:11"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"3127:23:11"},"nodeType":"YulFunctionCall","src":"3127:41:11"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"3078:27:11"},"nodeType":"YulFunctionCall","src":"3078:91:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3065:6:11"},"nodeType":"YulFunctionCall","src":"3065:105:11"},"nodeType":"YulExpressionStatement","src":"3065:105:11"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"2960:4:11","type":""},{"name":"offset","nodeType":"YulTypedName","src":"2966:6:11","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"2974:7:11","type":""}],"src":"2907:269:11"},{"body":{"nodeType":"YulBlock","src":"3231:24:11","statements":[{"nodeType":"YulAssignment","src":"3241:8:11","value":{"kind":"number","nodeType":"YulLiteral","src":"3248:1:11","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"3241:3:11"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"3227:3:11","type":""}],"src":"3182:73:11"},{"body":{"nodeType":"YulBlock","src":"3314:136:11","statements":[{"nodeType":"YulVariableDeclaration","src":"3324:46:11","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"3338:30:11"},"nodeType":"YulFunctionCall","src":"3338:32:11"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"3328:6:11","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3423:4:11"},{"name":"offset","nodeType":"YulIdentifier","src":"3429:6:11"},{"name":"zero_0","nodeType":"YulIdentifier","src":"3437:6:11"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"3379:43:11"},"nodeType":"YulFunctionCall","src":"3379:65:11"},"nodeType":"YulExpressionStatement","src":"3379:65:11"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"3300:4:11","type":""},{"name":"offset","nodeType":"YulTypedName","src":"3306:6:11","type":""}],"src":"3261:189:11"},{"body":{"nodeType":"YulBlock","src":"3506:136:11","statements":[{"body":{"nodeType":"YulBlock","src":"3573:63:11","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"3617:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"3624:1:11","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"3587:29:11"},"nodeType":"YulFunctionCall","src":"3587:39:11"},"nodeType":"YulExpressionStatement","src":"3587:39:11"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"3526:5:11"},{"name":"end","nodeType":"YulIdentifier","src":"3533:3:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3523:2:11"},"nodeType":"YulFunctionCall","src":"3523:14:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3538:26:11","statements":[{"nodeType":"YulAssignment","src":"3540:22:11","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"3553:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"3560:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3549:3:11"},"nodeType":"YulFunctionCall","src":"3549:13:11"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"3540:5:11"}]}]},"pre":{"nodeType":"YulBlock","src":"3520:2:11","statements":[]},"src":"3516:120:11"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"3494:5:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"3501:3:11","type":""}],"src":"3456:186:11"},{"body":{"nodeType":"YulBlock","src":"3727:464:11","statements":[{"body":{"nodeType":"YulBlock","src":"3753:431:11","statements":[{"nodeType":"YulVariableDeclaration","src":"3767:54:11","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"3815:5:11"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"3783:31:11"},"nodeType":"YulFunctionCall","src":"3783:38:11"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"3771:8:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3834:63:11","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"3857:8:11"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"3885:10:11"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"3867:17:11"},"nodeType":"YulFunctionCall","src":"3867:29:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3853:3:11"},"nodeType":"YulFunctionCall","src":"3853:44:11"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"3838:11:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"4054:27:11","statements":[{"nodeType":"YulAssignment","src":"4056:23:11","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"4071:8:11"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"4056:11:11"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"4038:10:11"},{"kind":"number","nodeType":"YulLiteral","src":"4050:2:11","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4035:2:11"},"nodeType":"YulFunctionCall","src":"4035:18:11"},"nodeType":"YulIf","src":"4032:49:11"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"4123:11:11"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"4140:8:11"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"4168:3:11"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"4150:17:11"},"nodeType":"YulFunctionCall","src":"4150:22:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4136:3:11"},"nodeType":"YulFunctionCall","src":"4136:37:11"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"4094:28:11"},"nodeType":"YulFunctionCall","src":"4094:80:11"},"nodeType":"YulExpressionStatement","src":"4094:80:11"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"3744:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"3749:2:11","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3741:2:11"},"nodeType":"YulFunctionCall","src":"3741:11:11"},"nodeType":"YulIf","src":"3738:446:11"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"3703:5:11","type":""},{"name":"len","nodeType":"YulTypedName","src":"3710:3:11","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"3715:10:11","type":""}],"src":"3648:543:11"},{"body":{"nodeType":"YulBlock","src":"4260:54:11","statements":[{"nodeType":"YulAssignment","src":"4270:37:11","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"4295:4:11"},{"name":"value","nodeType":"YulIdentifier","src":"4301:5:11"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"4291:3:11"},"nodeType":"YulFunctionCall","src":"4291:16:11"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"4270:8:11"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"4235:4:11","type":""},{"name":"value","nodeType":"YulTypedName","src":"4241:5:11","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"4251:8:11","type":""}],"src":"4197:117:11"},{"body":{"nodeType":"YulBlock","src":"4371:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"4381:68:11","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4430:1:11","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"4433:5:11"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4426:3:11"},"nodeType":"YulFunctionCall","src":"4426:13:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4445:1:11","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4441:3:11"},"nodeType":"YulFunctionCall","src":"4441:6:11"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"4397:28:11"},"nodeType":"YulFunctionCall","src":"4397:51:11"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4393:3:11"},"nodeType":"YulFunctionCall","src":"4393:56:11"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"4385:4:11","type":""}]},{"nodeType":"YulAssignment","src":"4458:25:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4472:4:11"},{"name":"mask","nodeType":"YulIdentifier","src":"4478:4:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4468:3:11"},"nodeType":"YulFunctionCall","src":"4468:15:11"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4458:6:11"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"4348:4:11","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"4354:5:11","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4364:6:11","type":""}],"src":"4320:169:11"},{"body":{"nodeType":"YulBlock","src":"4575:214:11","statements":[{"nodeType":"YulAssignment","src":"4708:37:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4735:4:11"},{"name":"len","nodeType":"YulIdentifier","src":"4741:3:11"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"4716:18:11"},"nodeType":"YulFunctionCall","src":"4716:29:11"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4708:4:11"}]},{"nodeType":"YulAssignment","src":"4754:29:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4765:4:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4775:1:11","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"4778:3:11"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4771:3:11"},"nodeType":"YulFunctionCall","src":"4771:11:11"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4762:2:11"},"nodeType":"YulFunctionCall","src":"4762:21:11"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"4754:4:11"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"4556:4:11","type":""},{"name":"len","nodeType":"YulTypedName","src":"4562:3:11","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"4570:4:11","type":""}],"src":"4494:295:11"},{"body":{"nodeType":"YulBlock","src":"4886:1303:11","statements":[{"nodeType":"YulVariableDeclaration","src":"4897:51:11","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4944:3:11"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4911:32:11"},"nodeType":"YulFunctionCall","src":"4911:37:11"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"4901:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"5033:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"5035:16:11"},"nodeType":"YulFunctionCall","src":"5035:18:11"},"nodeType":"YulExpressionStatement","src":"5035:18:11"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"5005:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"5013:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5002:2:11"},"nodeType":"YulFunctionCall","src":"5002:30:11"},"nodeType":"YulIf","src":"4999:56:11"},{"nodeType":"YulVariableDeclaration","src":"5065:52:11","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5111:4:11"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"5105:5:11"},"nodeType":"YulFunctionCall","src":"5105:11:11"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"5079:25:11"},"nodeType":"YulFunctionCall","src":"5079:38:11"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"5069:6:11","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5210:4:11"},{"name":"oldLen","nodeType":"YulIdentifier","src":"5216:6:11"},{"name":"newLen","nodeType":"YulIdentifier","src":"5224:6:11"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"5164:45:11"},"nodeType":"YulFunctionCall","src":"5164:67:11"},"nodeType":"YulExpressionStatement","src":"5164:67:11"},{"nodeType":"YulVariableDeclaration","src":"5241:18:11","value":{"kind":"number","nodeType":"YulLiteral","src":"5258:1:11","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"5245:9:11","type":""}]},{"nodeType":"YulAssignment","src":"5269:17:11","value":{"kind":"number","nodeType":"YulLiteral","src":"5282:4:11","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"5269:9:11"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"5333:611:11","statements":[{"nodeType":"YulVariableDeclaration","src":"5347:37:11","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"5366:6:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5378:4:11","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5374:3:11"},"nodeType":"YulFunctionCall","src":"5374:9:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5362:3:11"},"nodeType":"YulFunctionCall","src":"5362:22:11"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"5351:7:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5398:51:11","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5444:4:11"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"5412:31:11"},"nodeType":"YulFunctionCall","src":"5412:37:11"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"5402:6:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5462:10:11","value":{"kind":"number","nodeType":"YulLiteral","src":"5471:1:11","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"5466:1:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"5530:163:11","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"5555:6:11"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5573:3:11"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"5578:9:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5569:3:11"},"nodeType":"YulFunctionCall","src":"5569:19:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5563:5:11"},"nodeType":"YulFunctionCall","src":"5563:26:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5548:6:11"},"nodeType":"YulFunctionCall","src":"5548:42:11"},"nodeType":"YulExpressionStatement","src":"5548:42:11"},{"nodeType":"YulAssignment","src":"5607:24:11","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"5621:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"5629:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5617:3:11"},"nodeType":"YulFunctionCall","src":"5617:14:11"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"5607:6:11"}]},{"nodeType":"YulAssignment","src":"5648:31:11","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"5665:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"5676:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5661:3:11"},"nodeType":"YulFunctionCall","src":"5661:18:11"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"5648:9:11"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5496:1:11"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"5499:7:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5493:2:11"},"nodeType":"YulFunctionCall","src":"5493:14:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5508:21:11","statements":[{"nodeType":"YulAssignment","src":"5510:17:11","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5519:1:11"},{"kind":"number","nodeType":"YulLiteral","src":"5522:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5515:3:11"},"nodeType":"YulFunctionCall","src":"5515:12:11"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"5510:1:11"}]}]},"pre":{"nodeType":"YulBlock","src":"5489:3:11","statements":[]},"src":"5485:208:11"},{"body":{"nodeType":"YulBlock","src":"5729:156:11","statements":[{"nodeType":"YulVariableDeclaration","src":"5747:43:11","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5774:3:11"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"5779:9:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5770:3:11"},"nodeType":"YulFunctionCall","src":"5770:19:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5764:5:11"},"nodeType":"YulFunctionCall","src":"5764:26:11"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"5751:9:11","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"5814:6:11"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"5841:9:11"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"5856:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"5864:4:11","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5852:3:11"},"nodeType":"YulFunctionCall","src":"5852:17:11"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"5822:18:11"},"nodeType":"YulFunctionCall","src":"5822:48:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5807:6:11"},"nodeType":"YulFunctionCall","src":"5807:64:11"},"nodeType":"YulExpressionStatement","src":"5807:64:11"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"5712:7:11"},{"name":"newLen","nodeType":"YulIdentifier","src":"5721:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5709:2:11"},"nodeType":"YulFunctionCall","src":"5709:19:11"},"nodeType":"YulIf","src":"5706:179:11"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5905:4:11"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"5919:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"5927:1:11","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5915:3:11"},"nodeType":"YulFunctionCall","src":"5915:14:11"},{"kind":"number","nodeType":"YulLiteral","src":"5931:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5911:3:11"},"nodeType":"YulFunctionCall","src":"5911:22:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5898:6:11"},"nodeType":"YulFunctionCall","src":"5898:36:11"},"nodeType":"YulExpressionStatement","src":"5898:36:11"}]},"nodeType":"YulCase","src":"5326:618:11","value":{"kind":"number","nodeType":"YulLiteral","src":"5331:1:11","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"5961:222:11","statements":[{"nodeType":"YulVariableDeclaration","src":"5975:14:11","value":{"kind":"number","nodeType":"YulLiteral","src":"5988:1:11","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5979:5:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"6012:67:11","statements":[{"nodeType":"YulAssignment","src":"6030:35:11","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6049:3:11"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"6054:9:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6045:3:11"},"nodeType":"YulFunctionCall","src":"6045:19:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6039:5:11"},"nodeType":"YulFunctionCall","src":"6039:26:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6030:5:11"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"6005:6:11"},"nodeType":"YulIf","src":"6002:77:11"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6099:4:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6158:5:11"},{"name":"newLen","nodeType":"YulIdentifier","src":"6165:6:11"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"6105:52:11"},"nodeType":"YulFunctionCall","src":"6105:67:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6092:6:11"},"nodeType":"YulFunctionCall","src":"6092:81:11"},"nodeType":"YulExpressionStatement","src":"6092:81:11"}]},"nodeType":"YulCase","src":"5953:230:11","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"5306:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"5314:2:11","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5303:2:11"},"nodeType":"YulFunctionCall","src":"5303:14:11"},"nodeType":"YulSwitch","src":"5296:887:11"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"4875:4:11","type":""},{"name":"src","nodeType":"YulTypedName","src":"4881:3:11","type":""}],"src":"4794:1395:11"},{"body":{"nodeType":"YulBlock","src":"6291:73:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6308:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"6313:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6301:6:11"},"nodeType":"YulFunctionCall","src":"6301:19:11"},"nodeType":"YulExpressionStatement","src":"6301:19:11"},{"nodeType":"YulAssignment","src":"6329:29:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6348:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"6353:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6344:3:11"},"nodeType":"YulFunctionCall","src":"6344:14:11"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"6329:11:11"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6263:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"6268:6:11","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"6279:11:11","type":""}],"src":"6195:169:11"},{"body":{"nodeType":"YulBlock","src":"6476:75:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6498:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"6506:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6494:3:11"},"nodeType":"YulFunctionCall","src":"6494:14:11"},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"6510:33:11","type":"","value":"ERC20: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6487:6:11"},"nodeType":"YulFunctionCall","src":"6487:57:11"},"nodeType":"YulExpressionStatement","src":"6487:57:11"}]},"name":"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"6468:6:11","type":""}],"src":"6370:181:11"},{"body":{"nodeType":"YulBlock","src":"6703:220:11","statements":[{"nodeType":"YulAssignment","src":"6713:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6779:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"6784:2:11","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6720:58:11"},"nodeType":"YulFunctionCall","src":"6720:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6713:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6885:3:11"}],"functionName":{"name":"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","nodeType":"YulIdentifier","src":"6796:88:11"},"nodeType":"YulFunctionCall","src":"6796:93:11"},"nodeType":"YulExpressionStatement","src":"6796:93:11"},{"nodeType":"YulAssignment","src":"6898:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6909:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"6914:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6905:3:11"},"nodeType":"YulFunctionCall","src":"6905:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6898:3:11"}]}]},"name":"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6691:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6699:3:11","type":""}],"src":"6557:366:11"},{"body":{"nodeType":"YulBlock","src":"7100:248:11","statements":[{"nodeType":"YulAssignment","src":"7110:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7122:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"7133:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7118:3:11"},"nodeType":"YulFunctionCall","src":"7118:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7110:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7157:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"7168:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7153:3:11"},"nodeType":"YulFunctionCall","src":"7153:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7176:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"7182:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7172:3:11"},"nodeType":"YulFunctionCall","src":"7172:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7146:6:11"},"nodeType":"YulFunctionCall","src":"7146:47:11"},"nodeType":"YulExpressionStatement","src":"7146:47:11"},{"nodeType":"YulAssignment","src":"7202:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7336:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7210:124:11"},"nodeType":"YulFunctionCall","src":"7210:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7202:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7080:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7095:4:11","type":""}],"src":"6929:419:11"},{"body":{"nodeType":"YulBlock","src":"7382:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7399:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7402:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7392:6:11"},"nodeType":"YulFunctionCall","src":"7392:88:11"},"nodeType":"YulExpressionStatement","src":"7392:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7496:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7499:4:11","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7489:6:11"},"nodeType":"YulFunctionCall","src":"7489:15:11"},"nodeType":"YulExpressionStatement","src":"7489:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7520:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7523:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7513:6:11"},"nodeType":"YulFunctionCall","src":"7513:15:11"},"nodeType":"YulExpressionStatement","src":"7513:15:11"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"7354:180:11"},{"body":{"nodeType":"YulBlock","src":"7584:147:11","statements":[{"nodeType":"YulAssignment","src":"7594:25:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7617:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7599:17:11"},"nodeType":"YulFunctionCall","src":"7599:20:11"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"7594:1:11"}]},{"nodeType":"YulAssignment","src":"7628:25:11","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"7651:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7633:17:11"},"nodeType":"YulFunctionCall","src":"7633:20:11"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"7628:1:11"}]},{"nodeType":"YulAssignment","src":"7662:16:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7673:1:11"},{"name":"y","nodeType":"YulIdentifier","src":"7676:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7669:3:11"},"nodeType":"YulFunctionCall","src":"7669:9:11"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"7662:3:11"}]},{"body":{"nodeType":"YulBlock","src":"7702:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"7704:16:11"},"nodeType":"YulFunctionCall","src":"7704:18:11"},"nodeType":"YulExpressionStatement","src":"7704:18:11"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7694:1:11"},{"name":"sum","nodeType":"YulIdentifier","src":"7697:3:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7691:2:11"},"nodeType":"YulFunctionCall","src":"7691:10:11"},"nodeType":"YulIf","src":"7688:36:11"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"7571:1:11","type":""},{"name":"y","nodeType":"YulTypedName","src":"7574:1:11","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"7580:3:11","type":""}],"src":"7540:191:11"},{"body":{"nodeType":"YulBlock","src":"7802:53:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7819:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7842:5:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7824:17:11"},"nodeType":"YulFunctionCall","src":"7824:24:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7812:6:11"},"nodeType":"YulFunctionCall","src":"7812:37:11"},"nodeType":"YulExpressionStatement","src":"7812:37:11"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7790:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7797:3:11","type":""}],"src":"7737:118:11"},{"body":{"nodeType":"YulBlock","src":"7959:124:11","statements":[{"nodeType":"YulAssignment","src":"7969:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7981:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"7992:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7977:3:11"},"nodeType":"YulFunctionCall","src":"7977:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7969:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8049:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8062:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"8073:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8058:3:11"},"nodeType":"YulFunctionCall","src":"8058:17:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"8005:43:11"},"nodeType":"YulFunctionCall","src":"8005:71:11"},"nodeType":"YulExpressionStatement","src":"8005:71:11"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7931:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7943:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7954:4:11","type":""}],"src":"7861:222:11"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: mint to the zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":11,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b506040516200201b3803806200201b833981810160405281019062000037919062000387565b6040518060400160405280600781526020017f4d79546f6b656e000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f4d544b00000000000000000000000000000000000000000000000000000000008152508160039081620000b4919062000629565b508060049081620000c6919062000629565b505050620000e9620000dd6200010260201b60201c565b6200010a60201b60201c565b620000fb3382620001d060201b60201c565b506200082b565b600033905090565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160362000242576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002399062000771565b60405180910390fd5b62000256600083836200033d60201b60201c565b80600260008282546200026a9190620007c2565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200031d91906200080e565b60405180910390a362000339600083836200034260201b60201c565b5050565b505050565b505050565b600080fd5b6000819050919050565b62000361816200034c565b81146200036d57600080fd5b50565b600081519050620003818162000356565b92915050565b600060208284031215620003a0576200039f62000347565b5b6000620003b08482850162000370565b91505092915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200043b57607f821691505b602082108103620004515762000450620003f3565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620004bb7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200047c565b620004c786836200047c565b95508019841693508086168417925050509392505050565b6000819050919050565b60006200050a62000504620004fe846200034c565b620004df565b6200034c565b9050919050565b6000819050919050565b6200052683620004e9565b6200053e620005358262000511565b84845462000489565b825550505050565b600090565b6200055562000546565b620005628184846200051b565b505050565b5b818110156200058a576200057e6000826200054b565b60018101905062000568565b5050565b601f821115620005d957620005a38162000457565b620005ae846200046c565b81016020851015620005be578190505b620005d6620005cd856200046c565b83018262000567565b50505b505050565b600082821c905092915050565b6000620005fe60001984600802620005de565b1980831691505092915050565b6000620006198383620005eb565b9150826002028217905092915050565b6200063482620003b9565b67ffffffffffffffff81111562000650576200064f620003c4565b5b6200065c825462000422565b620006698282856200058e565b600060209050601f831160018114620006a157600084156200068c578287015190505b6200069885826200060b565b86555062000708565b601f198416620006b18662000457565b60005b82811015620006db57848901518255600182019150602085019450602081019050620006b4565b86831015620006fb5784890151620006f7601f891682620005eb565b8355505b6001600288020188555050505b505050505050565b600082825260208201905092915050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b600062000759601f8362000710565b9150620007668262000721565b602082019050919050565b600060208201905081810360008301526200078c816200074a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620007cf826200034c565b9150620007dc836200034c565b9250828201905080821115620007f757620007f662000793565b5b92915050565b62000808816200034c565b82525050565b6000602082019050620008256000830184620007fd565b92915050565b6117e0806200083b6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c8063715018a611610097578063a457c2d711610066578063a457c2d714610276578063a9059cbb146102a6578063dd62ed3e146102d6578063f2fde38b14610306576100f5565b8063715018a61461021457806379c650681461021e5780638da5cb5b1461023a57806395d89b4114610258576100f5565b806323b872dd116100d357806323b872dd14610166578063313ce5671461019657806339509351146101b457806370a08231146101e4576100f5565b806306fdde03146100fa578063095ea7b31461011857806318160ddd14610148575b600080fd5b610102610322565b60405161010f9190610f29565b60405180910390f35b610132600480360381019061012d9190610fe4565b6103b4565b60405161013f919061103f565b60405180910390f35b6101506103d7565b60405161015d9190611069565b60405180910390f35b610180600480360381019061017b9190611084565b6103e1565b60405161018d919061103f565b60405180910390f35b61019e610410565b6040516101ab91906110f3565b60405180910390f35b6101ce60048036038101906101c99190610fe4565b610419565b6040516101db919061103f565b60405180910390f35b6101fe60048036038101906101f9919061110e565b610450565b60405161020b9190611069565b60405180910390f35b61021c610498565b005b61023860048036038101906102339190610fe4565b6104ac565b005b6102426104c2565b60405161024f919061114a565b60405180910390f35b6102606104ec565b60405161026d9190610f29565b60405180910390f35b610290600480360381019061028b9190610fe4565b61057e565b60405161029d919061103f565b60405180910390f35b6102c060048036038101906102bb9190610fe4565b6105f5565b6040516102cd919061103f565b60405180910390f35b6102f060048036038101906102eb9190611165565b610618565b6040516102fd9190611069565b60405180910390f35b610320600480360381019061031b919061110e565b61069f565b005b606060038054610331906111d4565b80601f016020809104026020016040519081016040528092919081815260200182805461035d906111d4565b80156103aa5780601f1061037f576101008083540402835291602001916103aa565b820191906000526020600020905b81548152906001019060200180831161038d57829003601f168201915b5050505050905090565b6000806103bf610722565b90506103cc81858561072a565b600191505092915050565b6000600254905090565b6000806103ec610722565b90506103f98582856108f3565b61040485858561097f565b60019150509392505050565b60006012905090565b600080610424610722565b90506104458185856104368589610618565b6104409190611234565b61072a565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6104a0610bf5565b6104aa6000610c73565b565b6104b4610bf5565b6104be8282610d39565b5050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546104fb906111d4565b80601f0160208091040260200160405190810160405280929190818152602001828054610527906111d4565b80156105745780601f1061054957610100808354040283529160200191610574565b820191906000526020600020905b81548152906001019060200180831161055757829003601f168201915b5050505050905090565b600080610589610722565b905060006105978286610618565b9050838110156105dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d3906112da565b60405180910390fd5b6105e9828686840361072a565b60019250505092915050565b600080610600610722565b905061060d81858561097f565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6106a7610bf5565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610716576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070d9061136c565b60405180910390fd5b61071f81610c73565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610799576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610790906113fe565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610808576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ff90611490565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516108e69190611069565b60405180910390a3505050565b60006108ff8484610618565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610979578181101561096b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610962906114fc565b60405180910390fd5b610978848484840361072a565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036109ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109e59061158e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a5d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5490611620565b60405180910390fd5b610a68838383610e8f565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610aee576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae5906116b2565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610bdc9190611069565b60405180910390a3610bef848484610e94565b50505050565b610bfd610722565b73ffffffffffffffffffffffffffffffffffffffff16610c1b6104c2565b73ffffffffffffffffffffffffffffffffffffffff1614610c71576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c689061171e565b60405180910390fd5b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610da8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d9f9061178a565b60405180910390fd5b610db460008383610e8f565b8060026000828254610dc69190611234565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610e779190611069565b60405180910390a3610e8b60008383610e94565b5050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ed3578082015181840152602081019050610eb8565b60008484015250505050565b6000601f19601f8301169050919050565b6000610efb82610e99565b610f058185610ea4565b9350610f15818560208601610eb5565b610f1e81610edf565b840191505092915050565b60006020820190508181036000830152610f438184610ef0565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f7b82610f50565b9050919050565b610f8b81610f70565b8114610f9657600080fd5b50565b600081359050610fa881610f82565b92915050565b6000819050919050565b610fc181610fae565b8114610fcc57600080fd5b50565b600081359050610fde81610fb8565b92915050565b60008060408385031215610ffb57610ffa610f4b565b5b600061100985828601610f99565b925050602061101a85828601610fcf565b9150509250929050565b60008115159050919050565b61103981611024565b82525050565b60006020820190506110546000830184611030565b92915050565b61106381610fae565b82525050565b600060208201905061107e600083018461105a565b92915050565b60008060006060848603121561109d5761109c610f4b565b5b60006110ab86828701610f99565b93505060206110bc86828701610f99565b92505060406110cd86828701610fcf565b9150509250925092565b600060ff82169050919050565b6110ed816110d7565b82525050565b600060208201905061110860008301846110e4565b92915050565b60006020828403121561112457611123610f4b565b5b600061113284828501610f99565b91505092915050565b61114481610f70565b82525050565b600060208201905061115f600083018461113b565b92915050565b6000806040838503121561117c5761117b610f4b565b5b600061118a85828601610f99565b925050602061119b85828601610f99565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806111ec57607f821691505b6020821081036111ff576111fe6111a5565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061123f82610fae565b915061124a83610fae565b925082820190508082111561126257611261611205565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b60006112c4602583610ea4565b91506112cf82611268565b604082019050919050565b600060208201905081810360008301526112f3816112b7565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611356602683610ea4565b9150611361826112fa565b604082019050919050565b6000602082019050818103600083015261138581611349565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b60006113e8602483610ea4565b91506113f38261138c565b604082019050919050565b60006020820190508181036000830152611417816113db565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b600061147a602283610ea4565b91506114858261141e565b604082019050919050565b600060208201905081810360008301526114a98161146d565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b60006114e6601d83610ea4565b91506114f1826114b0565b602082019050919050565b60006020820190508181036000830152611515816114d9565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000611578602583610ea4565b91506115838261151c565b604082019050919050565b600060208201905081810360008301526115a78161156b565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b600061160a602383610ea4565b9150611615826115ae565b604082019050919050565b60006020820190508181036000830152611639816115fd565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b600061169c602683610ea4565b91506116a782611640565b604082019050919050565b600060208201905081810360008301526116cb8161168f565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611708602083610ea4565b9150611713826116d2565b602082019050919050565b60006020820190508181036000830152611737816116fb565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000611774601f83610ea4565b915061177f8261173e565b602082019050919050565b600060208201905081810360008301526117a381611767565b905091905056fea2646970667358221220472c1b395a02033f0daeb6550deafc8268389297245ab39bf93600d39562276464736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x201B CODESIZE SUB DUP1 PUSH3 0x201B DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x387 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D79546F6B656E00000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D544B0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0xB4 SWAP2 SWAP1 PUSH3 0x629 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0xC6 SWAP2 SWAP1 PUSH3 0x629 JUMP JUMPDEST POP POP POP PUSH3 0xE9 PUSH3 0xDD PUSH3 0x102 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x10A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xFB CALLER DUP3 PUSH3 0x1D0 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x82B JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x242 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x239 SWAP1 PUSH3 0x771 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x256 PUSH1 0x0 DUP4 DUP4 PUSH3 0x33D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x26A SWAP2 SWAP1 PUSH3 0x7C2 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x31D SWAP2 SWAP1 PUSH3 0x80E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH3 0x339 PUSH1 0x0 DUP4 DUP4 PUSH3 0x342 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x361 DUP2 PUSH3 0x34C JUMP JUMPDEST DUP2 EQ PUSH3 0x36D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x381 DUP2 PUSH3 0x356 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x3A0 JUMPI PUSH3 0x39F PUSH3 0x347 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x3B0 DUP5 DUP3 DUP6 ADD PUSH3 0x370 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x43B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x451 JUMPI PUSH3 0x450 PUSH3 0x3F3 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x4BB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x47C JUMP JUMPDEST PUSH3 0x4C7 DUP7 DUP4 PUSH3 0x47C JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x50A PUSH3 0x504 PUSH3 0x4FE DUP5 PUSH3 0x34C JUMP JUMPDEST PUSH3 0x4DF JUMP JUMPDEST PUSH3 0x34C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x526 DUP4 PUSH3 0x4E9 JUMP JUMPDEST PUSH3 0x53E PUSH3 0x535 DUP3 PUSH3 0x511 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x489 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x555 PUSH3 0x546 JUMP JUMPDEST PUSH3 0x562 DUP2 DUP5 DUP5 PUSH3 0x51B JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x58A JUMPI PUSH3 0x57E PUSH1 0x0 DUP3 PUSH3 0x54B JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x568 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x5D9 JUMPI PUSH3 0x5A3 DUP2 PUSH3 0x457 JUMP JUMPDEST PUSH3 0x5AE DUP5 PUSH3 0x46C JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x5BE JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x5D6 PUSH3 0x5CD DUP6 PUSH3 0x46C JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x567 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x5FE PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x5DE JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x619 DUP4 DUP4 PUSH3 0x5EB JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x634 DUP3 PUSH3 0x3B9 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x650 JUMPI PUSH3 0x64F PUSH3 0x3C4 JUMP JUMPDEST JUMPDEST PUSH3 0x65C DUP3 SLOAD PUSH3 0x422 JUMP JUMPDEST PUSH3 0x669 DUP3 DUP3 DUP6 PUSH3 0x58E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x6A1 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x68C JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x698 DUP6 DUP3 PUSH3 0x60B JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x708 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x6B1 DUP7 PUSH3 0x457 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x6DB JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x6B4 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x6FB JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x6F7 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x5EB JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x759 PUSH1 0x1F DUP4 PUSH3 0x710 JUMP JUMPDEST SWAP2 POP PUSH3 0x766 DUP3 PUSH3 0x721 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x78C DUP2 PUSH3 0x74A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x7CF DUP3 PUSH3 0x34C JUMP JUMPDEST SWAP2 POP PUSH3 0x7DC DUP4 PUSH3 0x34C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0x7F7 JUMPI PUSH3 0x7F6 PUSH3 0x793 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x808 DUP2 PUSH3 0x34C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x825 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x7FD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17E0 DUP1 PUSH3 0x83B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2A6 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2D6 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x306 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x79C65068 EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x258 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1E4 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x148 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x102 PUSH2 0x322 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10F SWAP2 SWAP1 PUSH2 0xF29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x132 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12D SWAP2 SWAP1 PUSH2 0xFE4 JUMP JUMPDEST PUSH2 0x3B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x103F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x150 PUSH2 0x3D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15D SWAP2 SWAP1 PUSH2 0x1069 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x180 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17B SWAP2 SWAP1 PUSH2 0x1084 JUMP JUMPDEST PUSH2 0x3E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x103F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19E PUSH2 0x410 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x10F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0xFE4 JUMP JUMPDEST PUSH2 0x419 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x103F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x110E JUMP JUMPDEST PUSH2 0x450 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20B SWAP2 SWAP1 PUSH2 0x1069 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21C PUSH2 0x498 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x238 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x233 SWAP2 SWAP1 PUSH2 0xFE4 JUMP JUMPDEST PUSH2 0x4AC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x242 PUSH2 0x4C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24F SWAP2 SWAP1 PUSH2 0x114A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH2 0x4EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xF29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x290 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28B SWAP2 SWAP1 PUSH2 0xFE4 JUMP JUMPDEST PUSH2 0x57E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29D SWAP2 SWAP1 PUSH2 0x103F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BB SWAP2 SWAP1 PUSH2 0xFE4 JUMP JUMPDEST PUSH2 0x5F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CD SWAP2 SWAP1 PUSH2 0x103F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EB SWAP2 SWAP1 PUSH2 0x1165 JUMP JUMPDEST PUSH2 0x618 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FD SWAP2 SWAP1 PUSH2 0x1069 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x320 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31B SWAP2 SWAP1 PUSH2 0x110E JUMP JUMPDEST PUSH2 0x69F JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x331 SWAP1 PUSH2 0x11D4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x35D SWAP1 PUSH2 0x11D4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3AA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x37F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3AA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x38D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3BF PUSH2 0x722 JUMP JUMPDEST SWAP1 POP PUSH2 0x3CC DUP2 DUP6 DUP6 PUSH2 0x72A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3EC PUSH2 0x722 JUMP JUMPDEST SWAP1 POP PUSH2 0x3F9 DUP6 DUP3 DUP6 PUSH2 0x8F3 JUMP JUMPDEST PUSH2 0x404 DUP6 DUP6 DUP6 PUSH2 0x97F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x424 PUSH2 0x722 JUMP JUMPDEST SWAP1 POP PUSH2 0x445 DUP2 DUP6 DUP6 PUSH2 0x436 DUP6 DUP10 PUSH2 0x618 JUMP JUMPDEST PUSH2 0x440 SWAP2 SWAP1 PUSH2 0x1234 JUMP JUMPDEST PUSH2 0x72A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4A0 PUSH2 0xBF5 JUMP JUMPDEST PUSH2 0x4AA PUSH1 0x0 PUSH2 0xC73 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x4B4 PUSH2 0xBF5 JUMP JUMPDEST PUSH2 0x4BE DUP3 DUP3 PUSH2 0xD39 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x4FB SWAP1 PUSH2 0x11D4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x527 SWAP1 PUSH2 0x11D4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x574 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x549 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x574 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x557 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x589 PUSH2 0x722 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x597 DUP3 DUP7 PUSH2 0x618 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x5DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D3 SWAP1 PUSH2 0x12DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5E9 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x72A JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x600 PUSH2 0x722 JUMP JUMPDEST SWAP1 POP PUSH2 0x60D DUP2 DUP6 DUP6 PUSH2 0x97F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6A7 PUSH2 0xBF5 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x716 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x70D SWAP1 PUSH2 0x136C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x71F DUP2 PUSH2 0xC73 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x799 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x790 SWAP1 PUSH2 0x13FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x808 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7FF SWAP1 PUSH2 0x1490 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x8E6 SWAP2 SWAP1 PUSH2 0x1069 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8FF DUP5 DUP5 PUSH2 0x618 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x979 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x96B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x962 SWAP1 PUSH2 0x14FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x978 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x72A JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9EE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E5 SWAP1 PUSH2 0x158E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA5D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA54 SWAP1 PUSH2 0x1620 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA68 DUP4 DUP4 DUP4 PUSH2 0xE8F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xAEE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE5 SWAP1 PUSH2 0x16B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xBDC SWAP2 SWAP1 PUSH2 0x1069 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xBEF DUP5 DUP5 DUP5 PUSH2 0xE94 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xBFD PUSH2 0x722 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC1B PUSH2 0x4C2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC71 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC68 SWAP1 PUSH2 0x171E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDA8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD9F SWAP1 PUSH2 0x178A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDB4 PUSH1 0x0 DUP4 DUP4 PUSH2 0xE8F JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xDC6 SWAP2 SWAP1 PUSH2 0x1234 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xE77 SWAP2 SWAP1 PUSH2 0x1069 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xE8B PUSH1 0x0 DUP4 DUP4 PUSH2 0xE94 JUMP JUMPDEST POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xED3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xEB8 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEFB DUP3 PUSH2 0xE99 JUMP JUMPDEST PUSH2 0xF05 DUP2 DUP6 PUSH2 0xEA4 JUMP JUMPDEST SWAP4 POP PUSH2 0xF15 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xEB5 JUMP JUMPDEST PUSH2 0xF1E DUP2 PUSH2 0xEDF JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF43 DUP2 DUP5 PUSH2 0xEF0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF7B DUP3 PUSH2 0xF50 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF8B DUP2 PUSH2 0xF70 JUMP JUMPDEST DUP2 EQ PUSH2 0xF96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xFA8 DUP2 PUSH2 0xF82 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFC1 DUP2 PUSH2 0xFAE JUMP JUMPDEST DUP2 EQ PUSH2 0xFCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xFDE DUP2 PUSH2 0xFB8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFFB JUMPI PUSH2 0xFFA PUSH2 0xF4B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1009 DUP6 DUP3 DUP7 ADD PUSH2 0xF99 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x101A DUP6 DUP3 DUP7 ADD PUSH2 0xFCF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1039 DUP2 PUSH2 0x1024 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1054 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1030 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1063 DUP2 PUSH2 0xFAE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x107E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x105A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x109D JUMPI PUSH2 0x109C PUSH2 0xF4B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x10AB DUP7 DUP3 DUP8 ADD PUSH2 0xF99 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x10BC DUP7 DUP3 DUP8 ADD PUSH2 0xF99 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x10CD DUP7 DUP3 DUP8 ADD PUSH2 0xFCF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10ED DUP2 PUSH2 0x10D7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1108 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x10E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1124 JUMPI PUSH2 0x1123 PUSH2 0xF4B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1132 DUP5 DUP3 DUP6 ADD PUSH2 0xF99 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1144 DUP2 PUSH2 0xF70 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x115F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x113B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x117C JUMPI PUSH2 0x117B PUSH2 0xF4B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x118A DUP6 DUP3 DUP7 ADD PUSH2 0xF99 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x119B DUP6 DUP3 DUP7 ADD PUSH2 0xF99 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x11EC JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x11FF JUMPI PUSH2 0x11FE PUSH2 0x11A5 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x123F DUP3 PUSH2 0xFAE JUMP JUMPDEST SWAP2 POP PUSH2 0x124A DUP4 PUSH2 0xFAE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1262 JUMPI PUSH2 0x1261 PUSH2 0x1205 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12C4 PUSH1 0x25 DUP4 PUSH2 0xEA4 JUMP JUMPDEST SWAP2 POP PUSH2 0x12CF DUP3 PUSH2 0x1268 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x12F3 DUP2 PUSH2 0x12B7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1356 PUSH1 0x26 DUP4 PUSH2 0xEA4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1361 DUP3 PUSH2 0x12FA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1385 DUP2 PUSH2 0x1349 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13E8 PUSH1 0x24 DUP4 PUSH2 0xEA4 JUMP JUMPDEST SWAP2 POP PUSH2 0x13F3 DUP3 PUSH2 0x138C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1417 DUP2 PUSH2 0x13DB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x147A PUSH1 0x22 DUP4 PUSH2 0xEA4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1485 DUP3 PUSH2 0x141E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x14A9 DUP2 PUSH2 0x146D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14E6 PUSH1 0x1D DUP4 PUSH2 0xEA4 JUMP JUMPDEST SWAP2 POP PUSH2 0x14F1 DUP3 PUSH2 0x14B0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1515 DUP2 PUSH2 0x14D9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1578 PUSH1 0x25 DUP4 PUSH2 0xEA4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1583 DUP3 PUSH2 0x151C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15A7 DUP2 PUSH2 0x156B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x160A PUSH1 0x23 DUP4 PUSH2 0xEA4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1615 DUP3 PUSH2 0x15AE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1639 DUP2 PUSH2 0x15FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x169C PUSH1 0x26 DUP4 PUSH2 0xEA4 JUMP JUMPDEST SWAP2 POP PUSH2 0x16A7 DUP3 PUSH2 0x1640 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x16CB DUP2 PUSH2 0x168F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1708 PUSH1 0x20 DUP4 PUSH2 0xEA4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1713 DUP3 PUSH2 0x16D2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1737 DUP2 PUSH2 0x16FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1774 PUSH1 0x1F DUP4 PUSH2 0xEA4 JUMP JUMPDEST SWAP2 POP PUSH2 0x177F DUP3 PUSH2 0x173E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x17A3 DUP2 PUSH2 0x1767 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE 0x2C SHL CODECOPY GAS MUL SUB EXTCODEHASH 0xD 0xAE 0xB6 SSTORE 0xD 0xEA 0xFC DUP3 PUSH9 0x389297245AB39BF936 STOP 0xD3 SWAP6 PUSH3 0x276464 PUSH20 0x6F6C634300081200330000000000000000000000 ","sourceMap":"171:246:9:-:0;;;211:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1980:113:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2054:5;2046;:13;;;;;;:::i;:::-;;2079:7;2069;:17;;;;;;:::i;:::-;;1980:113;;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;271:25:9::1;277:10;289:6;271:5;;;:25;;:::i;:::-;211:93:::0;171:246;;640:96:8;693:7;719:10;712:17;;640:96;:::o;2426:187:0:-;2499:16;2518:6;;;;;;;;;;;2499:25;;2543:8;2534:6;;:17;;;;;;;;;;;;;;;;;;2597:8;2566:40;;2587:8;2566:40;;;;;;;;;;;;2489:124;2426:187;:::o;8520:535:2:-;8622:1;8603:21;;:7;:21;;;8595:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;8671:49;8700:1;8704:7;8713:6;8671:20;;;:49;;:::i;:::-;8747:6;8731:12;;:22;;;;;;;:::i;:::-;;;;;;;;8921:6;8899:9;:18;8909:7;8899:18;;;;;;;;;;;;;;;;:28;;;;;;;;;;;8973:7;8952:37;;8969:1;8952:37;;;8982:6;8952:37;;;;;;:::i;:::-;;;;;;;;9000:48;9028:1;9032:7;9041:6;9000:19;;;:48;;:::i;:::-;8520:535;;:::o;12073:91::-;;;;:::o;12752:90::-;;;;:::o;88:117:11:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:351::-;764:6;813:2;801:9;792:7;788:23;784:32;781:119;;;819:79;;:::i;:::-;781:119;939:1;964:64;1020:7;1011:6;1000:9;996:22;964:64;:::i;:::-;954:74;;910:128;694:351;;;;:::o;1051:99::-;1103:6;1137:5;1131:12;1121:22;;1051:99;;;:::o;1156:180::-;1204:77;1201:1;1194:88;1301:4;1298:1;1291:15;1325:4;1322:1;1315:15;1342:180;1390:77;1387:1;1380:88;1487:4;1484:1;1477:15;1511:4;1508:1;1501:15;1528:320;1572:6;1609:1;1603:4;1599:12;1589:22;;1656:1;1650:4;1646:12;1677:18;1667:81;;1733:4;1725:6;1721:17;1711:27;;1667:81;1795:2;1787:6;1784:14;1764:18;1761:38;1758:84;;1814:18;;:::i;:::-;1758:84;1579:269;1528:320;;;:::o;1854:141::-;1903:4;1926:3;1918:11;;1949:3;1946:1;1939:14;1983:4;1980:1;1970:18;1962:26;;1854:141;;;:::o;2001:93::-;2038:6;2085:2;2080;2073:5;2069:14;2065:23;2055:33;;2001:93;;;:::o;2100:107::-;2144:8;2194:5;2188:4;2184:16;2163:37;;2100:107;;;;:::o;2213:393::-;2282:6;2332:1;2320:10;2316:18;2355:97;2385:66;2374:9;2355:97;:::i;:::-;2473:39;2503:8;2492:9;2473:39;:::i;:::-;2461:51;;2545:4;2541:9;2534:5;2530:21;2521:30;;2594:4;2584:8;2580:19;2573:5;2570:30;2560:40;;2289:317;;2213:393;;;;;:::o;2612:60::-;2640:3;2661:5;2654:12;;2612:60;;;:::o;2678:142::-;2728:9;2761:53;2779:34;2788:24;2806:5;2788:24;:::i;:::-;2779:34;:::i;:::-;2761:53;:::i;:::-;2748:66;;2678:142;;;:::o;2826:75::-;2869:3;2890:5;2883:12;;2826:75;;;:::o;2907:269::-;3017:39;3048:7;3017:39;:::i;:::-;3078:91;3127:41;3151:16;3127:41;:::i;:::-;3119:6;3112:4;3106:11;3078:91;:::i;:::-;3072:4;3065:105;2983:193;2907:269;;;:::o;3182:73::-;3227:3;3182:73;:::o;3261:189::-;3338:32;;:::i;:::-;3379:65;3437:6;3429;3423:4;3379:65;:::i;:::-;3314:136;3261:189;;:::o;3456:186::-;3516:120;3533:3;3526:5;3523:14;3516:120;;;3587:39;3624:1;3617:5;3587:39;:::i;:::-;3560:1;3553:5;3549:13;3540:22;;3516:120;;;3456:186;;:::o;3648:543::-;3749:2;3744:3;3741:11;3738:446;;;3783:38;3815:5;3783:38;:::i;:::-;3867:29;3885:10;3867:29;:::i;:::-;3857:8;3853:44;4050:2;4038:10;4035:18;4032:49;;;4071:8;4056:23;;4032:49;4094:80;4150:22;4168:3;4150:22;:::i;:::-;4140:8;4136:37;4123:11;4094:80;:::i;:::-;3753:431;;3738:446;3648:543;;;:::o;4197:117::-;4251:8;4301:5;4295:4;4291:16;4270:37;;4197:117;;;;:::o;4320:169::-;4364:6;4397:51;4445:1;4441:6;4433:5;4430:1;4426:13;4397:51;:::i;:::-;4393:56;4478:4;4472;4468:15;4458:25;;4371:118;4320:169;;;;:::o;4494:295::-;4570:4;4716:29;4741:3;4735:4;4716:29;:::i;:::-;4708:37;;4778:3;4775:1;4771:11;4765:4;4762:21;4754:29;;4494:295;;;;:::o;4794:1395::-;4911:37;4944:3;4911:37;:::i;:::-;5013:18;5005:6;5002:30;4999:56;;;5035:18;;:::i;:::-;4999:56;5079:38;5111:4;5105:11;5079:38;:::i;:::-;5164:67;5224:6;5216;5210:4;5164:67;:::i;:::-;5258:1;5282:4;5269:17;;5314:2;5306:6;5303:14;5331:1;5326:618;;;;5988:1;6005:6;6002:77;;;6054:9;6049:3;6045:19;6039:26;6030:35;;6002:77;6105:67;6165:6;6158:5;6105:67;:::i;:::-;6099:4;6092:81;5961:222;5296:887;;5326:618;5378:4;5374:9;5366:6;5362:22;5412:37;5444:4;5412:37;:::i;:::-;5471:1;5485:208;5499:7;5496:1;5493:14;5485:208;;;5578:9;5573:3;5569:19;5563:26;5555:6;5548:42;5629:1;5621:6;5617:14;5607:24;;5676:2;5665:9;5661:18;5648:31;;5522:4;5519:1;5515:12;5510:17;;5485:208;;;5721:6;5712:7;5709:19;5706:179;;;5779:9;5774:3;5770:19;5764:26;5822:48;5864:4;5856:6;5852:17;5841:9;5822:48;:::i;:::-;5814:6;5807:64;5729:156;5706:179;5931:1;5927;5919:6;5915:14;5911:22;5905:4;5898:36;5333:611;;;5296:887;;4886:1303;;;4794:1395;;:::o;6195:169::-;6279:11;6313:6;6308:3;6301:19;6353:4;6348:3;6344:14;6329:29;;6195:169;;;;:::o;6370:181::-;6510:33;6506:1;6498:6;6494:14;6487:57;6370:181;:::o;6557:366::-;6699:3;6720:67;6784:2;6779:3;6720:67;:::i;:::-;6713:74;;6796:93;6885:3;6796:93;:::i;:::-;6914:2;6909:3;6905:12;6898:19;;6557:366;;;:::o;6929:419::-;7095:4;7133:2;7122:9;7118:18;7110:26;;7182:9;7176:4;7172:20;7168:1;7157:9;7153:17;7146:47;7210:131;7336:4;7210:131;:::i;:::-;7202:139;;6929:419;;;:::o;7354:180::-;7402:77;7399:1;7392:88;7499:4;7496:1;7489:15;7523:4;7520:1;7513:15;7540:191;7580:3;7599:20;7617:1;7599:20;:::i;:::-;7594:25;;7633:20;7651:1;7633:20;:::i;:::-;7628:25;;7676:1;7673;7669:9;7662:16;;7697:3;7694:1;7691:10;7688:36;;;7704:18;;:::i;:::-;7688:36;7540:191;;;;:::o;7737:118::-;7824:24;7842:5;7824:24;:::i;:::-;7819:3;7812:37;7737:118;;:::o;7861:222::-;7954:4;7992:2;7981:9;7977:18;7969:26;;8005:71;8073:1;8062:9;8058:17;8049:6;8005:71;:::i;:::-;7861:222;;;;:::o;171:246:9:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_763":{"entryPoint":3732,"id":763,"parameterSlots":3,"returnSlots":0},"@_approve_698":{"entryPoint":1834,"id":698,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_752":{"entryPoint":3727,"id":752,"parameterSlots":3,"returnSlots":0},"@_checkOwner_54":{"entryPoint":3061,"id":54,"parameterSlots":0,"returnSlots":0},"@_mint_581":{"entryPoint":3385,"id":581,"parameterSlots":2,"returnSlots":0},"@_msgSender_1621":{"entryPoint":1826,"id":1621,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_741":{"entryPoint":2291,"id":741,"parameterSlots":3,"returnSlots":0},"@_transferOwnership_111":{"entryPoint":3187,"id":111,"parameterSlots":1,"returnSlots":0},"@_transfer_524":{"entryPoint":2431,"id":524,"parameterSlots":3,"returnSlots":0},"@allowance_319":{"entryPoint":1560,"id":319,"parameterSlots":2,"returnSlots":1},"@approve_344":{"entryPoint":948,"id":344,"parameterSlots":2,"returnSlots":1},"@balanceOf_276":{"entryPoint":1104,"id":276,"parameterSlots":1,"returnSlots":1},"@decimals_252":{"entryPoint":1040,"id":252,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_447":{"entryPoint":1406,"id":447,"parameterSlots":2,"returnSlots":1},"@increaseAllowance_406":{"entryPoint":1049,"id":406,"parameterSlots":2,"returnSlots":1},"@mintToken_1670":{"entryPoint":1196,"id":1670,"parameterSlots":2,"returnSlots":0},"@name_232":{"entryPoint":802,"id":232,"parameterSlots":0,"returnSlots":1},"@owner_40":{"entryPoint":1218,"id":40,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_68":{"entryPoint":1176,"id":68,"parameterSlots":0,"returnSlots":0},"@symbol_242":{"entryPoint":1260,"id":242,"parameterSlots":0,"returnSlots":1},"@totalSupply_262":{"entryPoint":983,"id":262,"parameterSlots":0,"returnSlots":1},"@transferFrom_377":{"entryPoint":993,"id":377,"parameterSlots":3,"returnSlots":1},"@transferOwnership_91":{"entryPoint":1695,"id":91,"parameterSlots":1,"returnSlots":0},"@transfer_301":{"entryPoint":1525,"id":301,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address":{"entryPoint":3993,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":4047,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":4366,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":4453,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":4228,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":4068,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":4411,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":4144,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":3824,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack":{"entryPoint":5629,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack":{"entryPoint":4937,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack":{"entryPoint":5229,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack":{"entryPoint":5337,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack":{"entryPoint":5775,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack":{"entryPoint":5883,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack":{"entryPoint":5483,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack":{"entryPoint":5083,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack":{"entryPoint":4791,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack":{"entryPoint":5991,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":4186,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":4324,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":4426,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":4159,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3881,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5664,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4972,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5264,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5372,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5810,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5918,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5518,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5118,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4826,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6026,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":4201,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":4339,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":3737,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":3748,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":4660,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":3952,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":4132,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":3920,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":4014,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":4311,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":3765,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":4564,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":4613,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":4517,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":3915,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":3807,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f":{"entryPoint":5550,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe":{"entryPoint":4858,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029":{"entryPoint":5150,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe":{"entryPoint":5296,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6":{"entryPoint":5696,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":5842,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea":{"entryPoint":5404,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208":{"entryPoint":5004,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8":{"entryPoint":4712,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e":{"entryPoint":5950,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":3970,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":4024,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:17048:11","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:11","statements":[{"nodeType":"YulAssignment","src":"77:22:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:11"},"nodeType":"YulFunctionCall","src":"87:12:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:11"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:11","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:11","type":""}],"src":"7:99:11"},{"body":{"nodeType":"YulBlock","src":"208:73:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"225:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"230:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"218:6:11"},"nodeType":"YulFunctionCall","src":"218:19:11"},"nodeType":"YulExpressionStatement","src":"218:19:11"},{"nodeType":"YulAssignment","src":"246:29:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"265:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"270:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"261:3:11"},"nodeType":"YulFunctionCall","src":"261:14:11"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"246:11:11"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"180:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"185:6:11","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"196:11:11","type":""}],"src":"112:169:11"},{"body":{"nodeType":"YulBlock","src":"349:184:11","statements":[{"nodeType":"YulVariableDeclaration","src":"359:10:11","value":{"kind":"number","nodeType":"YulLiteral","src":"368:1:11","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"363:1:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"428:63:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"453:3:11"},{"name":"i","nodeType":"YulIdentifier","src":"458:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"449:3:11"},"nodeType":"YulFunctionCall","src":"449:11:11"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"472:3:11"},{"name":"i","nodeType":"YulIdentifier","src":"477:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"468:3:11"},"nodeType":"YulFunctionCall","src":"468:11:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"462:5:11"},"nodeType":"YulFunctionCall","src":"462:18:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"442:6:11"},"nodeType":"YulFunctionCall","src":"442:39:11"},"nodeType":"YulExpressionStatement","src":"442:39:11"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"389:1:11"},{"name":"length","nodeType":"YulIdentifier","src":"392:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"386:2:11"},"nodeType":"YulFunctionCall","src":"386:13:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"400:19:11","statements":[{"nodeType":"YulAssignment","src":"402:15:11","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"411:1:11"},{"kind":"number","nodeType":"YulLiteral","src":"414:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"407:3:11"},"nodeType":"YulFunctionCall","src":"407:10:11"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"402:1:11"}]}]},"pre":{"nodeType":"YulBlock","src":"382:3:11","statements":[]},"src":"378:113:11"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"511:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"516:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"507:3:11"},"nodeType":"YulFunctionCall","src":"507:16:11"},{"kind":"number","nodeType":"YulLiteral","src":"525:1:11","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"500:6:11"},"nodeType":"YulFunctionCall","src":"500:27:11"},"nodeType":"YulExpressionStatement","src":"500:27:11"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"331:3:11","type":""},{"name":"dst","nodeType":"YulTypedName","src":"336:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"341:6:11","type":""}],"src":"287:246:11"},{"body":{"nodeType":"YulBlock","src":"587:54:11","statements":[{"nodeType":"YulAssignment","src":"597:38:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"615:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"622:2:11","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"611:3:11"},"nodeType":"YulFunctionCall","src":"611:14:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"631:2:11","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"627:3:11"},"nodeType":"YulFunctionCall","src":"627:7:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"607:3:11"},"nodeType":"YulFunctionCall","src":"607:28:11"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"597:6:11"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"570:5:11","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"580:6:11","type":""}],"src":"539:102:11"},{"body":{"nodeType":"YulBlock","src":"739:285:11","statements":[{"nodeType":"YulVariableDeclaration","src":"749:53:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"796:5:11"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"763:32:11"},"nodeType":"YulFunctionCall","src":"763:39:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"753:6:11","type":""}]},{"nodeType":"YulAssignment","src":"811:78:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"877:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"882:6:11"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"818:58:11"},"nodeType":"YulFunctionCall","src":"818:71:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"811:3:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"937:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"944:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"933:3:11"},"nodeType":"YulFunctionCall","src":"933:16:11"},{"name":"pos","nodeType":"YulIdentifier","src":"951:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"956:6:11"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"898:34:11"},"nodeType":"YulFunctionCall","src":"898:65:11"},"nodeType":"YulExpressionStatement","src":"898:65:11"},{"nodeType":"YulAssignment","src":"972:46:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"983:3:11"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1010:6:11"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"988:21:11"},"nodeType":"YulFunctionCall","src":"988:29:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"979:3:11"},"nodeType":"YulFunctionCall","src":"979:39:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"972:3:11"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"720:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"727:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"735:3:11","type":""}],"src":"647:377:11"},{"body":{"nodeType":"YulBlock","src":"1148:195:11","statements":[{"nodeType":"YulAssignment","src":"1158:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1170:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1181:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1166:3:11"},"nodeType":"YulFunctionCall","src":"1166:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1158:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1205:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1216:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1201:3:11"},"nodeType":"YulFunctionCall","src":"1201:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1224:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"1230:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1220:3:11"},"nodeType":"YulFunctionCall","src":"1220:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1194:6:11"},"nodeType":"YulFunctionCall","src":"1194:47:11"},"nodeType":"YulExpressionStatement","src":"1194:47:11"},{"nodeType":"YulAssignment","src":"1250:86:11","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1322:6:11"},{"name":"tail","nodeType":"YulIdentifier","src":"1331:4:11"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1258:63:11"},"nodeType":"YulFunctionCall","src":"1258:78:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1250:4:11"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1120:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1132:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1143:4:11","type":""}],"src":"1030:313:11"},{"body":{"nodeType":"YulBlock","src":"1389:35:11","statements":[{"nodeType":"YulAssignment","src":"1399:19:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1415:2:11","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1409:5:11"},"nodeType":"YulFunctionCall","src":"1409:9:11"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1399:6:11"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1382:6:11","type":""}],"src":"1349:75:11"},{"body":{"nodeType":"YulBlock","src":"1519:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1536:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1539:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1529:6:11"},"nodeType":"YulFunctionCall","src":"1529:12:11"},"nodeType":"YulExpressionStatement","src":"1529:12:11"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1430:117:11"},{"body":{"nodeType":"YulBlock","src":"1642:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1659:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1662:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1652:6:11"},"nodeType":"YulFunctionCall","src":"1652:12:11"},"nodeType":"YulExpressionStatement","src":"1652:12:11"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1553:117:11"},{"body":{"nodeType":"YulBlock","src":"1721:81:11","statements":[{"nodeType":"YulAssignment","src":"1731:65:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1746:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"1753:42:11","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1742:3:11"},"nodeType":"YulFunctionCall","src":"1742:54:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1731:7:11"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1703:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1713:7:11","type":""}],"src":"1676:126:11"},{"body":{"nodeType":"YulBlock","src":"1853:51:11","statements":[{"nodeType":"YulAssignment","src":"1863:35:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1892:5:11"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1874:17:11"},"nodeType":"YulFunctionCall","src":"1874:24:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1863:7:11"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1835:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1845:7:11","type":""}],"src":"1808:96:11"},{"body":{"nodeType":"YulBlock","src":"1953:79:11","statements":[{"body":{"nodeType":"YulBlock","src":"2010:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2019:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2022:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2012:6:11"},"nodeType":"YulFunctionCall","src":"2012:12:11"},"nodeType":"YulExpressionStatement","src":"2012:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1976:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2001:5:11"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1983:17:11"},"nodeType":"YulFunctionCall","src":"1983:24:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1973:2:11"},"nodeType":"YulFunctionCall","src":"1973:35:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1966:6:11"},"nodeType":"YulFunctionCall","src":"1966:43:11"},"nodeType":"YulIf","src":"1963:63:11"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1946:5:11","type":""}],"src":"1910:122:11"},{"body":{"nodeType":"YulBlock","src":"2090:87:11","statements":[{"nodeType":"YulAssignment","src":"2100:29:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2122:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2109:12:11"},"nodeType":"YulFunctionCall","src":"2109:20:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2100:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2165:5:11"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2138:26:11"},"nodeType":"YulFunctionCall","src":"2138:33:11"},"nodeType":"YulExpressionStatement","src":"2138:33:11"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2068:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"2076:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2084:5:11","type":""}],"src":"2038:139:11"},{"body":{"nodeType":"YulBlock","src":"2228:32:11","statements":[{"nodeType":"YulAssignment","src":"2238:16:11","value":{"name":"value","nodeType":"YulIdentifier","src":"2249:5:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2238:7:11"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2210:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2220:7:11","type":""}],"src":"2183:77:11"},{"body":{"nodeType":"YulBlock","src":"2309:79:11","statements":[{"body":{"nodeType":"YulBlock","src":"2366:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2375:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2378:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2368:6:11"},"nodeType":"YulFunctionCall","src":"2368:12:11"},"nodeType":"YulExpressionStatement","src":"2368:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2332:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2357:5:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2339:17:11"},"nodeType":"YulFunctionCall","src":"2339:24:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2329:2:11"},"nodeType":"YulFunctionCall","src":"2329:35:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2322:6:11"},"nodeType":"YulFunctionCall","src":"2322:43:11"},"nodeType":"YulIf","src":"2319:63:11"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2302:5:11","type":""}],"src":"2266:122:11"},{"body":{"nodeType":"YulBlock","src":"2446:87:11","statements":[{"nodeType":"YulAssignment","src":"2456:29:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2478:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2465:12:11"},"nodeType":"YulFunctionCall","src":"2465:20:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2456:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2521:5:11"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2494:26:11"},"nodeType":"YulFunctionCall","src":"2494:33:11"},"nodeType":"YulExpressionStatement","src":"2494:33:11"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2424:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"2432:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2440:5:11","type":""}],"src":"2394:139:11"},{"body":{"nodeType":"YulBlock","src":"2622:391:11","statements":[{"body":{"nodeType":"YulBlock","src":"2668:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2670:77:11"},"nodeType":"YulFunctionCall","src":"2670:79:11"},"nodeType":"YulExpressionStatement","src":"2670:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2643:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"2652:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2639:3:11"},"nodeType":"YulFunctionCall","src":"2639:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"2664:2:11","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2635:3:11"},"nodeType":"YulFunctionCall","src":"2635:32:11"},"nodeType":"YulIf","src":"2632:119:11"},{"nodeType":"YulBlock","src":"2761:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"2776:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"2790:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2780:6:11","type":""}]},{"nodeType":"YulAssignment","src":"2805:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2840:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"2851:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2836:3:11"},"nodeType":"YulFunctionCall","src":"2836:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2860:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2815:20:11"},"nodeType":"YulFunctionCall","src":"2815:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2805:6:11"}]}]},{"nodeType":"YulBlock","src":"2888:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"2903:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"2917:2:11","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2907:6:11","type":""}]},{"nodeType":"YulAssignment","src":"2933:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2968:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"2979:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2964:3:11"},"nodeType":"YulFunctionCall","src":"2964:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2988:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2943:20:11"},"nodeType":"YulFunctionCall","src":"2943:53:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2933:6:11"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2584:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2595:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2607:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2615:6:11","type":""}],"src":"2539:474:11"},{"body":{"nodeType":"YulBlock","src":"3061:48:11","statements":[{"nodeType":"YulAssignment","src":"3071:32:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3096:5:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3089:6:11"},"nodeType":"YulFunctionCall","src":"3089:13:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3082:6:11"},"nodeType":"YulFunctionCall","src":"3082:21:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3071:7:11"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3043:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3053:7:11","type":""}],"src":"3019:90:11"},{"body":{"nodeType":"YulBlock","src":"3174:50:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3191:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3211:5:11"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"3196:14:11"},"nodeType":"YulFunctionCall","src":"3196:21:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3184:6:11"},"nodeType":"YulFunctionCall","src":"3184:34:11"},"nodeType":"YulExpressionStatement","src":"3184:34:11"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3162:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3169:3:11","type":""}],"src":"3115:109:11"},{"body":{"nodeType":"YulBlock","src":"3322:118:11","statements":[{"nodeType":"YulAssignment","src":"3332:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3344:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3355:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3340:3:11"},"nodeType":"YulFunctionCall","src":"3340:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3332:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3406:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3419:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3430:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3415:3:11"},"nodeType":"YulFunctionCall","src":"3415:17:11"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"3368:37:11"},"nodeType":"YulFunctionCall","src":"3368:65:11"},"nodeType":"YulExpressionStatement","src":"3368:65:11"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3294:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3306:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3317:4:11","type":""}],"src":"3230:210:11"},{"body":{"nodeType":"YulBlock","src":"3511:53:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3528:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3551:5:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3533:17:11"},"nodeType":"YulFunctionCall","src":"3533:24:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3521:6:11"},"nodeType":"YulFunctionCall","src":"3521:37:11"},"nodeType":"YulExpressionStatement","src":"3521:37:11"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3499:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3506:3:11","type":""}],"src":"3446:118:11"},{"body":{"nodeType":"YulBlock","src":"3668:124:11","statements":[{"nodeType":"YulAssignment","src":"3678:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3690:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3701:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3686:3:11"},"nodeType":"YulFunctionCall","src":"3686:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3678:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3758:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3771:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3782:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3767:3:11"},"nodeType":"YulFunctionCall","src":"3767:17:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"3714:43:11"},"nodeType":"YulFunctionCall","src":"3714:71:11"},"nodeType":"YulExpressionStatement","src":"3714:71:11"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3640:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3652:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3663:4:11","type":""}],"src":"3570:222:11"},{"body":{"nodeType":"YulBlock","src":"3898:519:11","statements":[{"body":{"nodeType":"YulBlock","src":"3944:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3946:77:11"},"nodeType":"YulFunctionCall","src":"3946:79:11"},"nodeType":"YulExpressionStatement","src":"3946:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3919:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"3928:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3915:3:11"},"nodeType":"YulFunctionCall","src":"3915:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"3940:2:11","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3911:3:11"},"nodeType":"YulFunctionCall","src":"3911:32:11"},"nodeType":"YulIf","src":"3908:119:11"},{"nodeType":"YulBlock","src":"4037:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"4052:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"4066:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4056:6:11","type":""}]},{"nodeType":"YulAssignment","src":"4081:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4116:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"4127:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4112:3:11"},"nodeType":"YulFunctionCall","src":"4112:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4136:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4091:20:11"},"nodeType":"YulFunctionCall","src":"4091:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4081:6:11"}]}]},{"nodeType":"YulBlock","src":"4164:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"4179:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"4193:2:11","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4183:6:11","type":""}]},{"nodeType":"YulAssignment","src":"4209:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4244:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"4255:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4240:3:11"},"nodeType":"YulFunctionCall","src":"4240:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4264:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4219:20:11"},"nodeType":"YulFunctionCall","src":"4219:53:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4209:6:11"}]}]},{"nodeType":"YulBlock","src":"4292:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"4307:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"4321:2:11","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4311:6:11","type":""}]},{"nodeType":"YulAssignment","src":"4337:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4372:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"4383:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4368:3:11"},"nodeType":"YulFunctionCall","src":"4368:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4392:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4347:20:11"},"nodeType":"YulFunctionCall","src":"4347:53:11"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4337:6:11"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3852:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3863:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3875:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3883:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3891:6:11","type":""}],"src":"3798:619:11"},{"body":{"nodeType":"YulBlock","src":"4466:43:11","statements":[{"nodeType":"YulAssignment","src":"4476:27:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4491:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"4498:4:11","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4487:3:11"},"nodeType":"YulFunctionCall","src":"4487:16:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4476:7:11"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4448:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4458:7:11","type":""}],"src":"4423:86:11"},{"body":{"nodeType":"YulBlock","src":"4576:51:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4593:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4614:5:11"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"4598:15:11"},"nodeType":"YulFunctionCall","src":"4598:22:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4586:6:11"},"nodeType":"YulFunctionCall","src":"4586:35:11"},"nodeType":"YulExpressionStatement","src":"4586:35:11"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4564:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4571:3:11","type":""}],"src":"4515:112:11"},{"body":{"nodeType":"YulBlock","src":"4727:120:11","statements":[{"nodeType":"YulAssignment","src":"4737:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4749:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4760:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4745:3:11"},"nodeType":"YulFunctionCall","src":"4745:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4737:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4813:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4826:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4837:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4822:3:11"},"nodeType":"YulFunctionCall","src":"4822:17:11"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"4773:39:11"},"nodeType":"YulFunctionCall","src":"4773:67:11"},"nodeType":"YulExpressionStatement","src":"4773:67:11"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4699:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4711:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4722:4:11","type":""}],"src":"4633:214:11"},{"body":{"nodeType":"YulBlock","src":"4919:263:11","statements":[{"body":{"nodeType":"YulBlock","src":"4965:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4967:77:11"},"nodeType":"YulFunctionCall","src":"4967:79:11"},"nodeType":"YulExpressionStatement","src":"4967:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4940:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"4949:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4936:3:11"},"nodeType":"YulFunctionCall","src":"4936:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"4961:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4932:3:11"},"nodeType":"YulFunctionCall","src":"4932:32:11"},"nodeType":"YulIf","src":"4929:119:11"},{"nodeType":"YulBlock","src":"5058:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"5073:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"5087:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5077:6:11","type":""}]},{"nodeType":"YulAssignment","src":"5102:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5137:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"5148:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5133:3:11"},"nodeType":"YulFunctionCall","src":"5133:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5157:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5112:20:11"},"nodeType":"YulFunctionCall","src":"5112:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5102:6:11"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4889:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4900:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4912:6:11","type":""}],"src":"4853:329:11"},{"body":{"nodeType":"YulBlock","src":"5253:53:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5270:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5293:5:11"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"5275:17:11"},"nodeType":"YulFunctionCall","src":"5275:24:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5263:6:11"},"nodeType":"YulFunctionCall","src":"5263:37:11"},"nodeType":"YulExpressionStatement","src":"5263:37:11"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5241:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5248:3:11","type":""}],"src":"5188:118:11"},{"body":{"nodeType":"YulBlock","src":"5410:124:11","statements":[{"nodeType":"YulAssignment","src":"5420:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5432:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"5443:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5428:3:11"},"nodeType":"YulFunctionCall","src":"5428:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5420:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5500:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5513:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"5524:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5509:3:11"},"nodeType":"YulFunctionCall","src":"5509:17:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"5456:43:11"},"nodeType":"YulFunctionCall","src":"5456:71:11"},"nodeType":"YulExpressionStatement","src":"5456:71:11"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5382:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5394:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5405:4:11","type":""}],"src":"5312:222:11"},{"body":{"nodeType":"YulBlock","src":"5623:391:11","statements":[{"body":{"nodeType":"YulBlock","src":"5669:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5671:77:11"},"nodeType":"YulFunctionCall","src":"5671:79:11"},"nodeType":"YulExpressionStatement","src":"5671:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5644:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"5653:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5640:3:11"},"nodeType":"YulFunctionCall","src":"5640:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"5665:2:11","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5636:3:11"},"nodeType":"YulFunctionCall","src":"5636:32:11"},"nodeType":"YulIf","src":"5633:119:11"},{"nodeType":"YulBlock","src":"5762:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"5777:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"5791:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5781:6:11","type":""}]},{"nodeType":"YulAssignment","src":"5806:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5841:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"5852:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5837:3:11"},"nodeType":"YulFunctionCall","src":"5837:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5861:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5816:20:11"},"nodeType":"YulFunctionCall","src":"5816:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5806:6:11"}]}]},{"nodeType":"YulBlock","src":"5889:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"5904:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"5918:2:11","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5908:6:11","type":""}]},{"nodeType":"YulAssignment","src":"5934:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5969:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"5980:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5965:3:11"},"nodeType":"YulFunctionCall","src":"5965:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5989:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5944:20:11"},"nodeType":"YulFunctionCall","src":"5944:53:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5934:6:11"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5585:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5596:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5608:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5616:6:11","type":""}],"src":"5540:474:11"},{"body":{"nodeType":"YulBlock","src":"6048:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6065:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6068:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6058:6:11"},"nodeType":"YulFunctionCall","src":"6058:88:11"},"nodeType":"YulExpressionStatement","src":"6058:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6162:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6165:4:11","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6155:6:11"},"nodeType":"YulFunctionCall","src":"6155:15:11"},"nodeType":"YulExpressionStatement","src":"6155:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6186:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6189:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6179:6:11"},"nodeType":"YulFunctionCall","src":"6179:15:11"},"nodeType":"YulExpressionStatement","src":"6179:15:11"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"6020:180:11"},{"body":{"nodeType":"YulBlock","src":"6257:269:11","statements":[{"nodeType":"YulAssignment","src":"6267:22:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6281:4:11"},{"kind":"number","nodeType":"YulLiteral","src":"6287:1:11","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6277:3:11"},"nodeType":"YulFunctionCall","src":"6277:12:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6267:6:11"}]},{"nodeType":"YulVariableDeclaration","src":"6298:38:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6328:4:11"},{"kind":"number","nodeType":"YulLiteral","src":"6334:1:11","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6324:3:11"},"nodeType":"YulFunctionCall","src":"6324:12:11"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"6302:18:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"6375:51:11","statements":[{"nodeType":"YulAssignment","src":"6389:27:11","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6403:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"6411:4:11","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6399:3:11"},"nodeType":"YulFunctionCall","src":"6399:17:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6389:6:11"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6355:18:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6348:6:11"},"nodeType":"YulFunctionCall","src":"6348:26:11"},"nodeType":"YulIf","src":"6345:81:11"},{"body":{"nodeType":"YulBlock","src":"6478:42:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"6492:16:11"},"nodeType":"YulFunctionCall","src":"6492:18:11"},"nodeType":"YulExpressionStatement","src":"6492:18:11"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6442:18:11"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6465:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"6473:2:11","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6462:2:11"},"nodeType":"YulFunctionCall","src":"6462:14:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6439:2:11"},"nodeType":"YulFunctionCall","src":"6439:38:11"},"nodeType":"YulIf","src":"6436:84:11"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6241:4:11","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"6250:6:11","type":""}],"src":"6206:320:11"},{"body":{"nodeType":"YulBlock","src":"6560:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6577:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6580:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6570:6:11"},"nodeType":"YulFunctionCall","src":"6570:88:11"},"nodeType":"YulExpressionStatement","src":"6570:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6674:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6677:4:11","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6667:6:11"},"nodeType":"YulFunctionCall","src":"6667:15:11"},"nodeType":"YulExpressionStatement","src":"6667:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6698:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6701:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6691:6:11"},"nodeType":"YulFunctionCall","src":"6691:15:11"},"nodeType":"YulExpressionStatement","src":"6691:15:11"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"6532:180:11"},{"body":{"nodeType":"YulBlock","src":"6762:147:11","statements":[{"nodeType":"YulAssignment","src":"6772:25:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6795:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6777:17:11"},"nodeType":"YulFunctionCall","src":"6777:20:11"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"6772:1:11"}]},{"nodeType":"YulAssignment","src":"6806:25:11","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6829:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6811:17:11"},"nodeType":"YulFunctionCall","src":"6811:20:11"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"6806:1:11"}]},{"nodeType":"YulAssignment","src":"6840:16:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6851:1:11"},{"name":"y","nodeType":"YulIdentifier","src":"6854:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6847:3:11"},"nodeType":"YulFunctionCall","src":"6847:9:11"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"6840:3:11"}]},{"body":{"nodeType":"YulBlock","src":"6880:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6882:16:11"},"nodeType":"YulFunctionCall","src":"6882:18:11"},"nodeType":"YulExpressionStatement","src":"6882:18:11"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6872:1:11"},{"name":"sum","nodeType":"YulIdentifier","src":"6875:3:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6869:2:11"},"nodeType":"YulFunctionCall","src":"6869:10:11"},"nodeType":"YulIf","src":"6866:36:11"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6749:1:11","type":""},{"name":"y","nodeType":"YulTypedName","src":"6752:1:11","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"6758:3:11","type":""}],"src":"6718:191:11"},{"body":{"nodeType":"YulBlock","src":"7021:118:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7043:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"7051:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7039:3:11"},"nodeType":"YulFunctionCall","src":"7039:14:11"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"7055:34:11","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7032:6:11"},"nodeType":"YulFunctionCall","src":"7032:58:11"},"nodeType":"YulExpressionStatement","src":"7032:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7111:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"7119:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7107:3:11"},"nodeType":"YulFunctionCall","src":"7107:15:11"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"7124:7:11","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7100:6:11"},"nodeType":"YulFunctionCall","src":"7100:32:11"},"nodeType":"YulExpressionStatement","src":"7100:32:11"}]},"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7013:6:11","type":""}],"src":"6915:224:11"},{"body":{"nodeType":"YulBlock","src":"7291:220:11","statements":[{"nodeType":"YulAssignment","src":"7301:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7367:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"7372:2:11","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7308:58:11"},"nodeType":"YulFunctionCall","src":"7308:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7301:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7473:3:11"}],"functionName":{"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulIdentifier","src":"7384:88:11"},"nodeType":"YulFunctionCall","src":"7384:93:11"},"nodeType":"YulExpressionStatement","src":"7384:93:11"},{"nodeType":"YulAssignment","src":"7486:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7497:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"7502:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7493:3:11"},"nodeType":"YulFunctionCall","src":"7493:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7486:3:11"}]}]},"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7279:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7287:3:11","type":""}],"src":"7145:366:11"},{"body":{"nodeType":"YulBlock","src":"7688:248:11","statements":[{"nodeType":"YulAssignment","src":"7698:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7710:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"7721:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7706:3:11"},"nodeType":"YulFunctionCall","src":"7706:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7698:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7745:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"7756:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7741:3:11"},"nodeType":"YulFunctionCall","src":"7741:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7764:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"7770:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7760:3:11"},"nodeType":"YulFunctionCall","src":"7760:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7734:6:11"},"nodeType":"YulFunctionCall","src":"7734:47:11"},"nodeType":"YulExpressionStatement","src":"7734:47:11"},{"nodeType":"YulAssignment","src":"7790:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7924:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7798:124:11"},"nodeType":"YulFunctionCall","src":"7798:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7790:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7668:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7683:4:11","type":""}],"src":"7517:419:11"},{"body":{"nodeType":"YulBlock","src":"8048:119:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8070:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"8078:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8066:3:11"},"nodeType":"YulFunctionCall","src":"8066:14:11"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"8082:34:11","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8059:6:11"},"nodeType":"YulFunctionCall","src":"8059:58:11"},"nodeType":"YulExpressionStatement","src":"8059:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8138:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"8146:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8134:3:11"},"nodeType":"YulFunctionCall","src":"8134:15:11"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"8151:8:11","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8127:6:11"},"nodeType":"YulFunctionCall","src":"8127:33:11"},"nodeType":"YulExpressionStatement","src":"8127:33:11"}]},"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"8040:6:11","type":""}],"src":"7942:225:11"},{"body":{"nodeType":"YulBlock","src":"8319:220:11","statements":[{"nodeType":"YulAssignment","src":"8329:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8395:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"8400:2:11","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8336:58:11"},"nodeType":"YulFunctionCall","src":"8336:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8329:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8501:3:11"}],"functionName":{"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulIdentifier","src":"8412:88:11"},"nodeType":"YulFunctionCall","src":"8412:93:11"},"nodeType":"YulExpressionStatement","src":"8412:93:11"},{"nodeType":"YulAssignment","src":"8514:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8525:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"8530:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8521:3:11"},"nodeType":"YulFunctionCall","src":"8521:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8514:3:11"}]}]},"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8307:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8315:3:11","type":""}],"src":"8173:366:11"},{"body":{"nodeType":"YulBlock","src":"8716:248:11","statements":[{"nodeType":"YulAssignment","src":"8726:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8738:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"8749:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8734:3:11"},"nodeType":"YulFunctionCall","src":"8734:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8726:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8773:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"8784:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8769:3:11"},"nodeType":"YulFunctionCall","src":"8769:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8792:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"8798:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8788:3:11"},"nodeType":"YulFunctionCall","src":"8788:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8762:6:11"},"nodeType":"YulFunctionCall","src":"8762:47:11"},"nodeType":"YulExpressionStatement","src":"8762:47:11"},{"nodeType":"YulAssignment","src":"8818:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8952:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8826:124:11"},"nodeType":"YulFunctionCall","src":"8826:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8818:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8696:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8711:4:11","type":""}],"src":"8545:419:11"},{"body":{"nodeType":"YulBlock","src":"9076:117:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9098:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"9106:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9094:3:11"},"nodeType":"YulFunctionCall","src":"9094:14:11"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"9110:34:11","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9087:6:11"},"nodeType":"YulFunctionCall","src":"9087:58:11"},"nodeType":"YulExpressionStatement","src":"9087:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9166:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"9174:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9162:3:11"},"nodeType":"YulFunctionCall","src":"9162:15:11"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"9179:6:11","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9155:6:11"},"nodeType":"YulFunctionCall","src":"9155:31:11"},"nodeType":"YulExpressionStatement","src":"9155:31:11"}]},"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"9068:6:11","type":""}],"src":"8970:223:11"},{"body":{"nodeType":"YulBlock","src":"9345:220:11","statements":[{"nodeType":"YulAssignment","src":"9355:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9421:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"9426:2:11","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9362:58:11"},"nodeType":"YulFunctionCall","src":"9362:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9355:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9527:3:11"}],"functionName":{"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulIdentifier","src":"9438:88:11"},"nodeType":"YulFunctionCall","src":"9438:93:11"},"nodeType":"YulExpressionStatement","src":"9438:93:11"},{"nodeType":"YulAssignment","src":"9540:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9551:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"9556:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9547:3:11"},"nodeType":"YulFunctionCall","src":"9547:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9540:3:11"}]}]},"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9333:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9341:3:11","type":""}],"src":"9199:366:11"},{"body":{"nodeType":"YulBlock","src":"9742:248:11","statements":[{"nodeType":"YulAssignment","src":"9752:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9764:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"9775:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9760:3:11"},"nodeType":"YulFunctionCall","src":"9760:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9752:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9799:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"9810:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9795:3:11"},"nodeType":"YulFunctionCall","src":"9795:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9818:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"9824:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9814:3:11"},"nodeType":"YulFunctionCall","src":"9814:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9788:6:11"},"nodeType":"YulFunctionCall","src":"9788:47:11"},"nodeType":"YulExpressionStatement","src":"9788:47:11"},{"nodeType":"YulAssignment","src":"9844:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9978:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9852:124:11"},"nodeType":"YulFunctionCall","src":"9852:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9844:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9722:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9737:4:11","type":""}],"src":"9571:419:11"},{"body":{"nodeType":"YulBlock","src":"10102:115:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10124:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"10132:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10120:3:11"},"nodeType":"YulFunctionCall","src":"10120:14:11"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"10136:34:11","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10113:6:11"},"nodeType":"YulFunctionCall","src":"10113:58:11"},"nodeType":"YulExpressionStatement","src":"10113:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10192:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"10200:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10188:3:11"},"nodeType":"YulFunctionCall","src":"10188:15:11"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"10205:4:11","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10181:6:11"},"nodeType":"YulFunctionCall","src":"10181:29:11"},"nodeType":"YulExpressionStatement","src":"10181:29:11"}]},"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"10094:6:11","type":""}],"src":"9996:221:11"},{"body":{"nodeType":"YulBlock","src":"10369:220:11","statements":[{"nodeType":"YulAssignment","src":"10379:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10445:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"10450:2:11","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10386:58:11"},"nodeType":"YulFunctionCall","src":"10386:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10379:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10551:3:11"}],"functionName":{"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulIdentifier","src":"10462:88:11"},"nodeType":"YulFunctionCall","src":"10462:93:11"},"nodeType":"YulExpressionStatement","src":"10462:93:11"},{"nodeType":"YulAssignment","src":"10564:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10575:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"10580:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10571:3:11"},"nodeType":"YulFunctionCall","src":"10571:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10564:3:11"}]}]},"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10357:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10365:3:11","type":""}],"src":"10223:366:11"},{"body":{"nodeType":"YulBlock","src":"10766:248:11","statements":[{"nodeType":"YulAssignment","src":"10776:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10788:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"10799:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10784:3:11"},"nodeType":"YulFunctionCall","src":"10784:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10776:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10823:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"10834:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10819:3:11"},"nodeType":"YulFunctionCall","src":"10819:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10842:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"10848:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10838:3:11"},"nodeType":"YulFunctionCall","src":"10838:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10812:6:11"},"nodeType":"YulFunctionCall","src":"10812:47:11"},"nodeType":"YulExpressionStatement","src":"10812:47:11"},{"nodeType":"YulAssignment","src":"10868:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11002:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10876:124:11"},"nodeType":"YulFunctionCall","src":"10876:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10868:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10746:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10761:4:11","type":""}],"src":"10595:419:11"},{"body":{"nodeType":"YulBlock","src":"11126:73:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11148:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"11156:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11144:3:11"},"nodeType":"YulFunctionCall","src":"11144:14:11"},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"11160:31:11","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11137:6:11"},"nodeType":"YulFunctionCall","src":"11137:55:11"},"nodeType":"YulExpressionStatement","src":"11137:55:11"}]},"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11118:6:11","type":""}],"src":"11020:179:11"},{"body":{"nodeType":"YulBlock","src":"11351:220:11","statements":[{"nodeType":"YulAssignment","src":"11361:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11427:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"11432:2:11","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11368:58:11"},"nodeType":"YulFunctionCall","src":"11368:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11361:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11533:3:11"}],"functionName":{"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulIdentifier","src":"11444:88:11"},"nodeType":"YulFunctionCall","src":"11444:93:11"},"nodeType":"YulExpressionStatement","src":"11444:93:11"},{"nodeType":"YulAssignment","src":"11546:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11557:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"11562:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11553:3:11"},"nodeType":"YulFunctionCall","src":"11553:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11546:3:11"}]}]},"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11339:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11347:3:11","type":""}],"src":"11205:366:11"},{"body":{"nodeType":"YulBlock","src":"11748:248:11","statements":[{"nodeType":"YulAssignment","src":"11758:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11770:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"11781:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11766:3:11"},"nodeType":"YulFunctionCall","src":"11766:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11758:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11805:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"11816:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11801:3:11"},"nodeType":"YulFunctionCall","src":"11801:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11824:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"11830:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11820:3:11"},"nodeType":"YulFunctionCall","src":"11820:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11794:6:11"},"nodeType":"YulFunctionCall","src":"11794:47:11"},"nodeType":"YulExpressionStatement","src":"11794:47:11"},{"nodeType":"YulAssignment","src":"11850:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11984:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11858:124:11"},"nodeType":"YulFunctionCall","src":"11858:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11850:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11728:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11743:4:11","type":""}],"src":"11577:419:11"},{"body":{"nodeType":"YulBlock","src":"12108:118:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12130:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"12138:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12126:3:11"},"nodeType":"YulFunctionCall","src":"12126:14:11"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"12142:34:11","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12119:6:11"},"nodeType":"YulFunctionCall","src":"12119:58:11"},"nodeType":"YulExpressionStatement","src":"12119:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12198:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"12206:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12194:3:11"},"nodeType":"YulFunctionCall","src":"12194:15:11"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"12211:7:11","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12187:6:11"},"nodeType":"YulFunctionCall","src":"12187:32:11"},"nodeType":"YulExpressionStatement","src":"12187:32:11"}]},"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12100:6:11","type":""}],"src":"12002:224:11"},{"body":{"nodeType":"YulBlock","src":"12378:220:11","statements":[{"nodeType":"YulAssignment","src":"12388:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12454:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"12459:2:11","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12395:58:11"},"nodeType":"YulFunctionCall","src":"12395:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12388:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12560:3:11"}],"functionName":{"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulIdentifier","src":"12471:88:11"},"nodeType":"YulFunctionCall","src":"12471:93:11"},"nodeType":"YulExpressionStatement","src":"12471:93:11"},{"nodeType":"YulAssignment","src":"12573:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12584:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"12589:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12580:3:11"},"nodeType":"YulFunctionCall","src":"12580:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12573:3:11"}]}]},"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12366:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12374:3:11","type":""}],"src":"12232:366:11"},{"body":{"nodeType":"YulBlock","src":"12775:248:11","statements":[{"nodeType":"YulAssignment","src":"12785:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12797:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"12808:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12793:3:11"},"nodeType":"YulFunctionCall","src":"12793:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12785:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12832:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"12843:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12828:3:11"},"nodeType":"YulFunctionCall","src":"12828:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12851:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"12857:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12847:3:11"},"nodeType":"YulFunctionCall","src":"12847:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12821:6:11"},"nodeType":"YulFunctionCall","src":"12821:47:11"},"nodeType":"YulExpressionStatement","src":"12821:47:11"},{"nodeType":"YulAssignment","src":"12877:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13011:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12885:124:11"},"nodeType":"YulFunctionCall","src":"12885:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12877:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12755:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12770:4:11","type":""}],"src":"12604:419:11"},{"body":{"nodeType":"YulBlock","src":"13135:116:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13157:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"13165:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13153:3:11"},"nodeType":"YulFunctionCall","src":"13153:14:11"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"13169:34:11","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13146:6:11"},"nodeType":"YulFunctionCall","src":"13146:58:11"},"nodeType":"YulExpressionStatement","src":"13146:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13225:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"13233:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13221:3:11"},"nodeType":"YulFunctionCall","src":"13221:15:11"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"13238:5:11","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13214:6:11"},"nodeType":"YulFunctionCall","src":"13214:30:11"},"nodeType":"YulExpressionStatement","src":"13214:30:11"}]},"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13127:6:11","type":""}],"src":"13029:222:11"},{"body":{"nodeType":"YulBlock","src":"13403:220:11","statements":[{"nodeType":"YulAssignment","src":"13413:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13479:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"13484:2:11","type":"","value":"35"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13420:58:11"},"nodeType":"YulFunctionCall","src":"13420:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13413:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13585:3:11"}],"functionName":{"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulIdentifier","src":"13496:88:11"},"nodeType":"YulFunctionCall","src":"13496:93:11"},"nodeType":"YulExpressionStatement","src":"13496:93:11"},{"nodeType":"YulAssignment","src":"13598:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13609:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"13614:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13605:3:11"},"nodeType":"YulFunctionCall","src":"13605:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13598:3:11"}]}]},"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13391:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13399:3:11","type":""}],"src":"13257:366:11"},{"body":{"nodeType":"YulBlock","src":"13800:248:11","statements":[{"nodeType":"YulAssignment","src":"13810:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13822:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"13833:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13818:3:11"},"nodeType":"YulFunctionCall","src":"13818:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13810:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13857:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"13868:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13853:3:11"},"nodeType":"YulFunctionCall","src":"13853:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13876:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"13882:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13872:3:11"},"nodeType":"YulFunctionCall","src":"13872:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13846:6:11"},"nodeType":"YulFunctionCall","src":"13846:47:11"},"nodeType":"YulExpressionStatement","src":"13846:47:11"},{"nodeType":"YulAssignment","src":"13902:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14036:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13910:124:11"},"nodeType":"YulFunctionCall","src":"13910:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13902:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13780:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13795:4:11","type":""}],"src":"13629:419:11"},{"body":{"nodeType":"YulBlock","src":"14160:119:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14182:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"14190:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14178:3:11"},"nodeType":"YulFunctionCall","src":"14178:14:11"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062","kind":"string","nodeType":"YulLiteral","src":"14194:34:11","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14171:6:11"},"nodeType":"YulFunctionCall","src":"14171:58:11"},"nodeType":"YulExpressionStatement","src":"14171:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14250:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"14258:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14246:3:11"},"nodeType":"YulFunctionCall","src":"14246:15:11"},{"hexValue":"616c616e6365","kind":"string","nodeType":"YulLiteral","src":"14263:8:11","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14239:6:11"},"nodeType":"YulFunctionCall","src":"14239:33:11"},"nodeType":"YulExpressionStatement","src":"14239:33:11"}]},"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"14152:6:11","type":""}],"src":"14054:225:11"},{"body":{"nodeType":"YulBlock","src":"14431:220:11","statements":[{"nodeType":"YulAssignment","src":"14441:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14507:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"14512:2:11","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14448:58:11"},"nodeType":"YulFunctionCall","src":"14448:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14441:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14613:3:11"}],"functionName":{"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulIdentifier","src":"14524:88:11"},"nodeType":"YulFunctionCall","src":"14524:93:11"},"nodeType":"YulExpressionStatement","src":"14524:93:11"},{"nodeType":"YulAssignment","src":"14626:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14637:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"14642:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14633:3:11"},"nodeType":"YulFunctionCall","src":"14633:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14626:3:11"}]}]},"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14419:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14427:3:11","type":""}],"src":"14285:366:11"},{"body":{"nodeType":"YulBlock","src":"14828:248:11","statements":[{"nodeType":"YulAssignment","src":"14838:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14850:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"14861:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14846:3:11"},"nodeType":"YulFunctionCall","src":"14846:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14838:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14885:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"14896:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14881:3:11"},"nodeType":"YulFunctionCall","src":"14881:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14904:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"14910:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14900:3:11"},"nodeType":"YulFunctionCall","src":"14900:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14874:6:11"},"nodeType":"YulFunctionCall","src":"14874:47:11"},"nodeType":"YulExpressionStatement","src":"14874:47:11"},{"nodeType":"YulAssignment","src":"14930:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15064:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14938:124:11"},"nodeType":"YulFunctionCall","src":"14938:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14930:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14808:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14823:4:11","type":""}],"src":"14657:419:11"},{"body":{"nodeType":"YulBlock","src":"15188:76:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15210:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"15218:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15206:3:11"},"nodeType":"YulFunctionCall","src":"15206:14:11"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"15222:34:11","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15199:6:11"},"nodeType":"YulFunctionCall","src":"15199:58:11"},"nodeType":"YulExpressionStatement","src":"15199:58:11"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"15180:6:11","type":""}],"src":"15082:182:11"},{"body":{"nodeType":"YulBlock","src":"15416:220:11","statements":[{"nodeType":"YulAssignment","src":"15426:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15492:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"15497:2:11","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15433:58:11"},"nodeType":"YulFunctionCall","src":"15433:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15426:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15598:3:11"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulIdentifier","src":"15509:88:11"},"nodeType":"YulFunctionCall","src":"15509:93:11"},"nodeType":"YulExpressionStatement","src":"15509:93:11"},{"nodeType":"YulAssignment","src":"15611:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15622:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"15627:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15618:3:11"},"nodeType":"YulFunctionCall","src":"15618:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15611:3:11"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15404:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15412:3:11","type":""}],"src":"15270:366:11"},{"body":{"nodeType":"YulBlock","src":"15813:248:11","statements":[{"nodeType":"YulAssignment","src":"15823:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15835:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"15846:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15831:3:11"},"nodeType":"YulFunctionCall","src":"15831:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15823:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15870:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"15881:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15866:3:11"},"nodeType":"YulFunctionCall","src":"15866:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15889:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"15895:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15885:3:11"},"nodeType":"YulFunctionCall","src":"15885:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15859:6:11"},"nodeType":"YulFunctionCall","src":"15859:47:11"},"nodeType":"YulExpressionStatement","src":"15859:47:11"},{"nodeType":"YulAssignment","src":"15915:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16049:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15923:124:11"},"nodeType":"YulFunctionCall","src":"15923:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15915:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15793:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15808:4:11","type":""}],"src":"15642:419:11"},{"body":{"nodeType":"YulBlock","src":"16173:75:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16195:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"16203:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16191:3:11"},"nodeType":"YulFunctionCall","src":"16191:14:11"},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"16207:33:11","type":"","value":"ERC20: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16184:6:11"},"nodeType":"YulFunctionCall","src":"16184:57:11"},"nodeType":"YulExpressionStatement","src":"16184:57:11"}]},"name":"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"16165:6:11","type":""}],"src":"16067:181:11"},{"body":{"nodeType":"YulBlock","src":"16400:220:11","statements":[{"nodeType":"YulAssignment","src":"16410:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16476:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"16481:2:11","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16417:58:11"},"nodeType":"YulFunctionCall","src":"16417:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16410:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16582:3:11"}],"functionName":{"name":"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","nodeType":"YulIdentifier","src":"16493:88:11"},"nodeType":"YulFunctionCall","src":"16493:93:11"},"nodeType":"YulExpressionStatement","src":"16493:93:11"},{"nodeType":"YulAssignment","src":"16595:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16606:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"16611:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16602:3:11"},"nodeType":"YulFunctionCall","src":"16602:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16595:3:11"}]}]},"name":"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16388:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16396:3:11","type":""}],"src":"16254:366:11"},{"body":{"nodeType":"YulBlock","src":"16797:248:11","statements":[{"nodeType":"YulAssignment","src":"16807:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16819:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"16830:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16815:3:11"},"nodeType":"YulFunctionCall","src":"16815:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16807:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16854:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"16865:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16850:3:11"},"nodeType":"YulFunctionCall","src":"16850:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16873:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"16879:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16869:3:11"},"nodeType":"YulFunctionCall","src":"16869:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16843:6:11"},"nodeType":"YulFunctionCall","src":"16843:47:11"},"nodeType":"YulExpressionStatement","src":"16843:47:11"},{"nodeType":"YulAssignment","src":"16899:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17033:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16907:124:11"},"nodeType":"YulFunctionCall","src":"16907:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16899:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16777:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16792:4:11","type":""}],"src":"16626:419:11"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: insufficient allowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(memPtr, 32), \"alance\")\n\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: mint to the zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":11,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100f55760003560e01c8063715018a611610097578063a457c2d711610066578063a457c2d714610276578063a9059cbb146102a6578063dd62ed3e146102d6578063f2fde38b14610306576100f5565b8063715018a61461021457806379c650681461021e5780638da5cb5b1461023a57806395d89b4114610258576100f5565b806323b872dd116100d357806323b872dd14610166578063313ce5671461019657806339509351146101b457806370a08231146101e4576100f5565b806306fdde03146100fa578063095ea7b31461011857806318160ddd14610148575b600080fd5b610102610322565b60405161010f9190610f29565b60405180910390f35b610132600480360381019061012d9190610fe4565b6103b4565b60405161013f919061103f565b60405180910390f35b6101506103d7565b60405161015d9190611069565b60405180910390f35b610180600480360381019061017b9190611084565b6103e1565b60405161018d919061103f565b60405180910390f35b61019e610410565b6040516101ab91906110f3565b60405180910390f35b6101ce60048036038101906101c99190610fe4565b610419565b6040516101db919061103f565b60405180910390f35b6101fe60048036038101906101f9919061110e565b610450565b60405161020b9190611069565b60405180910390f35b61021c610498565b005b61023860048036038101906102339190610fe4565b6104ac565b005b6102426104c2565b60405161024f919061114a565b60405180910390f35b6102606104ec565b60405161026d9190610f29565b60405180910390f35b610290600480360381019061028b9190610fe4565b61057e565b60405161029d919061103f565b60405180910390f35b6102c060048036038101906102bb9190610fe4565b6105f5565b6040516102cd919061103f565b60405180910390f35b6102f060048036038101906102eb9190611165565b610618565b6040516102fd9190611069565b60405180910390f35b610320600480360381019061031b919061110e565b61069f565b005b606060038054610331906111d4565b80601f016020809104026020016040519081016040528092919081815260200182805461035d906111d4565b80156103aa5780601f1061037f576101008083540402835291602001916103aa565b820191906000526020600020905b81548152906001019060200180831161038d57829003601f168201915b5050505050905090565b6000806103bf610722565b90506103cc81858561072a565b600191505092915050565b6000600254905090565b6000806103ec610722565b90506103f98582856108f3565b61040485858561097f565b60019150509392505050565b60006012905090565b600080610424610722565b90506104458185856104368589610618565b6104409190611234565b61072a565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6104a0610bf5565b6104aa6000610c73565b565b6104b4610bf5565b6104be8282610d39565b5050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546104fb906111d4565b80601f0160208091040260200160405190810160405280929190818152602001828054610527906111d4565b80156105745780601f1061054957610100808354040283529160200191610574565b820191906000526020600020905b81548152906001019060200180831161055757829003601f168201915b5050505050905090565b600080610589610722565b905060006105978286610618565b9050838110156105dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d3906112da565b60405180910390fd5b6105e9828686840361072a565b60019250505092915050565b600080610600610722565b905061060d81858561097f565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6106a7610bf5565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610716576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070d9061136c565b60405180910390fd5b61071f81610c73565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610799576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610790906113fe565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610808576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ff90611490565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516108e69190611069565b60405180910390a3505050565b60006108ff8484610618565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610979578181101561096b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610962906114fc565b60405180910390fd5b610978848484840361072a565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036109ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109e59061158e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a5d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5490611620565b60405180910390fd5b610a68838383610e8f565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610aee576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae5906116b2565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610bdc9190611069565b60405180910390a3610bef848484610e94565b50505050565b610bfd610722565b73ffffffffffffffffffffffffffffffffffffffff16610c1b6104c2565b73ffffffffffffffffffffffffffffffffffffffff1614610c71576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c689061171e565b60405180910390fd5b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610da8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d9f9061178a565b60405180910390fd5b610db460008383610e8f565b8060026000828254610dc69190611234565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610e779190611069565b60405180910390a3610e8b60008383610e94565b5050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ed3578082015181840152602081019050610eb8565b60008484015250505050565b6000601f19601f8301169050919050565b6000610efb82610e99565b610f058185610ea4565b9350610f15818560208601610eb5565b610f1e81610edf565b840191505092915050565b60006020820190508181036000830152610f438184610ef0565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f7b82610f50565b9050919050565b610f8b81610f70565b8114610f9657600080fd5b50565b600081359050610fa881610f82565b92915050565b6000819050919050565b610fc181610fae565b8114610fcc57600080fd5b50565b600081359050610fde81610fb8565b92915050565b60008060408385031215610ffb57610ffa610f4b565b5b600061100985828601610f99565b925050602061101a85828601610fcf565b9150509250929050565b60008115159050919050565b61103981611024565b82525050565b60006020820190506110546000830184611030565b92915050565b61106381610fae565b82525050565b600060208201905061107e600083018461105a565b92915050565b60008060006060848603121561109d5761109c610f4b565b5b60006110ab86828701610f99565b93505060206110bc86828701610f99565b92505060406110cd86828701610fcf565b9150509250925092565b600060ff82169050919050565b6110ed816110d7565b82525050565b600060208201905061110860008301846110e4565b92915050565b60006020828403121561112457611123610f4b565b5b600061113284828501610f99565b91505092915050565b61114481610f70565b82525050565b600060208201905061115f600083018461113b565b92915050565b6000806040838503121561117c5761117b610f4b565b5b600061118a85828601610f99565b925050602061119b85828601610f99565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806111ec57607f821691505b6020821081036111ff576111fe6111a5565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061123f82610fae565b915061124a83610fae565b925082820190508082111561126257611261611205565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b60006112c4602583610ea4565b91506112cf82611268565b604082019050919050565b600060208201905081810360008301526112f3816112b7565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611356602683610ea4565b9150611361826112fa565b604082019050919050565b6000602082019050818103600083015261138581611349565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b60006113e8602483610ea4565b91506113f38261138c565b604082019050919050565b60006020820190508181036000830152611417816113db565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b600061147a602283610ea4565b91506114858261141e565b604082019050919050565b600060208201905081810360008301526114a98161146d565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b60006114e6601d83610ea4565b91506114f1826114b0565b602082019050919050565b60006020820190508181036000830152611515816114d9565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000611578602583610ea4565b91506115838261151c565b604082019050919050565b600060208201905081810360008301526115a78161156b565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b600061160a602383610ea4565b9150611615826115ae565b604082019050919050565b60006020820190508181036000830152611639816115fd565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b600061169c602683610ea4565b91506116a782611640565b604082019050919050565b600060208201905081810360008301526116cb8161168f565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611708602083610ea4565b9150611713826116d2565b602082019050919050565b60006020820190508181036000830152611737816116fb565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000611774601f83610ea4565b915061177f8261173e565b602082019050919050565b600060208201905081810360008301526117a381611767565b905091905056fea2646970667358221220472c1b395a02033f0daeb6550deafc8268389297245ab39bf93600d39562276464736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2A6 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2D6 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x306 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x79C65068 EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x258 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1E4 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x148 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x102 PUSH2 0x322 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10F SWAP2 SWAP1 PUSH2 0xF29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x132 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12D SWAP2 SWAP1 PUSH2 0xFE4 JUMP JUMPDEST PUSH2 0x3B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x103F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x150 PUSH2 0x3D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15D SWAP2 SWAP1 PUSH2 0x1069 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x180 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17B SWAP2 SWAP1 PUSH2 0x1084 JUMP JUMPDEST PUSH2 0x3E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x103F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19E PUSH2 0x410 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x10F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0xFE4 JUMP JUMPDEST PUSH2 0x419 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x103F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x110E JUMP JUMPDEST PUSH2 0x450 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20B SWAP2 SWAP1 PUSH2 0x1069 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21C PUSH2 0x498 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x238 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x233 SWAP2 SWAP1 PUSH2 0xFE4 JUMP JUMPDEST PUSH2 0x4AC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x242 PUSH2 0x4C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24F SWAP2 SWAP1 PUSH2 0x114A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH2 0x4EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xF29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x290 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28B SWAP2 SWAP1 PUSH2 0xFE4 JUMP JUMPDEST PUSH2 0x57E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29D SWAP2 SWAP1 PUSH2 0x103F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BB SWAP2 SWAP1 PUSH2 0xFE4 JUMP JUMPDEST PUSH2 0x5F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CD SWAP2 SWAP1 PUSH2 0x103F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EB SWAP2 SWAP1 PUSH2 0x1165 JUMP JUMPDEST PUSH2 0x618 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FD SWAP2 SWAP1 PUSH2 0x1069 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x320 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31B SWAP2 SWAP1 PUSH2 0x110E JUMP JUMPDEST PUSH2 0x69F JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x331 SWAP1 PUSH2 0x11D4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x35D SWAP1 PUSH2 0x11D4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3AA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x37F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3AA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x38D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3BF PUSH2 0x722 JUMP JUMPDEST SWAP1 POP PUSH2 0x3CC DUP2 DUP6 DUP6 PUSH2 0x72A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3EC PUSH2 0x722 JUMP JUMPDEST SWAP1 POP PUSH2 0x3F9 DUP6 DUP3 DUP6 PUSH2 0x8F3 JUMP JUMPDEST PUSH2 0x404 DUP6 DUP6 DUP6 PUSH2 0x97F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x424 PUSH2 0x722 JUMP JUMPDEST SWAP1 POP PUSH2 0x445 DUP2 DUP6 DUP6 PUSH2 0x436 DUP6 DUP10 PUSH2 0x618 JUMP JUMPDEST PUSH2 0x440 SWAP2 SWAP1 PUSH2 0x1234 JUMP JUMPDEST PUSH2 0x72A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4A0 PUSH2 0xBF5 JUMP JUMPDEST PUSH2 0x4AA PUSH1 0x0 PUSH2 0xC73 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x4B4 PUSH2 0xBF5 JUMP JUMPDEST PUSH2 0x4BE DUP3 DUP3 PUSH2 0xD39 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x4FB SWAP1 PUSH2 0x11D4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x527 SWAP1 PUSH2 0x11D4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x574 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x549 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x574 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x557 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x589 PUSH2 0x722 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x597 DUP3 DUP7 PUSH2 0x618 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x5DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D3 SWAP1 PUSH2 0x12DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5E9 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x72A JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x600 PUSH2 0x722 JUMP JUMPDEST SWAP1 POP PUSH2 0x60D DUP2 DUP6 DUP6 PUSH2 0x97F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6A7 PUSH2 0xBF5 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x716 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x70D SWAP1 PUSH2 0x136C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x71F DUP2 PUSH2 0xC73 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x799 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x790 SWAP1 PUSH2 0x13FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x808 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7FF SWAP1 PUSH2 0x1490 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x8E6 SWAP2 SWAP1 PUSH2 0x1069 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8FF DUP5 DUP5 PUSH2 0x618 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x979 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x96B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x962 SWAP1 PUSH2 0x14FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x978 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x72A JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9EE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E5 SWAP1 PUSH2 0x158E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA5D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA54 SWAP1 PUSH2 0x1620 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA68 DUP4 DUP4 DUP4 PUSH2 0xE8F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xAEE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE5 SWAP1 PUSH2 0x16B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xBDC SWAP2 SWAP1 PUSH2 0x1069 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xBEF DUP5 DUP5 DUP5 PUSH2 0xE94 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xBFD PUSH2 0x722 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC1B PUSH2 0x4C2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC71 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC68 SWAP1 PUSH2 0x171E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDA8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD9F SWAP1 PUSH2 0x178A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDB4 PUSH1 0x0 DUP4 DUP4 PUSH2 0xE8F JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xDC6 SWAP2 SWAP1 PUSH2 0x1234 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xE77 SWAP2 SWAP1 PUSH2 0x1069 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xE8B PUSH1 0x0 DUP4 DUP4 PUSH2 0xE94 JUMP JUMPDEST POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xED3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xEB8 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEFB DUP3 PUSH2 0xE99 JUMP JUMPDEST PUSH2 0xF05 DUP2 DUP6 PUSH2 0xEA4 JUMP JUMPDEST SWAP4 POP PUSH2 0xF15 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xEB5 JUMP JUMPDEST PUSH2 0xF1E DUP2 PUSH2 0xEDF JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF43 DUP2 DUP5 PUSH2 0xEF0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF7B DUP3 PUSH2 0xF50 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF8B DUP2 PUSH2 0xF70 JUMP JUMPDEST DUP2 EQ PUSH2 0xF96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xFA8 DUP2 PUSH2 0xF82 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFC1 DUP2 PUSH2 0xFAE JUMP JUMPDEST DUP2 EQ PUSH2 0xFCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xFDE DUP2 PUSH2 0xFB8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFFB JUMPI PUSH2 0xFFA PUSH2 0xF4B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1009 DUP6 DUP3 DUP7 ADD PUSH2 0xF99 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x101A DUP6 DUP3 DUP7 ADD PUSH2 0xFCF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1039 DUP2 PUSH2 0x1024 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1054 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1030 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1063 DUP2 PUSH2 0xFAE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x107E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x105A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x109D JUMPI PUSH2 0x109C PUSH2 0xF4B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x10AB DUP7 DUP3 DUP8 ADD PUSH2 0xF99 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x10BC DUP7 DUP3 DUP8 ADD PUSH2 0xF99 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x10CD DUP7 DUP3 DUP8 ADD PUSH2 0xFCF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10ED DUP2 PUSH2 0x10D7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1108 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x10E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1124 JUMPI PUSH2 0x1123 PUSH2 0xF4B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1132 DUP5 DUP3 DUP6 ADD PUSH2 0xF99 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1144 DUP2 PUSH2 0xF70 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x115F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x113B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x117C JUMPI PUSH2 0x117B PUSH2 0xF4B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x118A DUP6 DUP3 DUP7 ADD PUSH2 0xF99 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x119B DUP6 DUP3 DUP7 ADD PUSH2 0xF99 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x11EC JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x11FF JUMPI PUSH2 0x11FE PUSH2 0x11A5 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x123F DUP3 PUSH2 0xFAE JUMP JUMPDEST SWAP2 POP PUSH2 0x124A DUP4 PUSH2 0xFAE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1262 JUMPI PUSH2 0x1261 PUSH2 0x1205 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12C4 PUSH1 0x25 DUP4 PUSH2 0xEA4 JUMP JUMPDEST SWAP2 POP PUSH2 0x12CF DUP3 PUSH2 0x1268 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x12F3 DUP2 PUSH2 0x12B7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1356 PUSH1 0x26 DUP4 PUSH2 0xEA4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1361 DUP3 PUSH2 0x12FA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1385 DUP2 PUSH2 0x1349 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13E8 PUSH1 0x24 DUP4 PUSH2 0xEA4 JUMP JUMPDEST SWAP2 POP PUSH2 0x13F3 DUP3 PUSH2 0x138C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1417 DUP2 PUSH2 0x13DB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x147A PUSH1 0x22 DUP4 PUSH2 0xEA4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1485 DUP3 PUSH2 0x141E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x14A9 DUP2 PUSH2 0x146D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14E6 PUSH1 0x1D DUP4 PUSH2 0xEA4 JUMP JUMPDEST SWAP2 POP PUSH2 0x14F1 DUP3 PUSH2 0x14B0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1515 DUP2 PUSH2 0x14D9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1578 PUSH1 0x25 DUP4 PUSH2 0xEA4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1583 DUP3 PUSH2 0x151C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15A7 DUP2 PUSH2 0x156B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x160A PUSH1 0x23 DUP4 PUSH2 0xEA4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1615 DUP3 PUSH2 0x15AE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1639 DUP2 PUSH2 0x15FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x169C PUSH1 0x26 DUP4 PUSH2 0xEA4 JUMP JUMPDEST SWAP2 POP PUSH2 0x16A7 DUP3 PUSH2 0x1640 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x16CB DUP2 PUSH2 0x168F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1708 PUSH1 0x20 DUP4 PUSH2 0xEA4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1713 DUP3 PUSH2 0x16D2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1737 DUP2 PUSH2 0x16FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1774 PUSH1 0x1F DUP4 PUSH2 0xEA4 JUMP JUMPDEST SWAP2 POP PUSH2 0x177F DUP3 PUSH2 0x173E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x17A3 DUP2 PUSH2 0x1767 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE 0x2C SHL CODECOPY GAS MUL SUB EXTCODEHASH 0xD 0xAE 0xB6 SSTORE 0xD 0xEA 0xFC DUP3 PUSH9 0x389297245AB39BF936 STOP 0xD3 SWAP6 PUSH3 0x276464 PUSH20 0x6F6C634300081200330000000000000000000000 ","sourceMap":"171:246:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4444:197;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3255:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5203:256;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3104:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5854:234;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3419:125;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1824:101:0;;;:::i;:::-;;316:98:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1201:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2369:102:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6575:427;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3740:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3987:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2074:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2158:98:2;2212:13;2244:5;2237:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;:::o;4444:197::-;4527:4;4543:13;4559:12;:10;:12::i;:::-;4543:28;;4581:32;4590:5;4597:7;4606:6;4581:8;:32::i;:::-;4630:4;4623:11;;;4444:197;;;;:::o;3255:106::-;3316:7;3342:12;;3335:19;;3255:106;:::o;5203:256::-;5300:4;5316:15;5334:12;:10;:12::i;:::-;5316:30;;5356:38;5372:4;5378:7;5387:6;5356:15;:38::i;:::-;5404:27;5414:4;5420:2;5424:6;5404:9;:27::i;:::-;5448:4;5441:11;;;5203:256;;;;;:::o;3104:91::-;3162:5;3186:2;3179:9;;3104:91;:::o;5854:234::-;5942:4;5958:13;5974:12;:10;:12::i;:::-;5958:28;;5996:64;6005:5;6012:7;6049:10;6021:25;6031:5;6038:7;6021:9;:25::i;:::-;:38;;;;:::i;:::-;5996:8;:64::i;:::-;6077:4;6070:11;;;5854:234;;;;:::o;3419:125::-;3493:7;3519:9;:18;3529:7;3519:18;;;;;;;;;;;;;;;;3512:25;;3419:125;;;:::o;1824:101:0:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;316:98:9:-;1094:13:0;:11;:13::i;:::-;389:17:9::1;395:2;399:6;389:5;:17::i;:::-;316:98:::0;;:::o;1201:85:0:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;2369:102:2:-;2425:13;2457:7;2450:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2369:102;:::o;6575:427::-;6668:4;6684:13;6700:12;:10;:12::i;:::-;6684:28;;6722:24;6749:25;6759:5;6766:7;6749:9;:25::i;:::-;6722:52;;6812:15;6792:16;:35;;6784:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;6903:60;6912:5;6919:7;6947:15;6928:16;:34;6903:8;:60::i;:::-;6991:4;6984:11;;;;6575:427;;;;:::o;3740:189::-;3819:4;3835:13;3851:12;:10;:12::i;:::-;3835:28;;3873;3883:5;3890:2;3894:6;3873:9;:28::i;:::-;3918:4;3911:11;;;3740:189;;;;:::o;3987:149::-;4076:7;4102:11;:18;4114:5;4102:18;;;;;;;;;;;;;;;:27;4121:7;4102:27;;;;;;;;;;;;;;;;4095:34;;3987:149;;;;:::o;2074:198:0:-;1094:13;:11;:13::i;:::-;2182:1:::1;2162:22;;:8;:22;;::::0;2154:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;640:96:8:-;693:7;719:10;712:17;;640:96;:::o;10457:340:2:-;10575:1;10558:19;;:5;:19;;;10550:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10655:1;10636:21;;:7;:21;;;10628:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10737:6;10707:11;:18;10719:5;10707:18;;;;;;;;;;;;;;;:27;10726:7;10707:27;;;;;;;;;;;;;;;:36;;;;10774:7;10758:32;;10767:5;10758:32;;;10783:6;10758:32;;;;;;:::i;:::-;;;;;;;;10457:340;;;:::o;11078:411::-;11178:24;11205:25;11215:5;11222:7;11205:9;:25::i;:::-;11178:52;;11264:17;11244:16;:37;11240:243;;11325:6;11305:16;:26;;11297:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11407:51;11416:5;11423:7;11451:6;11432:16;:25;11407:8;:51::i;:::-;11240:243;11168:321;11078:411;;;:::o;7456:788::-;7568:1;7552:18;;:4;:18;;;7544:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7644:1;7630:16;;:2;:16;;;7622:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;7697:38;7718:4;7724:2;7728:6;7697:20;:38::i;:::-;7746:19;7768:9;:15;7778:4;7768:15;;;;;;;;;;;;;;;;7746:37;;7816:6;7801:11;:21;;7793:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;7931:6;7917:11;:20;7899:9;:15;7909:4;7899:15;;;;;;;;;;;;;;;:38;;;;8131:6;8114:9;:13;8124:2;8114:13;;;;;;;;;;;;;;;;:23;;;;;;;;;;;8178:2;8163:26;;8172:4;8163:26;;;8182:6;8163:26;;;;;;:::i;:::-;;;;;;;;8200:37;8220:4;8226:2;8230:6;8200:19;:37::i;:::-;7534:710;7456:788;;;:::o;1359:130:0:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2426:187::-;2499:16;2518:6;;;;;;;;;;;2499:25;;2543:8;2534:6;;:17;;;;;;;;;;;;;;;;;;2597:8;2566:40;;2587:8;2566:40;;;;;;;;;;;;2489:124;2426:187;:::o;8520:535:2:-;8622:1;8603:21;;:7;:21;;;8595:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;8671:49;8700:1;8704:7;8713:6;8671:20;:49::i;:::-;8747:6;8731:12;;:22;;;;;;;:::i;:::-;;;;;;;;8921:6;8899:9;:18;8909:7;8899:18;;;;;;;;;;;;;;;;:28;;;;;;;;;;;8973:7;8952:37;;8969:1;8952:37;;;8982:6;8952:37;;;;;;:::i;:::-;;;;;;;;9000:48;9028:1;9032:7;9041:6;9000:19;:48::i;:::-;8520:535;;:::o;12073:91::-;;;;:::o;12752:90::-;;;;:::o;7:99:11:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:329::-;4912:6;4961:2;4949:9;4940:7;4936:23;4932:32;4929:119;;;4967:79;;:::i;:::-;4929:119;5087:1;5112:53;5157:7;5148:6;5137:9;5133:22;5112:53;:::i;:::-;5102:63;;5058:117;4853:329;;;;:::o;5188:118::-;5275:24;5293:5;5275:24;:::i;:::-;5270:3;5263:37;5188:118;;:::o;5312:222::-;5405:4;5443:2;5432:9;5428:18;5420:26;;5456:71;5524:1;5513:9;5509:17;5500:6;5456:71;:::i;:::-;5312:222;;;;:::o;5540:474::-;5608:6;5616;5665:2;5653:9;5644:7;5640:23;5636:32;5633:119;;;5671:79;;:::i;:::-;5633:119;5791:1;5816:53;5861:7;5852:6;5841:9;5837:22;5816:53;:::i;:::-;5806:63;;5762:117;5918:2;5944:53;5989:7;5980:6;5969:9;5965:22;5944:53;:::i;:::-;5934:63;;5889:118;5540:474;;;;;:::o;6020:180::-;6068:77;6065:1;6058:88;6165:4;6162:1;6155:15;6189:4;6186:1;6179:15;6206:320;6250:6;6287:1;6281:4;6277:12;6267:22;;6334:1;6328:4;6324:12;6355:18;6345:81;;6411:4;6403:6;6399:17;6389:27;;6345:81;6473:2;6465:6;6462:14;6442:18;6439:38;6436:84;;6492:18;;:::i;:::-;6436:84;6257:269;6206:320;;;:::o;6532:180::-;6580:77;6577:1;6570:88;6677:4;6674:1;6667:15;6701:4;6698:1;6691:15;6718:191;6758:3;6777:20;6795:1;6777:20;:::i;:::-;6772:25;;6811:20;6829:1;6811:20;:::i;:::-;6806:25;;6854:1;6851;6847:9;6840:16;;6875:3;6872:1;6869:10;6866:36;;;6882:18;;:::i;:::-;6866:36;6718:191;;;;:::o;6915:224::-;7055:34;7051:1;7043:6;7039:14;7032:58;7124:7;7119:2;7111:6;7107:15;7100:32;6915:224;:::o;7145:366::-;7287:3;7308:67;7372:2;7367:3;7308:67;:::i;:::-;7301:74;;7384:93;7473:3;7384:93;:::i;:::-;7502:2;7497:3;7493:12;7486:19;;7145:366;;;:::o;7517:419::-;7683:4;7721:2;7710:9;7706:18;7698:26;;7770:9;7764:4;7760:20;7756:1;7745:9;7741:17;7734:47;7798:131;7924:4;7798:131;:::i;:::-;7790:139;;7517:419;;;:::o;7942:225::-;8082:34;8078:1;8070:6;8066:14;8059:58;8151:8;8146:2;8138:6;8134:15;8127:33;7942:225;:::o;8173:366::-;8315:3;8336:67;8400:2;8395:3;8336:67;:::i;:::-;8329:74;;8412:93;8501:3;8412:93;:::i;:::-;8530:2;8525:3;8521:12;8514:19;;8173:366;;;:::o;8545:419::-;8711:4;8749:2;8738:9;8734:18;8726:26;;8798:9;8792:4;8788:20;8784:1;8773:9;8769:17;8762:47;8826:131;8952:4;8826:131;:::i;:::-;8818:139;;8545:419;;;:::o;8970:223::-;9110:34;9106:1;9098:6;9094:14;9087:58;9179:6;9174:2;9166:6;9162:15;9155:31;8970:223;:::o;9199:366::-;9341:3;9362:67;9426:2;9421:3;9362:67;:::i;:::-;9355:74;;9438:93;9527:3;9438:93;:::i;:::-;9556:2;9551:3;9547:12;9540:19;;9199:366;;;:::o;9571:419::-;9737:4;9775:2;9764:9;9760:18;9752:26;;9824:9;9818:4;9814:20;9810:1;9799:9;9795:17;9788:47;9852:131;9978:4;9852:131;:::i;:::-;9844:139;;9571:419;;;:::o;9996:221::-;10136:34;10132:1;10124:6;10120:14;10113:58;10205:4;10200:2;10192:6;10188:15;10181:29;9996:221;:::o;10223:366::-;10365:3;10386:67;10450:2;10445:3;10386:67;:::i;:::-;10379:74;;10462:93;10551:3;10462:93;:::i;:::-;10580:2;10575:3;10571:12;10564:19;;10223:366;;;:::o;10595:419::-;10761:4;10799:2;10788:9;10784:18;10776:26;;10848:9;10842:4;10838:20;10834:1;10823:9;10819:17;10812:47;10876:131;11002:4;10876:131;:::i;:::-;10868:139;;10595:419;;;:::o;11020:179::-;11160:31;11156:1;11148:6;11144:14;11137:55;11020:179;:::o;11205:366::-;11347:3;11368:67;11432:2;11427:3;11368:67;:::i;:::-;11361:74;;11444:93;11533:3;11444:93;:::i;:::-;11562:2;11557:3;11553:12;11546:19;;11205:366;;;:::o;11577:419::-;11743:4;11781:2;11770:9;11766:18;11758:26;;11830:9;11824:4;11820:20;11816:1;11805:9;11801:17;11794:47;11858:131;11984:4;11858:131;:::i;:::-;11850:139;;11577:419;;;:::o;12002:224::-;12142:34;12138:1;12130:6;12126:14;12119:58;12211:7;12206:2;12198:6;12194:15;12187:32;12002:224;:::o;12232:366::-;12374:3;12395:67;12459:2;12454:3;12395:67;:::i;:::-;12388:74;;12471:93;12560:3;12471:93;:::i;:::-;12589:2;12584:3;12580:12;12573:19;;12232:366;;;:::o;12604:419::-;12770:4;12808:2;12797:9;12793:18;12785:26;;12857:9;12851:4;12847:20;12843:1;12832:9;12828:17;12821:47;12885:131;13011:4;12885:131;:::i;:::-;12877:139;;12604:419;;;:::o;13029:222::-;13169:34;13165:1;13157:6;13153:14;13146:58;13238:5;13233:2;13225:6;13221:15;13214:30;13029:222;:::o;13257:366::-;13399:3;13420:67;13484:2;13479:3;13420:67;:::i;:::-;13413:74;;13496:93;13585:3;13496:93;:::i;:::-;13614:2;13609:3;13605:12;13598:19;;13257:366;;;:::o;13629:419::-;13795:4;13833:2;13822:9;13818:18;13810:26;;13882:9;13876:4;13872:20;13868:1;13857:9;13853:17;13846:47;13910:131;14036:4;13910:131;:::i;:::-;13902:139;;13629:419;;;:::o;14054:225::-;14194:34;14190:1;14182:6;14178:14;14171:58;14263:8;14258:2;14250:6;14246:15;14239:33;14054:225;:::o;14285:366::-;14427:3;14448:67;14512:2;14507:3;14448:67;:::i;:::-;14441:74;;14524:93;14613:3;14524:93;:::i;:::-;14642:2;14637:3;14633:12;14626:19;;14285:366;;;:::o;14657:419::-;14823:4;14861:2;14850:9;14846:18;14838:26;;14910:9;14904:4;14900:20;14896:1;14885:9;14881:17;14874:47;14938:131;15064:4;14938:131;:::i;:::-;14930:139;;14657:419;;;:::o;15082:182::-;15222:34;15218:1;15210:6;15206:14;15199:58;15082:182;:::o;15270:366::-;15412:3;15433:67;15497:2;15492:3;15433:67;:::i;:::-;15426:74;;15509:93;15598:3;15509:93;:::i;:::-;15627:2;15622:3;15618:12;15611:19;;15270:366;;;:::o;15642:419::-;15808:4;15846:2;15835:9;15831:18;15823:26;;15895:9;15889:4;15885:20;15881:1;15870:9;15866:17;15859:47;15923:131;16049:4;15923:131;:::i;:::-;15915:139;;15642:419;;;:::o;16067:181::-;16207:33;16203:1;16195:6;16191:14;16184:57;16067:181;:::o;16254:366::-;16396:3;16417:67;16481:2;16476:3;16417:67;:::i;:::-;16410:74;;16493:93;16582:3;16493:93;:::i;:::-;16611:2;16606:3;16602:12;16595:19;;16254:366;;;:::o;16626:419::-;16792:4;16830:2;16819:9;16815:18;16807:26;;16879:9;16873:4;16869:20;16865:1;16854:9;16850:17;16843:47;16907:131;17033:4;16907:131;:::i;:::-;16899:139;;16626:419;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"1222400","executionCost":"infinite","totalCost":"infinite"},"external":{"allowance(address,address)":"infinite","approve(address,uint256)":"infinite","balanceOf(address)":"2930","decimals()":"388","decreaseAllowance(address,uint256)":"infinite","increaseAllowance(address,uint256)":"infinite","mintToken(address,uint256)":"infinite","name()":"infinite","owner()":"2589","renounceOwnership()":"30421","symbol()":"infinite","totalSupply()":"2505","transfer(address,uint256)":"infinite","transferFrom(address,address,uint256)":"infinite","transferOwnership(address)":"30832"}},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","mintToken(address,uint256)":"79c65068","name()":"06fdde03","owner()":"8da5cb5b","renounceOwnership()":"715018a6","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mintToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Prime.sol\":\"Prime\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(address from, address to, uint256 amount) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n}\\n\",\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/Prime.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.9;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\ncontract Prime is ERC20,Ownable  {\\r\\n    constructor(uint amount) ERC20(\\\"MyToken\\\", \\\"MTK\\\") {\\r\\n        _mint(msg.sender, amount);\\r\\n    }\\r\\n    \\r\\n    function mintToken(address to,uint amount) external onlyOwner {\\r\\n        _mint(to, amount);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x6672e1308cec96b46595fc89b70879447528b86995f6ca7d55d5f92537935f57\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":193,"contract":"contracts/Prime.sol:Prime","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":199,"contract":"contracts/Prime.sol:Prime","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":201,"contract":"contracts/Prime.sol:Prime","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":203,"contract":"contracts/Prime.sol:Prime","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":205,"contract":"contracts/Prime.sol:Prime","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"},{"astId":7,"contract":"contracts/Prime.sol:Prime","label":"_owner","offset":0,"slot":"5","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/Staking_Contract.sol":{"Stacking":{"abi":[{"inputs":[{"internalType":"uint256","name":"_timeToDouble","type":"uint256"},{"internalType":"uint256","name":"_poolLength","type":"uint256"},{"internalType":"uint256","name":"_firstPoolStartIn","type":"uint256"},{"internalType":"address","name":"_prime","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"ClaimedUpToPool","type":"error"},{"inputs":[],"name":"Insuffient_balance","type":"error"},{"inputs":[],"name":"InvalidPool","type":"error"},{"inputs":[],"name":"NothingStaked","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":false,"internalType":"uint256","name":"newAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newWeightAmount","type":"uint256"}],"name":"StakeDetails","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"from","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Unstaked","type":"event"},{"inputs":[],"name":"_contractWeight","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"_userWeightAtPool","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_to","type":"address"}],"name":"claim","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"},{"internalType":"uint256","name":"_poolId","type":"uint256"}],"name":"claimAmountForPool","outputs":[{"internalType":"uint256","name":"claimable_","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"claimLeftOff","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"contractWeight","outputs":[{"internalType":"uint256","name":"contractWeight_","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_poolId","type":"uint256"}],"name":"contractWeightAtPool","outputs":[{"internalType":"uint256","name":"contractWeight_","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"currentPool","outputs":[{"internalType":"uint256","name":"volume","type":"uint256"},{"internalType":"uint256","name":"totalClaimed","type":"uint256"},{"internalType":"uint256","name":"startTime","type":"uint256"},{"internalType":"uint256","name":"endTime","type":"uint256"},{"internalType":"uint256","name":"weightAtEnd","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"lastInteraction","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mintToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pendingRewards","outputs":[{"internalType":"uint256","name":"pendingRewards_","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"poolDetails","outputs":[{"internalType":"uint256","name":"volume","type":"uint256"},{"internalType":"uint256","name":"totalClaimed","type":"uint256"},{"internalType":"uint256","name":"startTime","type":"uint256"},{"internalType":"uint256","name":"endTime","type":"uint256"},{"internalType":"uint256","name":"weightAtEnd","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"poolId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"poolLeftOff","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"poolLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"prime","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"stak","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"stakeDetails","outputs":[{"internalType":"uint256","name":"amountStaked","type":"uint256"},{"internalType":"uint256","name":"lastInteraction","type":"uint256"},{"internalType":"uint256","name":"weightAtLastInteraction","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"timeToDouble","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalStaked","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unclaimedRewards","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_to","type":"address"}],"name":"unstake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"userClaimedPool","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"}],"name":"userTotalWeight","outputs":[{"internalType":"uint256","name":"userWeight_","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"},{"internalType":"uint256","name":"_poolId","type":"uint256"}],"name":"userWeightAtPool","outputs":[{"internalType":"uint256","name":"userWeight_","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"Returns the token balance of the specified account.","params":{"account":"The account to retrieve the balance for."},"returns":{"_0":"The token balance of the account."}},"claim(address)":{"details":"Claims the pending rewards for the caller.","params":{"_to":"The address to send the claimed rewards to."}},"claimAmountForPool(address,uint256)":{"details":"Calculates the claimable rewards for a specific pool and user.","params":{"_poolId":"The ID of the pool.","_user":"The user's address."},"returns":{"claimable_":"The amount of rewards claimable by the user in the specified pool."}},"constructor":{"details":"Constructor function.","params":{"_firstPoolStartIn":"Time until the first pool starts","_poolLength":"Total number of pools","_prime":"Address of the prime contract","_timeToDouble":"Time period for doubling stake weight"}},"contractWeight()":{"details":"Retrieves the current contract's weight.","returns":{"contractWeight_":"The current contract's weight."}},"contractWeightAtPool(uint256)":{"details":"Retrieves the contract's weight at a specific pool.","params":{"_poolId":"The ID of the pool."},"returns":{"contractWeight_":"The contract's weight at the specified pool."}},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"mintToken(address,uint256)":{"details":"Mints new tokens and assigns them to the specified account.","params":{"account":"The account to mint tokens for.","amount":"The amount of tokens to mint."}},"name()":{"details":"Returns the name of the token."},"pendingRewards()":{"details":"Retrieves the pending rewards that haven't been claimed yet.","returns":{"pendingRewards_":"The amount of pending rewards."}},"stak(uint256)":{"details":"Stakes a specified amount of tokens.","params":{"amount":"The amount of tokens to stake."}},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"Transfers tokens from the sender's account to the specified account.","params":{"amount":"The amount of tokens to transfer.","to":"The account to transfer tokens to."},"returns":{"_0":"True if the transfer is successful, false otherwise."}},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."},"unstake(address)":{"details":"Unstakes the tokens currently staked by the caller.","params":{"_to":"The address to send the unstaked tokens to."}},"userTotalWeight(address)":{"details":"Retrieves the total weight of a user.","params":{"_user":"The user's address."},"returns":{"userWeight_":"The total weight of the user."}},"userWeightAtPool(address,uint256)":{"details":"Returns the weight of the specified user at the specified pool.","params":{"_poolId":"The pool ID.","_user":"The user address."},"returns":{"userWeight_":"The weight of the user at the pool."}}},"title":"Stacking Contract","version":1},"evm":{"bytecode":{"functionDebugData":{"@_131":{"entryPoint":null,"id":131,"parameterSlots":0,"returnSlots":0},"@_1843":{"entryPoint":null,"id":1843,"parameterSlots":4,"returnSlots":0},"@_222":{"entryPoint":null,"id":222,"parameterSlots":2,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":527,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":426,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_uint256t_uint256t_address_fromMemory":{"entryPoint":550,"id":null,"parameterSlots":2,"returnSlots":4},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":822,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":664,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":1566,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1133,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":481,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":449,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":390,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":1094,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":968,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1288,"id":null,"parameterSlots":2,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":843,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":769,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1258,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":958,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1226,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":1519,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":722,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":675,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":1008,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":385,"id":null,"parameterSlots":0,"returnSlots":0},"shift_left_dynamic":{"entryPoint":859,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1213,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":1066,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":872,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":1018,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":501,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":400,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":1061,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:7555:11","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:11","statements":[{"nodeType":"YulAssignment","src":"57:19:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:11","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:11"},"nodeType":"YulFunctionCall","src":"67:9:11"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:11"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:11","type":""}],"src":"7:75:11"},{"body":{"nodeType":"YulBlock","src":"177:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:11"},"nodeType":"YulFunctionCall","src":"187:12:11"},"nodeType":"YulExpressionStatement","src":"187:12:11"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:11"},{"body":{"nodeType":"YulBlock","src":"300:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:11"},"nodeType":"YulFunctionCall","src":"310:12:11"},"nodeType":"YulExpressionStatement","src":"310:12:11"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:11"},{"body":{"nodeType":"YulBlock","src":"379:32:11","statements":[{"nodeType":"YulAssignment","src":"389:16:11","value":{"name":"value","nodeType":"YulIdentifier","src":"400:5:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:11"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:11","type":""}],"src":"334:77:11"},{"body":{"nodeType":"YulBlock","src":"460:79:11","statements":[{"body":{"nodeType":"YulBlock","src":"517:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"526:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"529:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"519:6:11"},"nodeType":"YulFunctionCall","src":"519:12:11"},"nodeType":"YulExpressionStatement","src":"519:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"483:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"508:5:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"490:17:11"},"nodeType":"YulFunctionCall","src":"490:24:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"480:2:11"},"nodeType":"YulFunctionCall","src":"480:35:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"473:6:11"},"nodeType":"YulFunctionCall","src":"473:43:11"},"nodeType":"YulIf","src":"470:63:11"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"453:5:11","type":""}],"src":"417:122:11"},{"body":{"nodeType":"YulBlock","src":"608:80:11","statements":[{"nodeType":"YulAssignment","src":"618:22:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"633:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"627:5:11"},"nodeType":"YulFunctionCall","src":"627:13:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"618:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:11"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"649:26:11"},"nodeType":"YulFunctionCall","src":"649:33:11"},"nodeType":"YulExpressionStatement","src":"649:33:11"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"586:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"594:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"602:5:11","type":""}],"src":"545:143:11"},{"body":{"nodeType":"YulBlock","src":"739:81:11","statements":[{"nodeType":"YulAssignment","src":"749:65:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"764:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"771:42:11","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"760:3:11"},"nodeType":"YulFunctionCall","src":"760:54:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"749:7:11"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"721:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"731:7:11","type":""}],"src":"694:126:11"},{"body":{"nodeType":"YulBlock","src":"871:51:11","statements":[{"nodeType":"YulAssignment","src":"881:35:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"910:5:11"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"892:17:11"},"nodeType":"YulFunctionCall","src":"892:24:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"881:7:11"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"853:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"863:7:11","type":""}],"src":"826:96:11"},{"body":{"nodeType":"YulBlock","src":"971:79:11","statements":[{"body":{"nodeType":"YulBlock","src":"1028:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1037:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1040:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1030:6:11"},"nodeType":"YulFunctionCall","src":"1030:12:11"},"nodeType":"YulExpressionStatement","src":"1030:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"994:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1019:5:11"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1001:17:11"},"nodeType":"YulFunctionCall","src":"1001:24:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"991:2:11"},"nodeType":"YulFunctionCall","src":"991:35:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"984:6:11"},"nodeType":"YulFunctionCall","src":"984:43:11"},"nodeType":"YulIf","src":"981:63:11"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"964:5:11","type":""}],"src":"928:122:11"},{"body":{"nodeType":"YulBlock","src":"1119:80:11","statements":[{"nodeType":"YulAssignment","src":"1129:22:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1144:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1138:5:11"},"nodeType":"YulFunctionCall","src":"1138:13:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1129:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1187:5:11"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"1160:26:11"},"nodeType":"YulFunctionCall","src":"1160:33:11"},"nodeType":"YulExpressionStatement","src":"1160:33:11"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1097:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"1105:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1113:5:11","type":""}],"src":"1056:143:11"},{"body":{"nodeType":"YulBlock","src":"1333:692:11","statements":[{"body":{"nodeType":"YulBlock","src":"1380:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1382:77:11"},"nodeType":"YulFunctionCall","src":"1382:79:11"},"nodeType":"YulExpressionStatement","src":"1382:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1354:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"1363:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1350:3:11"},"nodeType":"YulFunctionCall","src":"1350:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"1375:3:11","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1346:3:11"},"nodeType":"YulFunctionCall","src":"1346:33:11"},"nodeType":"YulIf","src":"1343:120:11"},{"nodeType":"YulBlock","src":"1473:128:11","statements":[{"nodeType":"YulVariableDeclaration","src":"1488:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"1502:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1492:6:11","type":""}]},{"nodeType":"YulAssignment","src":"1517:74:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1563:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"1574:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1559:3:11"},"nodeType":"YulFunctionCall","src":"1559:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1583:7:11"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"1527:31:11"},"nodeType":"YulFunctionCall","src":"1527:64:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1517:6:11"}]}]},{"nodeType":"YulBlock","src":"1611:129:11","statements":[{"nodeType":"YulVariableDeclaration","src":"1626:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"1640:2:11","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1630:6:11","type":""}]},{"nodeType":"YulAssignment","src":"1656:74:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1702:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"1713:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1698:3:11"},"nodeType":"YulFunctionCall","src":"1698:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1722:7:11"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"1666:31:11"},"nodeType":"YulFunctionCall","src":"1666:64:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1656:6:11"}]}]},{"nodeType":"YulBlock","src":"1750:129:11","statements":[{"nodeType":"YulVariableDeclaration","src":"1765:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"1779:2:11","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1769:6:11","type":""}]},{"nodeType":"YulAssignment","src":"1795:74:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1841:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"1852:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1837:3:11"},"nodeType":"YulFunctionCall","src":"1837:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1861:7:11"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"1805:31:11"},"nodeType":"YulFunctionCall","src":"1805:64:11"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1795:6:11"}]}]},{"nodeType":"YulBlock","src":"1889:129:11","statements":[{"nodeType":"YulVariableDeclaration","src":"1904:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"1918:2:11","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1908:6:11","type":""}]},{"nodeType":"YulAssignment","src":"1934:74:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1980:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"1991:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1976:3:11"},"nodeType":"YulFunctionCall","src":"1976:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2000:7:11"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1944:31:11"},"nodeType":"YulFunctionCall","src":"1944:64:11"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"1934:6:11"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_uint256t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1279:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1290:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1302:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1310:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1318:6:11","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1326:6:11","type":""}],"src":"1205:820:11"},{"body":{"nodeType":"YulBlock","src":"2090:40:11","statements":[{"nodeType":"YulAssignment","src":"2101:22:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2117:5:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2111:5:11"},"nodeType":"YulFunctionCall","src":"2111:12:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2101:6:11"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2073:5:11","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2083:6:11","type":""}],"src":"2031:99:11"},{"body":{"nodeType":"YulBlock","src":"2164:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2181:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2184:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2174:6:11"},"nodeType":"YulFunctionCall","src":"2174:88:11"},"nodeType":"YulExpressionStatement","src":"2174:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2278:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2281:4:11","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2271:6:11"},"nodeType":"YulFunctionCall","src":"2271:15:11"},"nodeType":"YulExpressionStatement","src":"2271:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2302:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2305:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2295:6:11"},"nodeType":"YulFunctionCall","src":"2295:15:11"},"nodeType":"YulExpressionStatement","src":"2295:15:11"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"2136:180:11"},{"body":{"nodeType":"YulBlock","src":"2350:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2367:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2370:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2360:6:11"},"nodeType":"YulFunctionCall","src":"2360:88:11"},"nodeType":"YulExpressionStatement","src":"2360:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2464:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2467:4:11","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2457:6:11"},"nodeType":"YulFunctionCall","src":"2457:15:11"},"nodeType":"YulExpressionStatement","src":"2457:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2488:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2491:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2481:6:11"},"nodeType":"YulFunctionCall","src":"2481:15:11"},"nodeType":"YulExpressionStatement","src":"2481:15:11"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"2322:180:11"},{"body":{"nodeType":"YulBlock","src":"2559:269:11","statements":[{"nodeType":"YulAssignment","src":"2569:22:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2583:4:11"},{"kind":"number","nodeType":"YulLiteral","src":"2589:1:11","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2579:3:11"},"nodeType":"YulFunctionCall","src":"2579:12:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2569:6:11"}]},{"nodeType":"YulVariableDeclaration","src":"2600:38:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2630:4:11"},{"kind":"number","nodeType":"YulLiteral","src":"2636:1:11","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2626:3:11"},"nodeType":"YulFunctionCall","src":"2626:12:11"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"2604:18:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"2677:51:11","statements":[{"nodeType":"YulAssignment","src":"2691:27:11","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2705:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"2713:4:11","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2701:3:11"},"nodeType":"YulFunctionCall","src":"2701:17:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2691:6:11"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2657:18:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2650:6:11"},"nodeType":"YulFunctionCall","src":"2650:26:11"},"nodeType":"YulIf","src":"2647:81:11"},{"body":{"nodeType":"YulBlock","src":"2780:42:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"2794:16:11"},"nodeType":"YulFunctionCall","src":"2794:18:11"},"nodeType":"YulExpressionStatement","src":"2794:18:11"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2744:18:11"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2767:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"2775:2:11","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2764:2:11"},"nodeType":"YulFunctionCall","src":"2764:14:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2741:2:11"},"nodeType":"YulFunctionCall","src":"2741:38:11"},"nodeType":"YulIf","src":"2738:84:11"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2543:4:11","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2552:6:11","type":""}],"src":"2508:320:11"},{"body":{"nodeType":"YulBlock","src":"2888:87:11","statements":[{"nodeType":"YulAssignment","src":"2898:11:11","value":{"name":"ptr","nodeType":"YulIdentifier","src":"2906:3:11"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"2898:4:11"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2926:1:11","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"2929:3:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2919:6:11"},"nodeType":"YulFunctionCall","src":"2919:14:11"},"nodeType":"YulExpressionStatement","src":"2919:14:11"},{"nodeType":"YulAssignment","src":"2942:26:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2960:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2963:4:11","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2950:9:11"},"nodeType":"YulFunctionCall","src":"2950:18:11"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"2942:4:11"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"2875:3:11","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"2883:4:11","type":""}],"src":"2834:141:11"},{"body":{"nodeType":"YulBlock","src":"3025:49:11","statements":[{"nodeType":"YulAssignment","src":"3035:33:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3053:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"3060:2:11","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3049:3:11"},"nodeType":"YulFunctionCall","src":"3049:14:11"},{"kind":"number","nodeType":"YulLiteral","src":"3065:2:11","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3045:3:11"},"nodeType":"YulFunctionCall","src":"3045:23:11"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3035:6:11"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3008:5:11","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"3018:6:11","type":""}],"src":"2981:93:11"},{"body":{"nodeType":"YulBlock","src":"3133:54:11","statements":[{"nodeType":"YulAssignment","src":"3143:37:11","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"3168:4:11"},{"name":"value","nodeType":"YulIdentifier","src":"3174:5:11"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3164:3:11"},"nodeType":"YulFunctionCall","src":"3164:16:11"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"3143:8:11"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"3108:4:11","type":""},{"name":"value","nodeType":"YulTypedName","src":"3114:5:11","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"3124:8:11","type":""}],"src":"3080:107:11"},{"body":{"nodeType":"YulBlock","src":"3269:317:11","statements":[{"nodeType":"YulVariableDeclaration","src":"3279:35:11","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"3300:10:11"},{"kind":"number","nodeType":"YulLiteral","src":"3312:1:11","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3296:3:11"},"nodeType":"YulFunctionCall","src":"3296:18:11"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"3283:9:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3323:109:11","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"3354:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3365:66:11","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"3335:18:11"},"nodeType":"YulFunctionCall","src":"3335:97:11"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"3327:4:11","type":""}]},{"nodeType":"YulAssignment","src":"3441:51:11","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"3472:9:11"},{"name":"toInsert","nodeType":"YulIdentifier","src":"3483:8:11"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"3453:18:11"},"nodeType":"YulFunctionCall","src":"3453:39:11"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"3441:8:11"}]},{"nodeType":"YulAssignment","src":"3501:30:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3514:5:11"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"3525:4:11"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3521:3:11"},"nodeType":"YulFunctionCall","src":"3521:9:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3510:3:11"},"nodeType":"YulFunctionCall","src":"3510:21:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3501:5:11"}]},{"nodeType":"YulAssignment","src":"3540:40:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3553:5:11"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"3564:8:11"},{"name":"mask","nodeType":"YulIdentifier","src":"3574:4:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3560:3:11"},"nodeType":"YulFunctionCall","src":"3560:19:11"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3550:2:11"},"nodeType":"YulFunctionCall","src":"3550:30:11"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3540:6:11"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3230:5:11","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"3237:10:11","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"3249:8:11","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"3262:6:11","type":""}],"src":"3193:393:11"},{"body":{"nodeType":"YulBlock","src":"3624:28:11","statements":[{"nodeType":"YulAssignment","src":"3634:12:11","value":{"name":"value","nodeType":"YulIdentifier","src":"3641:5:11"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"3634:3:11"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3610:5:11","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"3620:3:11","type":""}],"src":"3592:60:11"},{"body":{"nodeType":"YulBlock","src":"3718:82:11","statements":[{"nodeType":"YulAssignment","src":"3728:66:11","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3786:5:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3768:17:11"},"nodeType":"YulFunctionCall","src":"3768:24:11"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"3759:8:11"},"nodeType":"YulFunctionCall","src":"3759:34:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3741:17:11"},"nodeType":"YulFunctionCall","src":"3741:53:11"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"3728:9:11"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3698:5:11","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"3708:9:11","type":""}],"src":"3658:142:11"},{"body":{"nodeType":"YulBlock","src":"3853:28:11","statements":[{"nodeType":"YulAssignment","src":"3863:12:11","value":{"name":"value","nodeType":"YulIdentifier","src":"3870:5:11"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"3863:3:11"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3839:5:11","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"3849:3:11","type":""}],"src":"3806:75:11"},{"body":{"nodeType":"YulBlock","src":"3963:193:11","statements":[{"nodeType":"YulVariableDeclaration","src":"3973:63:11","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"4028:7:11"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"3997:30:11"},"nodeType":"YulFunctionCall","src":"3997:39:11"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"3977:16:11","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4052:4:11"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4092:4:11"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"4086:5:11"},"nodeType":"YulFunctionCall","src":"4086:11:11"},{"name":"offset","nodeType":"YulIdentifier","src":"4099:6:11"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"4131:16:11"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"4107:23:11"},"nodeType":"YulFunctionCall","src":"4107:41:11"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"4058:27:11"},"nodeType":"YulFunctionCall","src":"4058:91:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4045:6:11"},"nodeType":"YulFunctionCall","src":"4045:105:11"},"nodeType":"YulExpressionStatement","src":"4045:105:11"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"3940:4:11","type":""},{"name":"offset","nodeType":"YulTypedName","src":"3946:6:11","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"3954:7:11","type":""}],"src":"3887:269:11"},{"body":{"nodeType":"YulBlock","src":"4211:24:11","statements":[{"nodeType":"YulAssignment","src":"4221:8:11","value":{"kind":"number","nodeType":"YulLiteral","src":"4228:1:11","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"4221:3:11"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"4207:3:11","type":""}],"src":"4162:73:11"},{"body":{"nodeType":"YulBlock","src":"4294:136:11","statements":[{"nodeType":"YulVariableDeclaration","src":"4304:46:11","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"4318:30:11"},"nodeType":"YulFunctionCall","src":"4318:32:11"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"4308:6:11","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4403:4:11"},{"name":"offset","nodeType":"YulIdentifier","src":"4409:6:11"},{"name":"zero_0","nodeType":"YulIdentifier","src":"4417:6:11"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"4359:43:11"},"nodeType":"YulFunctionCall","src":"4359:65:11"},"nodeType":"YulExpressionStatement","src":"4359:65:11"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"4280:4:11","type":""},{"name":"offset","nodeType":"YulTypedName","src":"4286:6:11","type":""}],"src":"4241:189:11"},{"body":{"nodeType":"YulBlock","src":"4486:136:11","statements":[{"body":{"nodeType":"YulBlock","src":"4553:63:11","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"4597:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"4604:1:11","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"4567:29:11"},"nodeType":"YulFunctionCall","src":"4567:39:11"},"nodeType":"YulExpressionStatement","src":"4567:39:11"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"4506:5:11"},{"name":"end","nodeType":"YulIdentifier","src":"4513:3:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4503:2:11"},"nodeType":"YulFunctionCall","src":"4503:14:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4518:26:11","statements":[{"nodeType":"YulAssignment","src":"4520:22:11","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"4533:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"4540:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4529:3:11"},"nodeType":"YulFunctionCall","src":"4529:13:11"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"4520:5:11"}]}]},"pre":{"nodeType":"YulBlock","src":"4500:2:11","statements":[]},"src":"4496:120:11"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"4474:5:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"4481:3:11","type":""}],"src":"4436:186:11"},{"body":{"nodeType":"YulBlock","src":"4707:464:11","statements":[{"body":{"nodeType":"YulBlock","src":"4733:431:11","statements":[{"nodeType":"YulVariableDeclaration","src":"4747:54:11","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"4795:5:11"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"4763:31:11"},"nodeType":"YulFunctionCall","src":"4763:38:11"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"4751:8:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4814:63:11","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"4837:8:11"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"4865:10:11"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"4847:17:11"},"nodeType":"YulFunctionCall","src":"4847:29:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4833:3:11"},"nodeType":"YulFunctionCall","src":"4833:44:11"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"4818:11:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"5034:27:11","statements":[{"nodeType":"YulAssignment","src":"5036:23:11","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"5051:8:11"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"5036:11:11"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"5018:10:11"},{"kind":"number","nodeType":"YulLiteral","src":"5030:2:11","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5015:2:11"},"nodeType":"YulFunctionCall","src":"5015:18:11"},"nodeType":"YulIf","src":"5012:49:11"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"5103:11:11"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"5120:8:11"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"5148:3:11"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"5130:17:11"},"nodeType":"YulFunctionCall","src":"5130:22:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5116:3:11"},"nodeType":"YulFunctionCall","src":"5116:37:11"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"5074:28:11"},"nodeType":"YulFunctionCall","src":"5074:80:11"},"nodeType":"YulExpressionStatement","src":"5074:80:11"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"4724:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"4729:2:11","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4721:2:11"},"nodeType":"YulFunctionCall","src":"4721:11:11"},"nodeType":"YulIf","src":"4718:446:11"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"4683:5:11","type":""},{"name":"len","nodeType":"YulTypedName","src":"4690:3:11","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"4695:10:11","type":""}],"src":"4628:543:11"},{"body":{"nodeType":"YulBlock","src":"5240:54:11","statements":[{"nodeType":"YulAssignment","src":"5250:37:11","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"5275:4:11"},{"name":"value","nodeType":"YulIdentifier","src":"5281:5:11"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"5271:3:11"},"nodeType":"YulFunctionCall","src":"5271:16:11"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"5250:8:11"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"5215:4:11","type":""},{"name":"value","nodeType":"YulTypedName","src":"5221:5:11","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"5231:8:11","type":""}],"src":"5177:117:11"},{"body":{"nodeType":"YulBlock","src":"5351:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"5361:68:11","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5410:1:11","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"5413:5:11"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5406:3:11"},"nodeType":"YulFunctionCall","src":"5406:13:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5425:1:11","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5421:3:11"},"nodeType":"YulFunctionCall","src":"5421:6:11"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"5377:28:11"},"nodeType":"YulFunctionCall","src":"5377:51:11"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5373:3:11"},"nodeType":"YulFunctionCall","src":"5373:56:11"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"5365:4:11","type":""}]},{"nodeType":"YulAssignment","src":"5438:25:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5452:4:11"},{"name":"mask","nodeType":"YulIdentifier","src":"5458:4:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5448:3:11"},"nodeType":"YulFunctionCall","src":"5448:15:11"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"5438:6:11"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"5328:4:11","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"5334:5:11","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"5344:6:11","type":""}],"src":"5300:169:11"},{"body":{"nodeType":"YulBlock","src":"5555:214:11","statements":[{"nodeType":"YulAssignment","src":"5688:37:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5715:4:11"},{"name":"len","nodeType":"YulIdentifier","src":"5721:3:11"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"5696:18:11"},"nodeType":"YulFunctionCall","src":"5696:29:11"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"5688:4:11"}]},{"nodeType":"YulAssignment","src":"5734:29:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5745:4:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5755:1:11","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"5758:3:11"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5751:3:11"},"nodeType":"YulFunctionCall","src":"5751:11:11"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5742:2:11"},"nodeType":"YulFunctionCall","src":"5742:21:11"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"5734:4:11"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"5536:4:11","type":""},{"name":"len","nodeType":"YulTypedName","src":"5542:3:11","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"5550:4:11","type":""}],"src":"5474:295:11"},{"body":{"nodeType":"YulBlock","src":"5866:1303:11","statements":[{"nodeType":"YulVariableDeclaration","src":"5877:51:11","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5924:3:11"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"5891:32:11"},"nodeType":"YulFunctionCall","src":"5891:37:11"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"5881:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"6013:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"6015:16:11"},"nodeType":"YulFunctionCall","src":"6015:18:11"},"nodeType":"YulExpressionStatement","src":"6015:18:11"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"5985:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"5993:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5982:2:11"},"nodeType":"YulFunctionCall","src":"5982:30:11"},"nodeType":"YulIf","src":"5979:56:11"},{"nodeType":"YulVariableDeclaration","src":"6045:52:11","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6091:4:11"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"6085:5:11"},"nodeType":"YulFunctionCall","src":"6085:11:11"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"6059:25:11"},"nodeType":"YulFunctionCall","src":"6059:38:11"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"6049:6:11","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6190:4:11"},{"name":"oldLen","nodeType":"YulIdentifier","src":"6196:6:11"},{"name":"newLen","nodeType":"YulIdentifier","src":"6204:6:11"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"6144:45:11"},"nodeType":"YulFunctionCall","src":"6144:67:11"},"nodeType":"YulExpressionStatement","src":"6144:67:11"},{"nodeType":"YulVariableDeclaration","src":"6221:18:11","value":{"kind":"number","nodeType":"YulLiteral","src":"6238:1:11","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"6225:9:11","type":""}]},{"nodeType":"YulAssignment","src":"6249:17:11","value":{"kind":"number","nodeType":"YulLiteral","src":"6262:4:11","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"6249:9:11"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"6313:611:11","statements":[{"nodeType":"YulVariableDeclaration","src":"6327:37:11","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"6346:6:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6358:4:11","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6354:3:11"},"nodeType":"YulFunctionCall","src":"6354:9:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6342:3:11"},"nodeType":"YulFunctionCall","src":"6342:22:11"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"6331:7:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6378:51:11","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6424:4:11"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"6392:31:11"},"nodeType":"YulFunctionCall","src":"6392:37:11"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"6382:6:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6442:10:11","value":{"kind":"number","nodeType":"YulLiteral","src":"6451:1:11","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"6446:1:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"6510:163:11","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"6535:6:11"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6553:3:11"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"6558:9:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6549:3:11"},"nodeType":"YulFunctionCall","src":"6549:19:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6543:5:11"},"nodeType":"YulFunctionCall","src":"6543:26:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6528:6:11"},"nodeType":"YulFunctionCall","src":"6528:42:11"},"nodeType":"YulExpressionStatement","src":"6528:42:11"},{"nodeType":"YulAssignment","src":"6587:24:11","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"6601:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"6609:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6597:3:11"},"nodeType":"YulFunctionCall","src":"6597:14:11"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"6587:6:11"}]},{"nodeType":"YulAssignment","src":"6628:31:11","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"6645:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"6656:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6641:3:11"},"nodeType":"YulFunctionCall","src":"6641:18:11"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"6628:9:11"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6476:1:11"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"6479:7:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6473:2:11"},"nodeType":"YulFunctionCall","src":"6473:14:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6488:21:11","statements":[{"nodeType":"YulAssignment","src":"6490:17:11","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6499:1:11"},{"kind":"number","nodeType":"YulLiteral","src":"6502:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6495:3:11"},"nodeType":"YulFunctionCall","src":"6495:12:11"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"6490:1:11"}]}]},"pre":{"nodeType":"YulBlock","src":"6469:3:11","statements":[]},"src":"6465:208:11"},{"body":{"nodeType":"YulBlock","src":"6709:156:11","statements":[{"nodeType":"YulVariableDeclaration","src":"6727:43:11","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6754:3:11"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"6759:9:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6750:3:11"},"nodeType":"YulFunctionCall","src":"6750:19:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6744:5:11"},"nodeType":"YulFunctionCall","src":"6744:26:11"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"6731:9:11","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"6794:6:11"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"6821:9:11"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"6836:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"6844:4:11","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6832:3:11"},"nodeType":"YulFunctionCall","src":"6832:17:11"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"6802:18:11"},"nodeType":"YulFunctionCall","src":"6802:48:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6787:6:11"},"nodeType":"YulFunctionCall","src":"6787:64:11"},"nodeType":"YulExpressionStatement","src":"6787:64:11"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"6692:7:11"},{"name":"newLen","nodeType":"YulIdentifier","src":"6701:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6689:2:11"},"nodeType":"YulFunctionCall","src":"6689:19:11"},"nodeType":"YulIf","src":"6686:179:11"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6885:4:11"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"6899:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"6907:1:11","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6895:3:11"},"nodeType":"YulFunctionCall","src":"6895:14:11"},{"kind":"number","nodeType":"YulLiteral","src":"6911:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6891:3:11"},"nodeType":"YulFunctionCall","src":"6891:22:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6878:6:11"},"nodeType":"YulFunctionCall","src":"6878:36:11"},"nodeType":"YulExpressionStatement","src":"6878:36:11"}]},"nodeType":"YulCase","src":"6306:618:11","value":{"kind":"number","nodeType":"YulLiteral","src":"6311:1:11","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"6941:222:11","statements":[{"nodeType":"YulVariableDeclaration","src":"6955:14:11","value":{"kind":"number","nodeType":"YulLiteral","src":"6968:1:11","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"6959:5:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"6992:67:11","statements":[{"nodeType":"YulAssignment","src":"7010:35:11","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7029:3:11"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"7034:9:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7025:3:11"},"nodeType":"YulFunctionCall","src":"7025:19:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7019:5:11"},"nodeType":"YulFunctionCall","src":"7019:26:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"7010:5:11"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"6985:6:11"},"nodeType":"YulIf","src":"6982:77:11"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7079:4:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7138:5:11"},{"name":"newLen","nodeType":"YulIdentifier","src":"7145:6:11"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"7085:52:11"},"nodeType":"YulFunctionCall","src":"7085:67:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"7072:6:11"},"nodeType":"YulFunctionCall","src":"7072:81:11"},"nodeType":"YulExpressionStatement","src":"7072:81:11"}]},"nodeType":"YulCase","src":"6933:230:11","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"6286:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"6294:2:11","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6283:2:11"},"nodeType":"YulFunctionCall","src":"6283:14:11"},"nodeType":"YulSwitch","src":"6276:887:11"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5855:4:11","type":""},{"name":"src","nodeType":"YulTypedName","src":"5861:3:11","type":""}],"src":"5774:1395:11"},{"body":{"nodeType":"YulBlock","src":"7203:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7220:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7223:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7213:6:11"},"nodeType":"YulFunctionCall","src":"7213:88:11"},"nodeType":"YulExpressionStatement","src":"7213:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7317:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7320:4:11","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7310:6:11"},"nodeType":"YulFunctionCall","src":"7310:15:11"},"nodeType":"YulExpressionStatement","src":"7310:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7341:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7344:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7334:6:11"},"nodeType":"YulFunctionCall","src":"7334:15:11"},"nodeType":"YulExpressionStatement","src":"7334:15:11"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"7175:180:11"},{"body":{"nodeType":"YulBlock","src":"7405:147:11","statements":[{"nodeType":"YulAssignment","src":"7415:25:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7438:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7420:17:11"},"nodeType":"YulFunctionCall","src":"7420:20:11"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"7415:1:11"}]},{"nodeType":"YulAssignment","src":"7449:25:11","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"7472:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7454:17:11"},"nodeType":"YulFunctionCall","src":"7454:20:11"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"7449:1:11"}]},{"nodeType":"YulAssignment","src":"7483:16:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7494:1:11"},{"name":"y","nodeType":"YulIdentifier","src":"7497:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7490:3:11"},"nodeType":"YulFunctionCall","src":"7490:9:11"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"7483:3:11"}]},{"body":{"nodeType":"YulBlock","src":"7523:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"7525:16:11"},"nodeType":"YulFunctionCall","src":"7525:18:11"},"nodeType":"YulExpressionStatement","src":"7525:18:11"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7515:1:11"},{"name":"sum","nodeType":"YulIdentifier","src":"7518:3:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7512:2:11"},"nodeType":"YulFunctionCall","src":"7512:10:11"},"nodeType":"YulIf","src":"7509:36:11"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"7392:1:11","type":""},{"name":"y","nodeType":"YulTypedName","src":"7395:1:11","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"7401:3:11","type":""}],"src":"7361:191:11"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n","id":11,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60a06040523480156200001157600080fd5b5060405162003b7638038062003b76833981810160405281019062000037919062000226565b6040518060400160405280600781526020017f4d59546f6b656e000000000000000000000000000000000000000000000000008152506040518060400160405280600281526020017f4d540000000000000000000000000000000000000000000000000000000000008152508160039081620000b4919062000508565b508060049081620000c6919062000508565b50505060016005819055508073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508360088190555082600c8190555081426200012191906200061e565b60106003018190555081426200013891906200061e565b6018600080815260200190815260200160002060030181905550426010600201819055504260186000808152602001908152602001600020600201819055505050505062000659565b600080fd5b6000819050919050565b6200019b8162000186565b8114620001a757600080fd5b50565b600081519050620001bb8162000190565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001ee82620001c1565b9050919050565b6200020081620001e1565b81146200020c57600080fd5b50565b6000815190506200022081620001f5565b92915050565b6000806000806080858703121562000243576200024262000181565b5b60006200025387828801620001aa565b94505060206200026687828801620001aa565b93505060406200027987828801620001aa565b92505060606200028c878288016200020f565b91505092959194509250565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200031a57607f821691505b60208210810362000330576200032f620002d2565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200039a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200035b565b620003a686836200035b565b95508019841693508086168417925050509392505050565b6000819050919050565b6000620003e9620003e3620003dd8462000186565b620003be565b62000186565b9050919050565b6000819050919050565b6200040583620003c8565b6200041d6200041482620003f0565b84845462000368565b825550505050565b600090565b6200043462000425565b62000441818484620003fa565b505050565b5b8181101562000469576200045d6000826200042a565b60018101905062000447565b5050565b601f821115620004b857620004828162000336565b6200048d846200034b565b810160208510156200049d578190505b620004b5620004ac856200034b565b83018262000446565b50505b505050565b600082821c905092915050565b6000620004dd60001984600802620004bd565b1980831691505092915050565b6000620004f88383620004ca565b9150826002028217905092915050565b620005138262000298565b67ffffffffffffffff8111156200052f576200052e620002a3565b5b6200053b825462000301565b620005488282856200046d565b600060209050601f8311600181146200058057600084156200056b578287015190505b620005778582620004ea565b865550620005e7565b601f198416620005908662000336565b60005b82811015620005ba5784890151825560018201915060208501945060208101905062000593565b86831015620005da5784890151620005d6601f891682620004ca565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006200062b8262000186565b9150620006388362000186565b9250828201905080821115620006535762000652620005ef565b5b92915050565b6080516134ec6200068a60003960008181610c970152818161127a0152818161165701526122b401526134ec6000f3fe608060405234801561001057600080fd5b506004361061021c5760003560e01c8063796d3fae11610125578063c7ee005e116100ad578063eded3fda1161007c578063eded3fda146106e5578063ee5508f914610703578063f2888dbb14610721578063f85f91b41461073d578063fa2a9da91461075b5761021c565b8063c7ee005e14610637578063d429a5ea14610655578063dd62ed3e14610685578063ea905cdf146106b55761021c565b80638f71a265116100f45780638f71a2651461057f57806395d89b411461059d578063a07b10d6146105bb578063a457c2d7146105d7578063a9059cbb146106075761021c565b8063796d3fae146104e157806379c65068146105115780637a260b3f1461052d578063817b1cd2146105615761021c565b80632a745dd0116101a857806357b4702f1161017757806357b4702f1461041157806365c65c1e1461042f578063675cdd631461045f578063692b69ae1461048f57806370a08231146104b15761021c565b80632a745dd014610387578063313ce567146103a557806339509351146103c35780633e0dc34e146103f35761021c565b806315fad854116101ef57806315fad854146102bd57806318160ddd146102ed57806319beb2491461030b5780631e83409a1461033b57806323b872dd146103575761021c565b806306fdde0314610221578063081e3eda1461023f578063095ea7b31461025d578063096397611461028d575b600080fd5b61022961078d565b6040516102369190612817565b60405180910390f35b61024761081f565b6040516102549190612852565b60405180910390f35b610277600480360381019061027291906128fc565b610825565b6040516102849190612957565b60405180910390f35b6102a760048036038101906102a29190612972565b610848565b6040516102b49190612852565b60405180910390f35b6102d760048036038101906102d2919061299f565b610860565b6040516102e49190612852565b60405180910390f35b6102f56108bb565b6040516103029190612852565b60405180910390f35b61032560048036038101906103209190612972565b6108c5565b6040516103329190612852565b60405180910390f35b61035560048036038101906103509190612972565b610962565b005b610371600480360381019061036c91906129cc565b610ce8565b60405161037e9190612957565b60405180910390f35b61038f610d17565b60405161039c9190612852565b60405180910390f35b6103ad610d3f565b6040516103ba9190612a3b565b60405180910390f35b6103dd60048036038101906103d891906128fc565b610d48565b6040516103ea9190612957565b60405180910390f35b6103fb610d7f565b6040516104089190612852565b60405180910390f35b610419610d85565b6040516104269190612852565b60405180910390f35b61044960048036038101906104449190612972565b610d8b565b6040516104569190612852565b60405180910390f35b610479600480360381019061047491906128fc565b610da3565b6040516104869190612852565b60405180910390f35b610497610dc8565b6040516104a8959493929190612a56565b60405180910390f35b6104cb60048036038101906104c69190612972565b610dec565b6040516104d89190612852565b60405180910390f35b6104fb60048036038101906104f691906128fc565b610e35565b6040516105089190612957565b60405180910390f35b61052b600480360381019061052691906128fc565b610e64565b005b6105476004803603810190610542919061299f565b610ee3565b604051610558959493929190612a56565b60405180910390f35b610569610f19565b6040516105769190612852565b60405180910390f35b610587610f1f565b6040516105949190612852565b60405180910390f35b6105a5610f25565b6040516105b29190612817565b60405180910390f35b6105d560048036038101906105d0919061299f565b610fb7565b005b6105f160048036038101906105ec91906128fc565b6111de565b6040516105fe9190612957565b60405180910390f35b610621600480360381019061061c91906128fc565b611255565b60405161062e9190612957565b60405180910390f35b61063f611278565b60405161064c9190612ab8565b60405180910390f35b61066f600480360381019061066a91906128fc565b61129c565b60405161067c9190612852565b60405180910390f35b61069f600480360381019061069a9190612ad3565b611483565b6040516106ac9190612852565b60405180910390f35b6106cf60048036038101906106ca91906128fc565b61150a565b6040516106dc9190612852565b60405180910390f35b6106ed611650565b6040516106fa9190612852565b60405180910390f35b61070b6116fe565b6040516107189190612852565b60405180910390f35b61073b60048036038101906107369190612972565b611704565b005b610745611963565b6040516107529190612852565b60405180910390f35b61077560048036038101906107709190612972565b611969565b60405161078493929190612b13565b60405180910390f35b60606003805461079c90612b79565b80601f01602080910402602001604051908101604052809291908181526020018280546107c890612b79565b80156108155780601f106107ea57610100808354040283529160200191610815565b820191906000526020600020905b8154815290600101906020018083116107f857829003601f168201915b5050505050905090565b600c5481565b600080610830611993565b905061083d81858561199b565b600191505092915050565b60196020528060005260406000206000915090505481565b6000816006541161089d576040517f2083cd4000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60186000838152602001908152602001600020600401549050919050565b6000600d54905090565b600080601760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060600160405290816000820154815260200160018201548152602001600282015481525050905060006109474283602001518460000151611b64565b90508160400151816109599190612bd9565b92505050919050565b61096a611bc4565b61097333611c13565b600080601960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060065481036109f3576040517f845efa9b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b600654811015610c3157601560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082815260200190815260200160002060009054906101000a900460ff16158015610a7157506000610a6f82610860565b115b15610c20576001601560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060006101000a81548160ff0219169083151502179055506000601860008381526020019081526020016000206040518060a00160405290816000820154815260200160018201548152602001600282015481526020016003820154815260200160048201548152505090506000601660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008481526020019081526020016000205490506000610b9384610860565b828460000151610ba39190612c0d565b610bad9190612c7e565b90508260000151818460200151610bc49190612bd9565b1115610be15782602001518360000151610bde9190612caf565b90505b8085610bed9190612bd9565b945080601860008681526020019081526020016000206001016000828254610c159190612bd9565b925050819055505050505b80610c2a90612ce3565b90506109f4565b600654601960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600b6000828254610c899190612caf565b92505081905550610cdb83837f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16611e179092919063ffffffff16565b5050610ce5611e9d565b50565b600080610cf3611993565b9050610d00858285611ea7565b610d0b858585611f33565b60019150509392505050565b600080610d2942600954600754611b64565b9050600a5481610d399190612bd9565b91505090565b60006012905090565b600080610d53611993565b9050610d74818585610d658589611483565b610d6f9190612bd9565b61199b565b600191505092915050565b60065481565b600a5481565b600e6020528060005260406000206000915090505481565b6016602052816000526040600020602052806000526040600020600091509150505481565b60108060000154908060010154908060020154908060030154908060040154905085565b6000600f60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60156020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ed3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eca90612d77565b60405180910390fd5b610edf60008383612021565b5050565b60186020528060005260406000206000915090508060000154908060010154908060020154908060030154908060040154905085565b60075481565b60095481565b606060048054610f3490612b79565b80601f0160208091040260200160405190810160405280929190818152602001828054610f6090612b79565b8015610fad5780601f10610f8257610100808354040283529160200191610fad565b820191906000526020600020905b815481529060010190602001808311610f9057829003601f168201915b5050505050905090565b80610fc133610dec565b1015610ff9576040517fb0d79d6700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6110033082611255565b5061100c612243565b61101533611c13565b611020600182612425565b80600760008282546110329190612bd9565b925050819055506000601760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806060016040529081600082015481526020016001820154815260200160028201548152505090506000816000015111156110f35760006110c74283602001518460000151611b64565b905082816110d59190612bd9565b826040018181516110e69190612bd9565b91508181525050506110fe565b818160400181815250505b81816000018181516111109190612bd9565b915081815250504281602001818152505080601760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010155604082015181600201559050503373ffffffffffffffffffffffffffffffffffffffff167f58bc26fb087f2767999c63d19083d6f2a8db51605df3e2901ecd5c0e54591ae8826000015183604001516040516111d2929190612d97565b60405180910390a25050565b6000806111e9611993565b905060006111f78286611483565b90508381101561123c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161123390612e32565b60405180910390fd5b611249828686840361199b565b60019250505092915050565b600080611260611993565b905061126d818585611f33565b600191505092915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600081600654116112d9576040517f2083cd4000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600e60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000601760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180606001604052908160008201548152602001600182015481526020016002820154815250509050838211156113e957601660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002054925061147b565b6000601860008681526020019081526020016000206040518060a0016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820154815250509050600082600001511115611479576000611463826060015184602001518560000151611b64565b90508260400151816114759190612bd9565b9450505b505b505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60008160065411611547576040517f2083cd4000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b601560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060009054906101000a900460ff16806115b8575060006115b683610860565b145b156115c6576000905061164a565b6000601860008481526020019081526020016000206040518060a001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481525050905061162383610860565b61162d858561129c565b826000015161163c9190612c0d565b6116469190612c7e565b9150505b92915050565b6000600b547f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016116ae9190612ab8565b602060405180830381865afa1580156116cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116ef9190612e67565b6116f99190612caf565b905090565b60085481565b61170c611bc4565b6000601760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180606001604052908160008201548152602001600182015481526020016002820154815250509050600081600001519050600081036117bb576040517f9fe7bfd900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6117c3612243565b6117cc33611c13565b6117d7600082612425565b80600760008282546117e99190612caf565b92505081905550600082600001818152505042826020018181525050600082604001818152505081601760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000155602082015181600101556040820151816002015590505080600f60003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546118c09190612caf565b9250508190555080600f60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546119169190612bd9565b925050819055507f0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f75338260405161194e929190612e94565b60405180910390a15050611960611e9d565b50565b600b5481565b60176020528060005260406000206000915090508060000154908060010154908060020154905083565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611a0a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a0190612f2f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611a79576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a7090612fc1565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051611b579190612852565b60405180910390a3505050565b6000808385611b739190612caf565b9050600060085482670de0b6b3a7640000611b8e9190612c0d565b611b989190612c7e565b9050670de0b6b3a76400008185611baf9190612c0d565b611bb99190612c7e565b925050509392505050565b600260055403611c09576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c009061302d565b60405180910390fd5b6002600581905550565b6000600e60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506006548114611e13576000601760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180606001604052908160008201548152602001600182015481526020016002820154815250509050600081600001511115611dcb575b600654821015611dca576000601860008481526020019081526020016000206040518060a00160405290816000820154815260200160018201548152602001600282015481526020016003820154815260200160048201548152505090506000611d51826060015184602001518560000151611b64565b9050826040015181611d639190612bd9565b601660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600086815260200190815260200160002081905550505081611dc390612ce3565b9150611cda565b5b600654600e60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b5050565b611e988363a9059cbb60e01b8484604051602401611e36929190612e94565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506124c3565b505050565b6001600581905550565b6000611eb38484611483565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114611f2d5781811015611f1f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f1690613099565b60405180910390fd5b611f2c848484840361199b565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611fa2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f999061312b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603612011576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612008906131bd565b60405180910390fd5b61201c838383612021565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036120735780600d60008282546120679190612bd9565b92505081905550612142565b6000600f60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156120fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120f19061324f565b60405180910390fd5b818103600f60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361218b5780600d600082825403925050819055506121d9565b80600f60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516122369190612852565b60405180910390a3505050565b6010600301544210612423576000612265601060030154600954600754611b64565b9050600a54816122759190612bd9565b601860006006548152602001908152602001600020600401819055506006600081546122a090612ce3565b919050819055506122af612758565b600b547f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161230b9190612ab8565b602060405180830381865afa158015612328573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061234c9190612e67565b6123569190612caf565b81600001818152505042816040018181525050600c54426123779190612bd9565b81606001818152505080601060008201518160000155602082015181600101556040820151816002015560608201518160030155608082015181600401559050508060186000600654815260200190815260200160002060008201518160000155602082015181600101556040820151816002015560608201518160030155608082015181600401559050508060000151600b60008282546124199190612bd9565b9250508190555050505b565b600061243642600954600754611b64565b905080600a600082825461244a9190612bd9565b9250508190555082156124755781600a60008282546124699190612bd9565b925050819055506124b7565b600a54612481336108c5565b1115612494576000600a819055506124b6565b61249d336108c5565b600a60008282546124ae9190612caf565b925050819055505b5b42600981905550505050565b6000612525826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff1661258b9092919063ffffffff16565b9050600081511480612547575080806020019051810190612546919061329b565b5b612586576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161257d9061333a565b60405180910390fd5b505050565b606061259a84846000856125a3565b90509392505050565b6060824710156125e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016125df906133cc565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516126119190613433565b60006040518083038185875af1925050503d806000811461264e576040519150601f19603f3d011682016040523d82523d6000602084013e612653565b606091505b509150915061266487838387612670565b92505050949350505050565b606083156126d25760008351036126ca5761268a856126e5565b6126c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016126c090613496565b60405180910390fd5b5b8290506126dd565b6126dc8383612708565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60008251111561271b5781518083602001fd5b806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161274f9190612817565b60405180910390fd5b6040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b600081519050919050565b600082825260208201905092915050565b60005b838110156127c15780820151818401526020810190506127a6565b60008484015250505050565b6000601f19601f8301169050919050565b60006127e982612787565b6127f38185612792565b93506128038185602086016127a3565b61280c816127cd565b840191505092915050565b6000602082019050818103600083015261283181846127de565b905092915050565b6000819050919050565b61284c81612839565b82525050565b60006020820190506128676000830184612843565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061289d82612872565b9050919050565b6128ad81612892565b81146128b857600080fd5b50565b6000813590506128ca816128a4565b92915050565b6128d981612839565b81146128e457600080fd5b50565b6000813590506128f6816128d0565b92915050565b600080604083850312156129135761291261286d565b5b6000612921858286016128bb565b9250506020612932858286016128e7565b9150509250929050565b60008115159050919050565b6129518161293c565b82525050565b600060208201905061296c6000830184612948565b92915050565b6000602082840312156129885761298761286d565b5b6000612996848285016128bb565b91505092915050565b6000602082840312156129b5576129b461286d565b5b60006129c3848285016128e7565b91505092915050565b6000806000606084860312156129e5576129e461286d565b5b60006129f3868287016128bb565b9350506020612a04868287016128bb565b9250506040612a15868287016128e7565b9150509250925092565b600060ff82169050919050565b612a3581612a1f565b82525050565b6000602082019050612a506000830184612a2c565b92915050565b600060a082019050612a6b6000830188612843565b612a786020830187612843565b612a856040830186612843565b612a926060830185612843565b612a9f6080830184612843565b9695505050505050565b612ab281612892565b82525050565b6000602082019050612acd6000830184612aa9565b92915050565b60008060408385031215612aea57612ae961286d565b5b6000612af8858286016128bb565b9250506020612b09858286016128bb565b9150509250929050565b6000606082019050612b286000830186612843565b612b356020830185612843565b612b426040830184612843565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680612b9157607f821691505b602082108103612ba457612ba3612b4a565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612be482612839565b9150612bef83612839565b9250828201905080821115612c0757612c06612baa565b5b92915050565b6000612c1882612839565b9150612c2383612839565b9250828202612c3181612839565b91508282048414831517612c4857612c47612baa565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000612c8982612839565b9150612c9483612839565b925082612ca457612ca3612c4f565b5b828204905092915050565b6000612cba82612839565b9150612cc583612839565b9250828203905081811115612cdd57612cdc612baa565b5b92915050565b6000612cee82612839565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612d2057612d1f612baa565b5b600182019050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000612d61601f83612792565b9150612d6c82612d2b565b602082019050919050565b60006020820190508181036000830152612d9081612d54565b9050919050565b6000604082019050612dac6000830185612843565b612db96020830184612843565b9392505050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000612e1c602583612792565b9150612e2782612dc0565b604082019050919050565b60006020820190508181036000830152612e4b81612e0f565b9050919050565b600081519050612e61816128d0565b92915050565b600060208284031215612e7d57612e7c61286d565b5b6000612e8b84828501612e52565b91505092915050565b6000604082019050612ea96000830185612aa9565b612eb66020830184612843565b9392505050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000612f19602483612792565b9150612f2482612ebd565b604082019050919050565b60006020820190508181036000830152612f4881612f0c565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000612fab602283612792565b9150612fb682612f4f565b604082019050919050565b60006020820190508181036000830152612fda81612f9e565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000613017601f83612792565b915061302282612fe1565b602082019050919050565b600060208201905081810360008301526130468161300a565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000613083601d83612792565b915061308e8261304d565b602082019050919050565b600060208201905081810360008301526130b281613076565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000613115602583612792565b9150613120826130b9565b604082019050919050565b6000602082019050818103600083015261314481613108565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b60006131a7602383612792565b91506131b28261314b565b604082019050919050565b600060208201905081810360008301526131d68161319a565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b6000613239602683612792565b9150613244826131dd565b604082019050919050565b600060208201905081810360008301526132688161322c565b9050919050565b6132788161293c565b811461328357600080fd5b50565b6000815190506132958161326f565b92915050565b6000602082840312156132b1576132b061286d565b5b60006132bf84828501613286565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000613324602a83612792565b915061332f826132c8565b604082019050919050565b6000602082019050818103600083015261335381613317565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b60006133b6602683612792565b91506133c18261335a565b604082019050919050565b600060208201905081810360008301526133e5816133a9565b9050919050565b600081519050919050565b600081905092915050565b600061340d826133ec565b61341781856133f7565b93506134278185602086016127a3565b80840191505092915050565b600061343f8284613402565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000613480601d83612792565b915061348b8261344a565b602082019050919050565b600060208201905081810360008301526134af81613473565b905091905056fea26469706673582212203e18ce0583edfb6b5742a2a71a7a0499b5970f4b830b12d88f1cc520ee0cb66164736f6c63430008120033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x3B76 CODESIZE SUB DUP1 PUSH3 0x3B76 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x226 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D59546F6B656E00000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D54000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0xB4 SWAP2 SWAP1 PUSH3 0x508 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0xC6 SWAP2 SWAP1 PUSH3 0x508 JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP4 PUSH1 0x8 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0xC DUP2 SWAP1 SSTORE POP DUP2 TIMESTAMP PUSH3 0x121 SWAP2 SWAP1 PUSH3 0x61E JUMP JUMPDEST PUSH1 0x10 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP DUP2 TIMESTAMP PUSH3 0x138 SWAP2 SWAP1 PUSH3 0x61E JUMP JUMPDEST PUSH1 0x18 PUSH1 0x0 DUP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x10 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x18 PUSH1 0x0 DUP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP POP POP PUSH3 0x659 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x19B DUP2 PUSH3 0x186 JUMP JUMPDEST DUP2 EQ PUSH3 0x1A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1BB DUP2 PUSH3 0x190 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1EE DUP3 PUSH3 0x1C1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x200 DUP2 PUSH3 0x1E1 JUMP JUMPDEST DUP2 EQ PUSH3 0x20C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x220 DUP2 PUSH3 0x1F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x243 JUMPI PUSH3 0x242 PUSH3 0x181 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x253 DUP8 DUP3 DUP9 ADD PUSH3 0x1AA JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH3 0x266 DUP8 DUP3 DUP9 ADD PUSH3 0x1AA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH3 0x279 DUP8 DUP3 DUP9 ADD PUSH3 0x1AA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH3 0x28C DUP8 DUP3 DUP9 ADD PUSH3 0x20F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x31A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x330 JUMPI PUSH3 0x32F PUSH3 0x2D2 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x39A PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x35B JUMP JUMPDEST PUSH3 0x3A6 DUP7 DUP4 PUSH3 0x35B JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3E9 PUSH3 0x3E3 PUSH3 0x3DD DUP5 PUSH3 0x186 JUMP JUMPDEST PUSH3 0x3BE JUMP JUMPDEST PUSH3 0x186 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x405 DUP4 PUSH3 0x3C8 JUMP JUMPDEST PUSH3 0x41D PUSH3 0x414 DUP3 PUSH3 0x3F0 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x368 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x434 PUSH3 0x425 JUMP JUMPDEST PUSH3 0x441 DUP2 DUP5 DUP5 PUSH3 0x3FA JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x469 JUMPI PUSH3 0x45D PUSH1 0x0 DUP3 PUSH3 0x42A JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x447 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x4B8 JUMPI PUSH3 0x482 DUP2 PUSH3 0x336 JUMP JUMPDEST PUSH3 0x48D DUP5 PUSH3 0x34B JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x49D JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x4B5 PUSH3 0x4AC DUP6 PUSH3 0x34B JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x446 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4DD PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x4BD JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4F8 DUP4 DUP4 PUSH3 0x4CA JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x513 DUP3 PUSH3 0x298 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x52F JUMPI PUSH3 0x52E PUSH3 0x2A3 JUMP JUMPDEST JUMPDEST PUSH3 0x53B DUP3 SLOAD PUSH3 0x301 JUMP JUMPDEST PUSH3 0x548 DUP3 DUP3 DUP6 PUSH3 0x46D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x580 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x56B JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x577 DUP6 DUP3 PUSH3 0x4EA JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x5E7 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x590 DUP7 PUSH3 0x336 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x5BA JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x593 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x5DA JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x5D6 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x4CA JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x62B DUP3 PUSH3 0x186 JUMP JUMPDEST SWAP2 POP PUSH3 0x638 DUP4 PUSH3 0x186 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0x653 JUMPI PUSH3 0x652 PUSH3 0x5EF JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x34EC PUSH3 0x68A PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0xC97 ADD MSTORE DUP2 DUP2 PUSH2 0x127A ADD MSTORE DUP2 DUP2 PUSH2 0x1657 ADD MSTORE PUSH2 0x22B4 ADD MSTORE PUSH2 0x34EC PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x21C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x796D3FAE GT PUSH2 0x125 JUMPI DUP1 PUSH4 0xC7EE005E GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xEDED3FDA GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xEDED3FDA EQ PUSH2 0x6E5 JUMPI DUP1 PUSH4 0xEE5508F9 EQ PUSH2 0x703 JUMPI DUP1 PUSH4 0xF2888DBB EQ PUSH2 0x721 JUMPI DUP1 PUSH4 0xF85F91B4 EQ PUSH2 0x73D JUMPI DUP1 PUSH4 0xFA2A9DA9 EQ PUSH2 0x75B JUMPI PUSH2 0x21C JUMP JUMPDEST DUP1 PUSH4 0xC7EE005E EQ PUSH2 0x637 JUMPI DUP1 PUSH4 0xD429A5EA EQ PUSH2 0x655 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x685 JUMPI DUP1 PUSH4 0xEA905CDF EQ PUSH2 0x6B5 JUMPI PUSH2 0x21C JUMP JUMPDEST DUP1 PUSH4 0x8F71A265 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x8F71A265 EQ PUSH2 0x57F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x59D JUMPI DUP1 PUSH4 0xA07B10D6 EQ PUSH2 0x5BB JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x5D7 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x607 JUMPI PUSH2 0x21C JUMP JUMPDEST DUP1 PUSH4 0x796D3FAE EQ PUSH2 0x4E1 JUMPI DUP1 PUSH4 0x79C65068 EQ PUSH2 0x511 JUMPI DUP1 PUSH4 0x7A260B3F EQ PUSH2 0x52D JUMPI DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x561 JUMPI PUSH2 0x21C JUMP JUMPDEST DUP1 PUSH4 0x2A745DD0 GT PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x57B4702F GT PUSH2 0x177 JUMPI DUP1 PUSH4 0x57B4702F EQ PUSH2 0x411 JUMPI DUP1 PUSH4 0x65C65C1E EQ PUSH2 0x42F JUMPI DUP1 PUSH4 0x675CDD63 EQ PUSH2 0x45F JUMPI DUP1 PUSH4 0x692B69AE EQ PUSH2 0x48F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x4B1 JUMPI PUSH2 0x21C JUMP JUMPDEST DUP1 PUSH4 0x2A745DD0 EQ PUSH2 0x387 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x3A5 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x3C3 JUMPI DUP1 PUSH4 0x3E0DC34E EQ PUSH2 0x3F3 JUMPI PUSH2 0x21C JUMP JUMPDEST DUP1 PUSH4 0x15FAD854 GT PUSH2 0x1EF JUMPI DUP1 PUSH4 0x15FAD854 EQ PUSH2 0x2BD JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2ED JUMPI DUP1 PUSH4 0x19BEB249 EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0x1E83409A EQ PUSH2 0x33B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x357 JUMPI PUSH2 0x21C JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x81E3EDA EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0x9639761 EQ PUSH2 0x28D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x229 PUSH2 0x78D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x2817 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x247 PUSH2 0x81F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x254 SWAP2 SWAP1 PUSH2 0x2852 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x277 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x272 SWAP2 SWAP1 PUSH2 0x28FC JUMP JUMPDEST PUSH2 0x825 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x284 SWAP2 SWAP1 PUSH2 0x2957 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A2 SWAP2 SWAP1 PUSH2 0x2972 JUMP JUMPDEST PUSH2 0x848 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B4 SWAP2 SWAP1 PUSH2 0x2852 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D2 SWAP2 SWAP1 PUSH2 0x299F JUMP JUMPDEST PUSH2 0x860 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E4 SWAP2 SWAP1 PUSH2 0x2852 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F5 PUSH2 0x8BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x302 SWAP2 SWAP1 PUSH2 0x2852 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x325 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x320 SWAP2 SWAP1 PUSH2 0x2972 JUMP JUMPDEST PUSH2 0x8C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x332 SWAP2 SWAP1 PUSH2 0x2852 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x355 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x350 SWAP2 SWAP1 PUSH2 0x2972 JUMP JUMPDEST PUSH2 0x962 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x371 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36C SWAP2 SWAP1 PUSH2 0x29CC JUMP JUMPDEST PUSH2 0xCE8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37E SWAP2 SWAP1 PUSH2 0x2957 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38F PUSH2 0xD17 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39C SWAP2 SWAP1 PUSH2 0x2852 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3AD PUSH2 0xD3F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BA SWAP2 SWAP1 PUSH2 0x2A3B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D8 SWAP2 SWAP1 PUSH2 0x28FC JUMP JUMPDEST PUSH2 0xD48 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3EA SWAP2 SWAP1 PUSH2 0x2957 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3FB PUSH2 0xD7F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x408 SWAP2 SWAP1 PUSH2 0x2852 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x419 PUSH2 0xD85 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x426 SWAP2 SWAP1 PUSH2 0x2852 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x449 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x444 SWAP2 SWAP1 PUSH2 0x2972 JUMP JUMPDEST PUSH2 0xD8B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x456 SWAP2 SWAP1 PUSH2 0x2852 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x479 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x474 SWAP2 SWAP1 PUSH2 0x28FC JUMP JUMPDEST PUSH2 0xDA3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x486 SWAP2 SWAP1 PUSH2 0x2852 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x497 PUSH2 0xDC8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A8 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2A56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C6 SWAP2 SWAP1 PUSH2 0x2972 JUMP JUMPDEST PUSH2 0xDEC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D8 SWAP2 SWAP1 PUSH2 0x2852 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4FB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F6 SWAP2 SWAP1 PUSH2 0x28FC JUMP JUMPDEST PUSH2 0xE35 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x508 SWAP2 SWAP1 PUSH2 0x2957 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x52B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x526 SWAP2 SWAP1 PUSH2 0x28FC JUMP JUMPDEST PUSH2 0xE64 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x547 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x542 SWAP2 SWAP1 PUSH2 0x299F JUMP JUMPDEST PUSH2 0xEE3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x558 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2A56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x569 PUSH2 0xF19 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x576 SWAP2 SWAP1 PUSH2 0x2852 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x587 PUSH2 0xF1F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x594 SWAP2 SWAP1 PUSH2 0x2852 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5A5 PUSH2 0xF25 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B2 SWAP2 SWAP1 PUSH2 0x2817 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5D0 SWAP2 SWAP1 PUSH2 0x299F JUMP JUMPDEST PUSH2 0xFB7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5EC SWAP2 SWAP1 PUSH2 0x28FC JUMP JUMPDEST PUSH2 0x11DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5FE SWAP2 SWAP1 PUSH2 0x2957 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x621 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x61C SWAP2 SWAP1 PUSH2 0x28FC JUMP JUMPDEST PUSH2 0x1255 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62E SWAP2 SWAP1 PUSH2 0x2957 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x63F PUSH2 0x1278 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x64C SWAP2 SWAP1 PUSH2 0x2AB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x66F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x66A SWAP2 SWAP1 PUSH2 0x28FC JUMP JUMPDEST PUSH2 0x129C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x67C SWAP2 SWAP1 PUSH2 0x2852 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x69F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x69A SWAP2 SWAP1 PUSH2 0x2AD3 JUMP JUMPDEST PUSH2 0x1483 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6AC SWAP2 SWAP1 PUSH2 0x2852 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6CA SWAP2 SWAP1 PUSH2 0x28FC JUMP JUMPDEST PUSH2 0x150A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6DC SWAP2 SWAP1 PUSH2 0x2852 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6ED PUSH2 0x1650 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6FA SWAP2 SWAP1 PUSH2 0x2852 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x70B PUSH2 0x16FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x718 SWAP2 SWAP1 PUSH2 0x2852 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x736 SWAP2 SWAP1 PUSH2 0x2972 JUMP JUMPDEST PUSH2 0x1704 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x745 PUSH2 0x1963 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x752 SWAP2 SWAP1 PUSH2 0x2852 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x775 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x770 SWAP2 SWAP1 PUSH2 0x2972 JUMP JUMPDEST PUSH2 0x1969 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x784 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x79C SWAP1 PUSH2 0x2B79 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7C8 SWAP1 PUSH2 0x2B79 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x815 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7EA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x815 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7F8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x830 PUSH2 0x1993 JUMP JUMPDEST SWAP1 POP PUSH2 0x83D DUP2 DUP6 DUP6 PUSH2 0x199B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x19 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x6 SLOAD GT PUSH2 0x89D JUMPI PUSH1 0x40 MLOAD PUSH32 0x2083CD4000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x18 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x17 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x947 TIMESTAMP DUP4 PUSH1 0x20 ADD MLOAD DUP5 PUSH1 0x0 ADD MLOAD PUSH2 0x1B64 JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x40 ADD MLOAD DUP2 PUSH2 0x959 SWAP2 SWAP1 PUSH2 0x2BD9 JUMP JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x96A PUSH2 0x1BC4 JUMP JUMPDEST PUSH2 0x973 CALLER PUSH2 0x1C13 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x19 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x6 SLOAD DUP2 SUB PUSH2 0x9F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x845EFA9B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0xC31 JUMPI PUSH1 0x15 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xA71 JUMPI POP PUSH1 0x0 PUSH2 0xA6F DUP3 PUSH2 0x860 JUMP JUMPDEST GT JUMPDEST ISZERO PUSH2 0xC20 JUMPI PUSH1 0x1 PUSH1 0x15 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x18 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 PUSH1 0x16 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH2 0xB93 DUP5 PUSH2 0x860 JUMP JUMPDEST DUP3 DUP5 PUSH1 0x0 ADD MLOAD PUSH2 0xBA3 SWAP2 SWAP1 PUSH2 0x2C0D JUMP JUMPDEST PUSH2 0xBAD SWAP2 SWAP1 PUSH2 0x2C7E JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x0 ADD MLOAD DUP2 DUP5 PUSH1 0x20 ADD MLOAD PUSH2 0xBC4 SWAP2 SWAP1 PUSH2 0x2BD9 JUMP JUMPDEST GT ISZERO PUSH2 0xBE1 JUMPI DUP3 PUSH1 0x20 ADD MLOAD DUP4 PUSH1 0x0 ADD MLOAD PUSH2 0xBDE SWAP2 SWAP1 PUSH2 0x2CAF JUMP JUMPDEST SWAP1 POP JUMPDEST DUP1 DUP6 PUSH2 0xBED SWAP2 SWAP1 PUSH2 0x2BD9 JUMP JUMPDEST SWAP5 POP DUP1 PUSH1 0x18 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xC15 SWAP2 SWAP1 PUSH2 0x2BD9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP JUMPDEST DUP1 PUSH2 0xC2A SWAP1 PUSH2 0x2CE3 JUMP JUMPDEST SWAP1 POP PUSH2 0x9F4 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x19 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0xB PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xC89 SWAP2 SWAP1 PUSH2 0x2CAF JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xCDB DUP4 DUP4 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1E17 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP PUSH2 0xCE5 PUSH2 0x1E9D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xCF3 PUSH2 0x1993 JUMP JUMPDEST SWAP1 POP PUSH2 0xD00 DUP6 DUP3 DUP6 PUSH2 0x1EA7 JUMP JUMPDEST PUSH2 0xD0B DUP6 DUP6 DUP6 PUSH2 0x1F33 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xD29 TIMESTAMP PUSH1 0x9 SLOAD PUSH1 0x7 SLOAD PUSH2 0x1B64 JUMP JUMPDEST SWAP1 POP PUSH1 0xA SLOAD DUP2 PUSH2 0xD39 SWAP2 SWAP1 PUSH2 0x2BD9 JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xD53 PUSH2 0x1993 JUMP JUMPDEST SWAP1 POP PUSH2 0xD74 DUP2 DUP6 DUP6 PUSH2 0xD65 DUP6 DUP10 PUSH2 0x1483 JUMP JUMPDEST PUSH2 0xD6F SWAP2 SWAP1 PUSH2 0x2BD9 JUMP JUMPDEST PUSH2 0x199B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x16 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x10 DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 POP DUP6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xF PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x15 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xED3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xECA SWAP1 PUSH2 0x2D77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEDF PUSH1 0x0 DUP4 DUP4 PUSH2 0x2021 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x18 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 POP DUP6 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xF34 SWAP1 PUSH2 0x2B79 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xF60 SWAP1 PUSH2 0x2B79 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xFAD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xF82 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xFAD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF90 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH2 0xFC1 CALLER PUSH2 0xDEC JUMP JUMPDEST LT ISZERO PUSH2 0xFF9 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB0D79D6700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1003 ADDRESS DUP3 PUSH2 0x1255 JUMP JUMPDEST POP PUSH2 0x100C PUSH2 0x2243 JUMP JUMPDEST PUSH2 0x1015 CALLER PUSH2 0x1C13 JUMP JUMPDEST PUSH2 0x1020 PUSH1 0x1 DUP3 PUSH2 0x2425 JUMP JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1032 SWAP2 SWAP1 PUSH2 0x2BD9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x17 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD GT ISZERO PUSH2 0x10F3 JUMPI PUSH1 0x0 PUSH2 0x10C7 TIMESTAMP DUP4 PUSH1 0x20 ADD MLOAD DUP5 PUSH1 0x0 ADD MLOAD PUSH2 0x1B64 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 PUSH2 0x10D5 SWAP2 SWAP1 PUSH2 0x2BD9 JUMP JUMPDEST DUP3 PUSH1 0x40 ADD DUP2 DUP2 MLOAD PUSH2 0x10E6 SWAP2 SWAP1 PUSH2 0x2BD9 JUMP JUMPDEST SWAP2 POP DUP2 DUP2 MSTORE POP POP POP PUSH2 0x10FE JUMP JUMPDEST DUP2 DUP2 PUSH1 0x40 ADD DUP2 DUP2 MSTORE POP POP JUMPDEST DUP2 DUP2 PUSH1 0x0 ADD DUP2 DUP2 MLOAD PUSH2 0x1110 SWAP2 SWAP1 PUSH2 0x2BD9 JUMP JUMPDEST SWAP2 POP DUP2 DUP2 MSTORE POP POP TIMESTAMP DUP2 PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x17 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x58BC26FB087F2767999C63D19083D6F2A8DB51605DF3E2901ECD5C0E54591AE8 DUP3 PUSH1 0x0 ADD MLOAD DUP4 PUSH1 0x40 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x11D2 SWAP3 SWAP2 SWAP1 PUSH2 0x2D97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x11E9 PUSH2 0x1993 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x11F7 DUP3 DUP7 PUSH2 0x1483 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x123C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1233 SWAP1 PUSH2 0x2E32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1249 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x199B JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1260 PUSH2 0x1993 JUMP JUMPDEST SWAP1 POP PUSH2 0x126D DUP2 DUP6 DUP6 PUSH2 0x1F33 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x6 SLOAD GT PUSH2 0x12D9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2083CD4000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x17 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP4 DUP3 GT ISZERO PUSH2 0x13E9 JUMPI PUSH1 0x16 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP3 POP PUSH2 0x147B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x18 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD MLOAD GT ISZERO PUSH2 0x1479 JUMPI PUSH1 0x0 PUSH2 0x1463 DUP3 PUSH1 0x60 ADD MLOAD DUP5 PUSH1 0x20 ADD MLOAD DUP6 PUSH1 0x0 ADD MLOAD PUSH2 0x1B64 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x40 ADD MLOAD DUP2 PUSH2 0x1475 SWAP2 SWAP1 PUSH2 0x2BD9 JUMP JUMPDEST SWAP5 POP POP JUMPDEST POP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x6 SLOAD GT PUSH2 0x1547 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2083CD4000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x15 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x15B8 JUMPI POP PUSH1 0x0 PUSH2 0x15B6 DUP4 PUSH2 0x860 JUMP JUMPDEST EQ JUMPDEST ISZERO PUSH2 0x15C6 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x164A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x18 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH2 0x1623 DUP4 PUSH2 0x860 JUMP JUMPDEST PUSH2 0x162D DUP6 DUP6 PUSH2 0x129C JUMP JUMPDEST DUP3 PUSH1 0x0 ADD MLOAD PUSH2 0x163C SWAP2 SWAP1 PUSH2 0x2C0D JUMP JUMPDEST PUSH2 0x1646 SWAP2 SWAP1 PUSH2 0x2C7E JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB SLOAD PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16AE SWAP2 SWAP1 PUSH2 0x2AB8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x16CB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16EF SWAP2 SWAP1 PUSH2 0x2E67 JUMP JUMPDEST PUSH2 0x16F9 SWAP2 SWAP1 PUSH2 0x2CAF JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x170C PUSH2 0x1BC4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x17 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD SWAP1 POP PUSH1 0x0 DUP2 SUB PUSH2 0x17BB JUMPI PUSH1 0x40 MLOAD PUSH32 0x9FE7BFD900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x17C3 PUSH2 0x2243 JUMP JUMPDEST PUSH2 0x17CC CALLER PUSH2 0x1C13 JUMP JUMPDEST PUSH2 0x17D7 PUSH1 0x0 DUP3 PUSH2 0x2425 JUMP JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x17E9 SWAP2 SWAP1 PUSH2 0x2CAF JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP2 DUP2 MSTORE POP POP TIMESTAMP DUP3 PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x0 DUP3 PUSH1 0x40 ADD DUP2 DUP2 MSTORE POP POP DUP2 PUSH1 0x17 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP DUP1 PUSH1 0xF PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x18C0 SWAP2 SWAP1 PUSH2 0x2CAF JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xF PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1916 SWAP2 SWAP1 PUSH2 0x2BD9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0xF5BB82176FEB1B5E747E28471AA92156A04D9F3AB9F45F28E2D704232B93F75 CALLER DUP3 PUSH1 0x40 MLOAD PUSH2 0x194E SWAP3 SWAP2 SWAP1 PUSH2 0x2E94 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP PUSH2 0x1960 PUSH2 0x1E9D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x17 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A0A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A01 SWAP1 PUSH2 0x2F2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A79 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A70 SWAP1 PUSH2 0x2FC1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1B57 SWAP2 SWAP1 PUSH2 0x2852 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP6 PUSH2 0x1B73 SWAP2 SWAP1 PUSH2 0x2CAF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x8 SLOAD DUP3 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1B8E SWAP2 SWAP1 PUSH2 0x2C0D JUMP JUMPDEST PUSH2 0x1B98 SWAP2 SWAP1 PUSH2 0x2C7E JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 DUP2 DUP6 PUSH2 0x1BAF SWAP2 SWAP1 PUSH2 0x2C0D JUMP JUMPDEST PUSH2 0x1BB9 SWAP2 SWAP1 PUSH2 0x2C7E JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x5 SLOAD SUB PUSH2 0x1C09 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C00 SWAP1 PUSH2 0x302D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x5 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x6 SLOAD DUP2 EQ PUSH2 0x1E13 JUMPI PUSH1 0x0 PUSH1 0x17 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD GT ISZERO PUSH2 0x1DCB JUMPI JUMPDEST PUSH1 0x6 SLOAD DUP3 LT ISZERO PUSH2 0x1DCA JUMPI PUSH1 0x0 PUSH1 0x18 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x1D51 DUP3 PUSH1 0x60 ADD MLOAD DUP5 PUSH1 0x20 ADD MLOAD DUP6 PUSH1 0x0 ADD MLOAD PUSH2 0x1B64 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x40 ADD MLOAD DUP2 PUSH2 0x1D63 SWAP2 SWAP1 PUSH2 0x2BD9 JUMP JUMPDEST PUSH1 0x16 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP DUP2 PUSH2 0x1DC3 SWAP1 PUSH2 0x2CE3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CDA JUMP JUMPDEST JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xE PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1E98 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1E36 SWAP3 SWAP2 SWAP1 PUSH2 0x2E94 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x24C3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EB3 DUP5 DUP5 PUSH2 0x1483 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x1F2D JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1F1F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F16 SWAP1 PUSH2 0x3099 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1F2C DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x199B JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1FA2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F99 SWAP1 PUSH2 0x312B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2011 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2008 SWAP1 PUSH2 0x31BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x201C DUP4 DUP4 DUP4 PUSH2 0x2021 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2073 JUMPI DUP1 PUSH1 0xD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2067 SWAP2 SWAP1 PUSH2 0x2BD9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x2142 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xF PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x20FA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20F1 SWAP1 PUSH2 0x324F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0xF PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x218B JUMPI DUP1 PUSH1 0xD PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x21D9 JUMP JUMPDEST DUP1 PUSH1 0xF PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x2236 SWAP2 SWAP1 PUSH2 0x2852 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x10 PUSH1 0x3 ADD SLOAD TIMESTAMP LT PUSH2 0x2423 JUMPI PUSH1 0x0 PUSH2 0x2265 PUSH1 0x10 PUSH1 0x3 ADD SLOAD PUSH1 0x9 SLOAD PUSH1 0x7 SLOAD PUSH2 0x1B64 JUMP JUMPDEST SWAP1 POP PUSH1 0xA SLOAD DUP2 PUSH2 0x2275 SWAP2 SWAP1 PUSH2 0x2BD9 JUMP JUMPDEST PUSH1 0x18 PUSH1 0x0 PUSH1 0x6 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x6 PUSH1 0x0 DUP2 SLOAD PUSH2 0x22A0 SWAP1 PUSH2 0x2CE3 JUMP JUMPDEST SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE POP PUSH2 0x22AF PUSH2 0x2758 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x230B SWAP2 SWAP1 PUSH2 0x2AB8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2328 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x234C SWAP2 SWAP1 PUSH2 0x2E67 JUMP JUMPDEST PUSH2 0x2356 SWAP2 SWAP1 PUSH2 0x2CAF JUMP JUMPDEST DUP2 PUSH1 0x0 ADD DUP2 DUP2 MSTORE POP POP TIMESTAMP DUP2 PUSH1 0x40 ADD DUP2 DUP2 MSTORE POP POP PUSH1 0xC SLOAD TIMESTAMP PUSH2 0x2377 SWAP2 SWAP1 PUSH2 0x2BD9 JUMP JUMPDEST DUP2 PUSH1 0x60 ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x10 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE SWAP1 POP POP DUP1 PUSH1 0x18 PUSH1 0x0 PUSH1 0x6 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE SWAP1 POP POP DUP1 PUSH1 0x0 ADD MLOAD PUSH1 0xB PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2419 SWAP2 SWAP1 PUSH2 0x2BD9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2436 TIMESTAMP PUSH1 0x9 SLOAD PUSH1 0x7 SLOAD PUSH2 0x1B64 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xA PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x244A SWAP2 SWAP1 PUSH2 0x2BD9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 ISZERO PUSH2 0x2475 JUMPI DUP2 PUSH1 0xA PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2469 SWAP2 SWAP1 PUSH2 0x2BD9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x24B7 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x2481 CALLER PUSH2 0x8C5 JUMP JUMPDEST GT ISZERO PUSH2 0x2494 JUMPI PUSH1 0x0 PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH2 0x24B6 JUMP JUMPDEST PUSH2 0x249D CALLER PUSH2 0x8C5 JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x24AE SWAP2 SWAP1 PUSH2 0x2CAF JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST TIMESTAMP PUSH1 0x9 DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2525 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x258B SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD EQ DUP1 PUSH2 0x2547 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x2546 SWAP2 SWAP1 PUSH2 0x329B JUMP JUMPDEST JUMPDEST PUSH2 0x2586 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x257D SWAP1 PUSH2 0x333A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x259A DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x25A3 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x25E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25DF SWAP1 PUSH2 0x33CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x2611 SWAP2 SWAP1 PUSH2 0x3433 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x264E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2653 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2664 DUP8 DUP4 DUP4 DUP8 PUSH2 0x2670 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x26D2 JUMPI PUSH1 0x0 DUP4 MLOAD SUB PUSH2 0x26CA JUMPI PUSH2 0x268A DUP6 PUSH2 0x26E5 JUMP JUMPDEST PUSH2 0x26C9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26C0 SWAP1 PUSH2 0x3496 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH2 0x26DD JUMP JUMPDEST PUSH2 0x26DC DUP4 DUP4 PUSH2 0x2708 JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x271B JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x274F SWAP2 SWAP1 PUSH2 0x2817 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x27C1 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x27A6 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27E9 DUP3 PUSH2 0x2787 JUMP JUMPDEST PUSH2 0x27F3 DUP2 DUP6 PUSH2 0x2792 JUMP JUMPDEST SWAP4 POP PUSH2 0x2803 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x27A3 JUMP JUMPDEST PUSH2 0x280C DUP2 PUSH2 0x27CD JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2831 DUP2 DUP5 PUSH2 0x27DE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x284C DUP2 PUSH2 0x2839 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2867 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2843 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x289D DUP3 PUSH2 0x2872 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x28AD DUP2 PUSH2 0x2892 JUMP JUMPDEST DUP2 EQ PUSH2 0x28B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x28CA DUP2 PUSH2 0x28A4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x28D9 DUP2 PUSH2 0x2839 JUMP JUMPDEST DUP2 EQ PUSH2 0x28E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x28F6 DUP2 PUSH2 0x28D0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2913 JUMPI PUSH2 0x2912 PUSH2 0x286D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2921 DUP6 DUP3 DUP7 ADD PUSH2 0x28BB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2932 DUP6 DUP3 DUP7 ADD PUSH2 0x28E7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2951 DUP2 PUSH2 0x293C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x296C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2948 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2988 JUMPI PUSH2 0x2987 PUSH2 0x286D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2996 DUP5 DUP3 DUP6 ADD PUSH2 0x28BB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x29B5 JUMPI PUSH2 0x29B4 PUSH2 0x286D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x29C3 DUP5 DUP3 DUP6 ADD PUSH2 0x28E7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x29E5 JUMPI PUSH2 0x29E4 PUSH2 0x286D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x29F3 DUP7 DUP3 DUP8 ADD PUSH2 0x28BB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2A04 DUP7 DUP3 DUP8 ADD PUSH2 0x28BB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2A15 DUP7 DUP3 DUP8 ADD PUSH2 0x28E7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2A35 DUP2 PUSH2 0x2A1F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2A50 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2A2C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2A6B PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x2843 JUMP JUMPDEST PUSH2 0x2A78 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x2843 JUMP JUMPDEST PUSH2 0x2A85 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x2843 JUMP JUMPDEST PUSH2 0x2A92 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x2843 JUMP JUMPDEST PUSH2 0x2A9F PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x2843 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2AB2 DUP2 PUSH2 0x2892 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2ACD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2AA9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2AEA JUMPI PUSH2 0x2AE9 PUSH2 0x286D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2AF8 DUP6 DUP3 DUP7 ADD PUSH2 0x28BB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2B09 DUP6 DUP3 DUP7 ADD PUSH2 0x28BB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2B28 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2843 JUMP JUMPDEST PUSH2 0x2B35 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2843 JUMP JUMPDEST PUSH2 0x2B42 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2843 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2B91 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2BA4 JUMPI PUSH2 0x2BA3 PUSH2 0x2B4A JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2BE4 DUP3 PUSH2 0x2839 JUMP JUMPDEST SWAP2 POP PUSH2 0x2BEF DUP4 PUSH2 0x2839 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2C07 JUMPI PUSH2 0x2C06 PUSH2 0x2BAA JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C18 DUP3 PUSH2 0x2839 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C23 DUP4 PUSH2 0x2839 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2C31 DUP2 PUSH2 0x2839 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2C48 JUMPI PUSH2 0x2C47 PUSH2 0x2BAA JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2C89 DUP3 PUSH2 0x2839 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C94 DUP4 PUSH2 0x2839 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2CA4 JUMPI PUSH2 0x2CA3 PUSH2 0x2C4F JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CBA DUP3 PUSH2 0x2839 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CC5 DUP4 PUSH2 0x2839 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2CDD JUMPI PUSH2 0x2CDC PUSH2 0x2BAA JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CEE DUP3 PUSH2 0x2839 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2D20 JUMPI PUSH2 0x2D1F PUSH2 0x2BAA JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D61 PUSH1 0x1F DUP4 PUSH2 0x2792 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D6C DUP3 PUSH2 0x2D2B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2D90 DUP2 PUSH2 0x2D54 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2DAC PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2843 JUMP JUMPDEST PUSH2 0x2DB9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2843 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E1C PUSH1 0x25 DUP4 PUSH2 0x2792 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E27 DUP3 PUSH2 0x2DC0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E4B DUP2 PUSH2 0x2E0F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2E61 DUP2 PUSH2 0x28D0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2E7D JUMPI PUSH2 0x2E7C PUSH2 0x286D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2E8B DUP5 DUP3 DUP6 ADD PUSH2 0x2E52 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2EA9 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2AA9 JUMP JUMPDEST PUSH2 0x2EB6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2843 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F19 PUSH1 0x24 DUP4 PUSH2 0x2792 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F24 DUP3 PUSH2 0x2EBD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2F48 DUP2 PUSH2 0x2F0C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FAB PUSH1 0x22 DUP4 PUSH2 0x2792 JUMP JUMPDEST SWAP2 POP PUSH2 0x2FB6 DUP3 PUSH2 0x2F4F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2FDA DUP2 PUSH2 0x2F9E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3017 PUSH1 0x1F DUP4 PUSH2 0x2792 JUMP JUMPDEST SWAP2 POP PUSH2 0x3022 DUP3 PUSH2 0x2FE1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3046 DUP2 PUSH2 0x300A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3083 PUSH1 0x1D DUP4 PUSH2 0x2792 JUMP JUMPDEST SWAP2 POP PUSH2 0x308E DUP3 PUSH2 0x304D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x30B2 DUP2 PUSH2 0x3076 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3115 PUSH1 0x25 DUP4 PUSH2 0x2792 JUMP JUMPDEST SWAP2 POP PUSH2 0x3120 DUP3 PUSH2 0x30B9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3144 DUP2 PUSH2 0x3108 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31A7 PUSH1 0x23 DUP4 PUSH2 0x2792 JUMP JUMPDEST SWAP2 POP PUSH2 0x31B2 DUP3 PUSH2 0x314B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x31D6 DUP2 PUSH2 0x319A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3239 PUSH1 0x26 DUP4 PUSH2 0x2792 JUMP JUMPDEST SWAP2 POP PUSH2 0x3244 DUP3 PUSH2 0x31DD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3268 DUP2 PUSH2 0x322C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3278 DUP2 PUSH2 0x293C JUMP JUMPDEST DUP2 EQ PUSH2 0x3283 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3295 DUP2 PUSH2 0x326F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x32B1 JUMPI PUSH2 0x32B0 PUSH2 0x286D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x32BF DUP5 DUP3 DUP6 ADD PUSH2 0x3286 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3324 PUSH1 0x2A DUP4 PUSH2 0x2792 JUMP JUMPDEST SWAP2 POP PUSH2 0x332F DUP3 PUSH2 0x32C8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3353 DUP2 PUSH2 0x3317 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33B6 PUSH1 0x26 DUP4 PUSH2 0x2792 JUMP JUMPDEST SWAP2 POP PUSH2 0x33C1 DUP3 PUSH2 0x335A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x33E5 DUP2 PUSH2 0x33A9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x340D DUP3 PUSH2 0x33EC JUMP JUMPDEST PUSH2 0x3417 DUP2 DUP6 PUSH2 0x33F7 JUMP JUMPDEST SWAP4 POP PUSH2 0x3427 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x27A3 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x343F DUP3 DUP5 PUSH2 0x3402 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3480 PUSH1 0x1D DUP4 PUSH2 0x2792 JUMP JUMPDEST SWAP2 POP PUSH2 0x348B DUP3 PUSH2 0x344A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x34AF DUP2 PUSH2 0x3473 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY XOR 0xCE SDIV DUP4 0xED 0xFB PUSH12 0x5742A2A71A7A0499B5970F4B DUP4 SIGNEXTEND SLT 0xD8 DUP16 SHR 0xC5 KECCAK256 0xEE 0xC 0xB6 PUSH2 0x6473 PUSH16 0x6C634300081200330000000000000000 ","sourceMap":"349:17366:10:-:0;;;3280:513;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1980:113:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2054:5;2046;:13;;;;;;:::i;:::-;;2079:7;2069;:17;;;;;;:::i;:::-;;1980:113;;1716:1:1;1821:7;:22;;;;3463:6:10::1;3456:13;;;;;;;;::::0;::::1;3495;3480:12;:28;;;;3532:11;3519:10;:24;;;;3594:17;3576:15;:35;;;;:::i;:::-;3554:11;:19;;:57;;;;3665:17;3647:15;:35;;;;:::i;:::-;3622:11;:14;3634:1:::0;3622:14:::1;;;;;;;;;;;:22;;:60;;;;3717:15;3693:11;:21;;:39;;;;3770:15;3743:11;:14;3755:1:::0;3743:14:::1;;;;;;;;;;;:24;;:42;;;;3280:513:::0;;;;349:17366;;88:117:11;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:126::-;731:7;771:42;764:5;760:54;749:65;;694:126;;;:::o;826:96::-;863:7;892:24;910:5;892:24;:::i;:::-;881:35;;826:96;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:820::-;1302:6;1310;1318;1326;1375:3;1363:9;1354:7;1350:23;1346:33;1343:120;;;1382:79;;:::i;:::-;1343:120;1502:1;1527:64;1583:7;1574:6;1563:9;1559:22;1527:64;:::i;:::-;1517:74;;1473:128;1640:2;1666:64;1722:7;1713:6;1702:9;1698:22;1666:64;:::i;:::-;1656:74;;1611:129;1779:2;1805:64;1861:7;1852:6;1841:9;1837:22;1805:64;:::i;:::-;1795:74;;1750:129;1918:2;1944:64;2000:7;1991:6;1980:9;1976:22;1944:64;:::i;:::-;1934:74;;1889:129;1205:820;;;;;;;:::o;2031:99::-;2083:6;2117:5;2111:12;2101:22;;2031:99;;;:::o;2136:180::-;2184:77;2181:1;2174:88;2281:4;2278:1;2271:15;2305:4;2302:1;2295:15;2322:180;2370:77;2367:1;2360:88;2467:4;2464:1;2457:15;2491:4;2488:1;2481:15;2508:320;2552:6;2589:1;2583:4;2579:12;2569:22;;2636:1;2630:4;2626:12;2657:18;2647:81;;2713:4;2705:6;2701:17;2691:27;;2647:81;2775:2;2767:6;2764:14;2744:18;2741:38;2738:84;;2794:18;;:::i;:::-;2738:84;2559:269;2508:320;;;:::o;2834:141::-;2883:4;2906:3;2898:11;;2929:3;2926:1;2919:14;2963:4;2960:1;2950:18;2942:26;;2834:141;;;:::o;2981:93::-;3018:6;3065:2;3060;3053:5;3049:14;3045:23;3035:33;;2981:93;;;:::o;3080:107::-;3124:8;3174:5;3168:4;3164:16;3143:37;;3080:107;;;;:::o;3193:393::-;3262:6;3312:1;3300:10;3296:18;3335:97;3365:66;3354:9;3335:97;:::i;:::-;3453:39;3483:8;3472:9;3453:39;:::i;:::-;3441:51;;3525:4;3521:9;3514:5;3510:21;3501:30;;3574:4;3564:8;3560:19;3553:5;3550:30;3540:40;;3269:317;;3193:393;;;;;:::o;3592:60::-;3620:3;3641:5;3634:12;;3592:60;;;:::o;3658:142::-;3708:9;3741:53;3759:34;3768:24;3786:5;3768:24;:::i;:::-;3759:34;:::i;:::-;3741:53;:::i;:::-;3728:66;;3658:142;;;:::o;3806:75::-;3849:3;3870:5;3863:12;;3806:75;;;:::o;3887:269::-;3997:39;4028:7;3997:39;:::i;:::-;4058:91;4107:41;4131:16;4107:41;:::i;:::-;4099:6;4092:4;4086:11;4058:91;:::i;:::-;4052:4;4045:105;3963:193;3887:269;;;:::o;4162:73::-;4207:3;4162:73;:::o;4241:189::-;4318:32;;:::i;:::-;4359:65;4417:6;4409;4403:4;4359:65;:::i;:::-;4294:136;4241:189;;:::o;4436:186::-;4496:120;4513:3;4506:5;4503:14;4496:120;;;4567:39;4604:1;4597:5;4567:39;:::i;:::-;4540:1;4533:5;4529:13;4520:22;;4496:120;;;4436:186;;:::o;4628:543::-;4729:2;4724:3;4721:11;4718:446;;;4763:38;4795:5;4763:38;:::i;:::-;4847:29;4865:10;4847:29;:::i;:::-;4837:8;4833:44;5030:2;5018:10;5015:18;5012:49;;;5051:8;5036:23;;5012:49;5074:80;5130:22;5148:3;5130:22;:::i;:::-;5120:8;5116:37;5103:11;5074:80;:::i;:::-;4733:431;;4718:446;4628:543;;;:::o;5177:117::-;5231:8;5281:5;5275:4;5271:16;5250:37;;5177:117;;;;:::o;5300:169::-;5344:6;5377:51;5425:1;5421:6;5413:5;5410:1;5406:13;5377:51;:::i;:::-;5373:56;5458:4;5452;5448:15;5438:25;;5351:118;5300:169;;;;:::o;5474:295::-;5550:4;5696:29;5721:3;5715:4;5696:29;:::i;:::-;5688:37;;5758:3;5755:1;5751:11;5745:4;5742:21;5734:29;;5474:295;;;;:::o;5774:1395::-;5891:37;5924:3;5891:37;:::i;:::-;5993:18;5985:6;5982:30;5979:56;;;6015:18;;:::i;:::-;5979:56;6059:38;6091:4;6085:11;6059:38;:::i;:::-;6144:67;6204:6;6196;6190:4;6144:67;:::i;:::-;6238:1;6262:4;6249:17;;6294:2;6286:6;6283:14;6311:1;6306:618;;;;6968:1;6985:6;6982:77;;;7034:9;7029:3;7025:19;7019:26;7010:35;;6982:77;7085:67;7145:6;7138:5;7085:67;:::i;:::-;7079:4;7072:81;6941:222;6276:887;;6306:618;6358:4;6354:9;6346:6;6342:22;6392:37;6424:4;6392:37;:::i;:::-;6451:1;6465:208;6479:7;6476:1;6473:14;6465:208;;;6558:9;6553:3;6549:19;6543:26;6535:6;6528:42;6609:1;6601:6;6597:14;6587:24;;6656:2;6645:9;6641:18;6628:31;;6502:4;6499:1;6495:12;6490:17;;6465:208;;;6701:6;6692:7;6689:19;6686:179;;;6759:9;6754:3;6750:19;6744:26;6802:48;6844:4;6836:6;6832:17;6821:9;6802:48;:::i;:::-;6794:6;6787:64;6709:156;6686:179;6911:1;6907;6899:6;6895:14;6891:22;6885:4;6878:36;6313:611;;;6276:887;;5866:1303;;;5774:1395;;:::o;7175:180::-;7223:77;7220:1;7213:88;7320:4;7317:1;7310:15;7344:4;7341:1;7334:15;7361:191;7401:3;7420:20;7438:1;7420:20;:::i;:::-;7415:25;;7454:20;7472:1;7454:20;:::i;:::-;7449:25;;7497:1;7494;7490:9;7483:16;;7518:3;7515:1;7512:10;7509:36;;;7525:18;;:::i;:::-;7509:36;7361:191;;;;:::o;349:17366:10:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_adjustContractWeight_2720":{"entryPoint":9253,"id":2720,"parameterSlots":2,"returnSlots":0},"@_approve_698":{"entryPoint":6555,"id":698,"parameterSlots":3,"returnSlots":0},"@_callOptionalReturn_1230":{"entryPoint":9411,"id":1230,"parameterSlots":2,"returnSlots":0},"@_contractWeight_1737":{"entryPoint":3461,"id":1737,"parameterSlots":0,"returnSlots":0},"@_msgSender_2030":{"entryPoint":6547,"id":2030,"parameterSlots":0,"returnSlots":1},"@_nonReentrantAfter_165":{"entryPoint":7837,"id":165,"parameterSlots":0,"returnSlots":0},"@_nonReentrantBefore_157":{"entryPoint":7108,"id":157,"parameterSlots":0,"returnSlots":0},"@_revert_1608":{"entryPoint":9992,"id":1608,"parameterSlots":2,"returnSlots":0},"@_setUserWeightAtPool_2546":{"entryPoint":7187,"id":2546,"parameterSlots":1,"returnSlots":0},"@_spendAllowance_741":{"entryPoint":7847,"id":741,"parameterSlots":3,"returnSlots":0},"@_transfer_2020":{"entryPoint":7987,"id":2020,"parameterSlots":3,"returnSlots":0},"@_update_1958":{"entryPoint":8225,"id":1958,"parameterSlots":3,"returnSlots":0},"@_userWeightAtPool_1766":{"entryPoint":3491,"id":1766,"parameterSlots":0,"returnSlots":0},"@_weightIncreaseSinceInteraction_2667":{"entryPoint":7012,"id":2667,"parameterSlots":3,"returnSlots":1},"@allowance_319":{"entryPoint":5251,"id":319,"parameterSlots":2,"returnSlots":1},"@approve_344":{"entryPoint":2085,"id":344,"parameterSlots":2,"returnSlots":1},"@balanceOf_1885":{"entryPoint":3564,"id":1885,"parameterSlots":1,"returnSlots":1},"@claimAmountForPool_2870":{"entryPoint":5386,"id":2870,"parameterSlots":2,"returnSlots":1},"@claimLeftOff_1780":{"entryPoint":2120,"id":1780,"parameterSlots":0,"returnSlots":0},"@claim_2302":{"entryPoint":2402,"id":2302,"parameterSlots":1,"returnSlots":0},"@contractWeightAtPool_2775":{"entryPoint":2144,"id":2775,"parameterSlots":1,"returnSlots":1},"@contractWeight_2797":{"entryPoint":3351,"id":2797,"parameterSlots":0,"returnSlots":1},"@currentPool_1754":{"entryPoint":3528,"id":1754,"parameterSlots":0,"returnSlots":0},"@decimals_252":{"entryPoint":3391,"id":252,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_447":{"entryPoint":4574,"id":447,"parameterSlots":2,"returnSlots":1},"@functionCallWithValue_1433":{"entryPoint":9635,"id":1433,"parameterSlots":4,"returnSlots":1},"@functionCall_1369":{"entryPoint":9611,"id":1369,"parameterSlots":3,"returnSlots":1},"@increaseAllowance_406":{"entryPoint":3400,"id":406,"parameterSlots":2,"returnSlots":1},"@isContract_1297":{"entryPoint":9957,"id":1297,"parameterSlots":1,"returnSlots":1},"@lastInteraction_1735":{"entryPoint":3871,"id":1735,"parameterSlots":0,"returnSlots":0},"@mintToken_1871":{"entryPoint":3684,"id":1871,"parameterSlots":2,"returnSlots":0},"@name_232":{"entryPoint":1933,"id":232,"parameterSlots":0,"returnSlots":1},"@pendingRewards_2816":{"entryPoint":5712,"id":2816,"parameterSlots":0,"returnSlots":1},"@poolDetails_1776":{"entryPoint":3811,"id":1776,"parameterSlots":0,"returnSlots":0},"@poolId_1727":{"entryPoint":3455,"id":1727,"parameterSlots":0,"returnSlots":0},"@poolLeftOff_1747":{"entryPoint":3467,"id":1747,"parameterSlots":0,"returnSlots":0},"@poolLength_1741":{"entryPoint":2079,"id":1741,"parameterSlots":0,"returnSlots":0},"@prime_1733":{"entryPoint":4728,"id":1733,"parameterSlots":0,"returnSlots":0},"@safeTransfer_936":{"entryPoint":7703,"id":936,"parameterSlots":3,"returnSlots":0},"@stak_2162":{"entryPoint":4023,"id":2162,"parameterSlots":1,"returnSlots":0},"@stakeDetails_1771":{"entryPoint":6505,"id":1771,"parameterSlots":0,"returnSlots":0},"@symbol_242":{"entryPoint":3877,"id":242,"parameterSlots":0,"returnSlots":1},"@timeToDouble_1731":{"entryPoint":5886,"id":1731,"parameterSlots":0,"returnSlots":0},"@totalStaked_1729":{"entryPoint":3865,"id":1729,"parameterSlots":0,"returnSlots":0},"@totalSupply_2049":{"entryPoint":2235,"id":2049,"parameterSlots":0,"returnSlots":1},"@transferFrom_377":{"entryPoint":3304,"id":377,"parameterSlots":3,"returnSlots":1},"@transfer_1983":{"entryPoint":4693,"id":1983,"parameterSlots":2,"returnSlots":1},"@unclaimedRewards_1739":{"entryPoint":6499,"id":1739,"parameterSlots":0,"returnSlots":0},"@unstake_2395":{"entryPoint":5892,"id":2395,"parameterSlots":1,"returnSlots":0},"@updatePool_2630":{"entryPoint":8771,"id":2630,"parameterSlots":0,"returnSlots":0},"@userClaimedPool_1760":{"entryPoint":3637,"id":1760,"parameterSlots":0,"returnSlots":0},"@userTotalWeight_2754":{"entryPoint":2245,"id":2754,"parameterSlots":1,"returnSlots":1},"@userWeightAtPool_2470":{"entryPoint":4764,"id":2470,"parameterSlots":2,"returnSlots":1},"@verifyCallResultFromTarget_1564":{"entryPoint":9840,"id":1564,"parameterSlots":4,"returnSlots":1},"abi_decode_t_address":{"entryPoint":10427,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":12934,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":10471,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":11858,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":10610,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":10963,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":10700,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":10492,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":12955,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":10655,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":11879,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":10921,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":10568,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":13314,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":10206,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack":{"entryPoint":12698,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack":{"entryPoint":12190,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack":{"entryPoint":12406,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack":{"entryPoint":12844,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack":{"entryPoint":13225,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack":{"entryPoint":12552,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack":{"entryPoint":12044,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack":{"entryPoint":13427,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack":{"entryPoint":13079,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack":{"entryPoint":12298,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack":{"entryPoint":11791,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack":{"entryPoint":11604,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":10307,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":10796,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":13363,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":10936,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":11924,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":10583,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10263,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12733,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12225,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12441,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12879,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13260,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12587,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12079,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13462,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13114,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12333,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11826,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11639,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":10322,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":11671,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":11027,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":10838,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":10811,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":13292,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":10119,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":13303,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":10130,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":11225,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":11390,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":11277,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":11439,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":10386,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":10556,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":10354,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":10297,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":10783,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":10147,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":11129,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":11491,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":11178,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":11343,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":11082,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":10349,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":10189,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f":{"entryPoint":12619,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029":{"entryPoint":12111,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe":{"entryPoint":12365,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6":{"entryPoint":12765,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c":{"entryPoint":13146,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea":{"entryPoint":12473,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208":{"entryPoint":11965,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad":{"entryPoint":13386,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd":{"entryPoint":13000,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619":{"entryPoint":12257,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8":{"entryPoint":11712,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e":{"entryPoint":11563,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":10404,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":12911,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":10448,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:24470:11","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:11","statements":[{"nodeType":"YulAssignment","src":"77:22:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:11"},"nodeType":"YulFunctionCall","src":"87:12:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:11"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:11","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:11","type":""}],"src":"7:99:11"},{"body":{"nodeType":"YulBlock","src":"208:73:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"225:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"230:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"218:6:11"},"nodeType":"YulFunctionCall","src":"218:19:11"},"nodeType":"YulExpressionStatement","src":"218:19:11"},{"nodeType":"YulAssignment","src":"246:29:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"265:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"270:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"261:3:11"},"nodeType":"YulFunctionCall","src":"261:14:11"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"246:11:11"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"180:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"185:6:11","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"196:11:11","type":""}],"src":"112:169:11"},{"body":{"nodeType":"YulBlock","src":"349:184:11","statements":[{"nodeType":"YulVariableDeclaration","src":"359:10:11","value":{"kind":"number","nodeType":"YulLiteral","src":"368:1:11","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"363:1:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"428:63:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"453:3:11"},{"name":"i","nodeType":"YulIdentifier","src":"458:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"449:3:11"},"nodeType":"YulFunctionCall","src":"449:11:11"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"472:3:11"},{"name":"i","nodeType":"YulIdentifier","src":"477:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"468:3:11"},"nodeType":"YulFunctionCall","src":"468:11:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"462:5:11"},"nodeType":"YulFunctionCall","src":"462:18:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"442:6:11"},"nodeType":"YulFunctionCall","src":"442:39:11"},"nodeType":"YulExpressionStatement","src":"442:39:11"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"389:1:11"},{"name":"length","nodeType":"YulIdentifier","src":"392:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"386:2:11"},"nodeType":"YulFunctionCall","src":"386:13:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"400:19:11","statements":[{"nodeType":"YulAssignment","src":"402:15:11","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"411:1:11"},{"kind":"number","nodeType":"YulLiteral","src":"414:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"407:3:11"},"nodeType":"YulFunctionCall","src":"407:10:11"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"402:1:11"}]}]},"pre":{"nodeType":"YulBlock","src":"382:3:11","statements":[]},"src":"378:113:11"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"511:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"516:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"507:3:11"},"nodeType":"YulFunctionCall","src":"507:16:11"},{"kind":"number","nodeType":"YulLiteral","src":"525:1:11","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"500:6:11"},"nodeType":"YulFunctionCall","src":"500:27:11"},"nodeType":"YulExpressionStatement","src":"500:27:11"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"331:3:11","type":""},{"name":"dst","nodeType":"YulTypedName","src":"336:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"341:6:11","type":""}],"src":"287:246:11"},{"body":{"nodeType":"YulBlock","src":"587:54:11","statements":[{"nodeType":"YulAssignment","src":"597:38:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"615:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"622:2:11","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"611:3:11"},"nodeType":"YulFunctionCall","src":"611:14:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"631:2:11","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"627:3:11"},"nodeType":"YulFunctionCall","src":"627:7:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"607:3:11"},"nodeType":"YulFunctionCall","src":"607:28:11"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"597:6:11"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"570:5:11","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"580:6:11","type":""}],"src":"539:102:11"},{"body":{"nodeType":"YulBlock","src":"739:285:11","statements":[{"nodeType":"YulVariableDeclaration","src":"749:53:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"796:5:11"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"763:32:11"},"nodeType":"YulFunctionCall","src":"763:39:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"753:6:11","type":""}]},{"nodeType":"YulAssignment","src":"811:78:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"877:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"882:6:11"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"818:58:11"},"nodeType":"YulFunctionCall","src":"818:71:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"811:3:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"937:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"944:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"933:3:11"},"nodeType":"YulFunctionCall","src":"933:16:11"},{"name":"pos","nodeType":"YulIdentifier","src":"951:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"956:6:11"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"898:34:11"},"nodeType":"YulFunctionCall","src":"898:65:11"},"nodeType":"YulExpressionStatement","src":"898:65:11"},{"nodeType":"YulAssignment","src":"972:46:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"983:3:11"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1010:6:11"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"988:21:11"},"nodeType":"YulFunctionCall","src":"988:29:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"979:3:11"},"nodeType":"YulFunctionCall","src":"979:39:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"972:3:11"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"720:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"727:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"735:3:11","type":""}],"src":"647:377:11"},{"body":{"nodeType":"YulBlock","src":"1148:195:11","statements":[{"nodeType":"YulAssignment","src":"1158:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1170:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1181:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1166:3:11"},"nodeType":"YulFunctionCall","src":"1166:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1158:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1205:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1216:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1201:3:11"},"nodeType":"YulFunctionCall","src":"1201:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1224:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"1230:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1220:3:11"},"nodeType":"YulFunctionCall","src":"1220:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1194:6:11"},"nodeType":"YulFunctionCall","src":"1194:47:11"},"nodeType":"YulExpressionStatement","src":"1194:47:11"},{"nodeType":"YulAssignment","src":"1250:86:11","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1322:6:11"},{"name":"tail","nodeType":"YulIdentifier","src":"1331:4:11"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1258:63:11"},"nodeType":"YulFunctionCall","src":"1258:78:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1250:4:11"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1120:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1132:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1143:4:11","type":""}],"src":"1030:313:11"},{"body":{"nodeType":"YulBlock","src":"1394:32:11","statements":[{"nodeType":"YulAssignment","src":"1404:16:11","value":{"name":"value","nodeType":"YulIdentifier","src":"1415:5:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1404:7:11"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1376:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1386:7:11","type":""}],"src":"1349:77:11"},{"body":{"nodeType":"YulBlock","src":"1497:53:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1514:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1537:5:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1519:17:11"},"nodeType":"YulFunctionCall","src":"1519:24:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1507:6:11"},"nodeType":"YulFunctionCall","src":"1507:37:11"},"nodeType":"YulExpressionStatement","src":"1507:37:11"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1485:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1492:3:11","type":""}],"src":"1432:118:11"},{"body":{"nodeType":"YulBlock","src":"1654:124:11","statements":[{"nodeType":"YulAssignment","src":"1664:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1676:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1687:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1672:3:11"},"nodeType":"YulFunctionCall","src":"1672:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1664:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1744:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1757:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1768:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1753:3:11"},"nodeType":"YulFunctionCall","src":"1753:17:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"1700:43:11"},"nodeType":"YulFunctionCall","src":"1700:71:11"},"nodeType":"YulExpressionStatement","src":"1700:71:11"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1626:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1638:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1649:4:11","type":""}],"src":"1556:222:11"},{"body":{"nodeType":"YulBlock","src":"1824:35:11","statements":[{"nodeType":"YulAssignment","src":"1834:19:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1850:2:11","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1844:5:11"},"nodeType":"YulFunctionCall","src":"1844:9:11"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1834:6:11"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1817:6:11","type":""}],"src":"1784:75:11"},{"body":{"nodeType":"YulBlock","src":"1954:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1971:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1974:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1964:6:11"},"nodeType":"YulFunctionCall","src":"1964:12:11"},"nodeType":"YulExpressionStatement","src":"1964:12:11"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1865:117:11"},{"body":{"nodeType":"YulBlock","src":"2077:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2094:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2097:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2087:6:11"},"nodeType":"YulFunctionCall","src":"2087:12:11"},"nodeType":"YulExpressionStatement","src":"2087:12:11"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1988:117:11"},{"body":{"nodeType":"YulBlock","src":"2156:81:11","statements":[{"nodeType":"YulAssignment","src":"2166:65:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2181:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"2188:42:11","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2177:3:11"},"nodeType":"YulFunctionCall","src":"2177:54:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2166:7:11"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2138:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2148:7:11","type":""}],"src":"2111:126:11"},{"body":{"nodeType":"YulBlock","src":"2288:51:11","statements":[{"nodeType":"YulAssignment","src":"2298:35:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2327:5:11"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"2309:17:11"},"nodeType":"YulFunctionCall","src":"2309:24:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2298:7:11"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2270:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2280:7:11","type":""}],"src":"2243:96:11"},{"body":{"nodeType":"YulBlock","src":"2388:79:11","statements":[{"body":{"nodeType":"YulBlock","src":"2445:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2454:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2457:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2447:6:11"},"nodeType":"YulFunctionCall","src":"2447:12:11"},"nodeType":"YulExpressionStatement","src":"2447:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2411:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2436:5:11"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2418:17:11"},"nodeType":"YulFunctionCall","src":"2418:24:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2408:2:11"},"nodeType":"YulFunctionCall","src":"2408:35:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2401:6:11"},"nodeType":"YulFunctionCall","src":"2401:43:11"},"nodeType":"YulIf","src":"2398:63:11"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2381:5:11","type":""}],"src":"2345:122:11"},{"body":{"nodeType":"YulBlock","src":"2525:87:11","statements":[{"nodeType":"YulAssignment","src":"2535:29:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2557:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2544:12:11"},"nodeType":"YulFunctionCall","src":"2544:20:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2535:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2600:5:11"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2573:26:11"},"nodeType":"YulFunctionCall","src":"2573:33:11"},"nodeType":"YulExpressionStatement","src":"2573:33:11"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2503:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"2511:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2519:5:11","type":""}],"src":"2473:139:11"},{"body":{"nodeType":"YulBlock","src":"2661:79:11","statements":[{"body":{"nodeType":"YulBlock","src":"2718:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2727:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2730:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2720:6:11"},"nodeType":"YulFunctionCall","src":"2720:12:11"},"nodeType":"YulExpressionStatement","src":"2720:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2684:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2709:5:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2691:17:11"},"nodeType":"YulFunctionCall","src":"2691:24:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2681:2:11"},"nodeType":"YulFunctionCall","src":"2681:35:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2674:6:11"},"nodeType":"YulFunctionCall","src":"2674:43:11"},"nodeType":"YulIf","src":"2671:63:11"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2654:5:11","type":""}],"src":"2618:122:11"},{"body":{"nodeType":"YulBlock","src":"2798:87:11","statements":[{"nodeType":"YulAssignment","src":"2808:29:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2830:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2817:12:11"},"nodeType":"YulFunctionCall","src":"2817:20:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2808:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2873:5:11"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2846:26:11"},"nodeType":"YulFunctionCall","src":"2846:33:11"},"nodeType":"YulExpressionStatement","src":"2846:33:11"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2776:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"2784:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2792:5:11","type":""}],"src":"2746:139:11"},{"body":{"nodeType":"YulBlock","src":"2974:391:11","statements":[{"body":{"nodeType":"YulBlock","src":"3020:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3022:77:11"},"nodeType":"YulFunctionCall","src":"3022:79:11"},"nodeType":"YulExpressionStatement","src":"3022:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2995:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"3004:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2991:3:11"},"nodeType":"YulFunctionCall","src":"2991:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"3016:2:11","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2987:3:11"},"nodeType":"YulFunctionCall","src":"2987:32:11"},"nodeType":"YulIf","src":"2984:119:11"},{"nodeType":"YulBlock","src":"3113:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"3128:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"3142:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3132:6:11","type":""}]},{"nodeType":"YulAssignment","src":"3157:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3192:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"3203:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3188:3:11"},"nodeType":"YulFunctionCall","src":"3188:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3212:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3167:20:11"},"nodeType":"YulFunctionCall","src":"3167:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3157:6:11"}]}]},{"nodeType":"YulBlock","src":"3240:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"3255:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"3269:2:11","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3259:6:11","type":""}]},{"nodeType":"YulAssignment","src":"3285:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3320:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"3331:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3316:3:11"},"nodeType":"YulFunctionCall","src":"3316:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3340:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3295:20:11"},"nodeType":"YulFunctionCall","src":"3295:53:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3285:6:11"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2936:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2947:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2959:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2967:6:11","type":""}],"src":"2891:474:11"},{"body":{"nodeType":"YulBlock","src":"3413:48:11","statements":[{"nodeType":"YulAssignment","src":"3423:32:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3448:5:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3441:6:11"},"nodeType":"YulFunctionCall","src":"3441:13:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3434:6:11"},"nodeType":"YulFunctionCall","src":"3434:21:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3423:7:11"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3395:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3405:7:11","type":""}],"src":"3371:90:11"},{"body":{"nodeType":"YulBlock","src":"3526:50:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3543:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3563:5:11"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"3548:14:11"},"nodeType":"YulFunctionCall","src":"3548:21:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3536:6:11"},"nodeType":"YulFunctionCall","src":"3536:34:11"},"nodeType":"YulExpressionStatement","src":"3536:34:11"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3514:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3521:3:11","type":""}],"src":"3467:109:11"},{"body":{"nodeType":"YulBlock","src":"3674:118:11","statements":[{"nodeType":"YulAssignment","src":"3684:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3696:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3707:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3692:3:11"},"nodeType":"YulFunctionCall","src":"3692:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3684:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3758:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3771:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3782:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3767:3:11"},"nodeType":"YulFunctionCall","src":"3767:17:11"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"3720:37:11"},"nodeType":"YulFunctionCall","src":"3720:65:11"},"nodeType":"YulExpressionStatement","src":"3720:65:11"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3646:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3658:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3669:4:11","type":""}],"src":"3582:210:11"},{"body":{"nodeType":"YulBlock","src":"3864:263:11","statements":[{"body":{"nodeType":"YulBlock","src":"3910:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3912:77:11"},"nodeType":"YulFunctionCall","src":"3912:79:11"},"nodeType":"YulExpressionStatement","src":"3912:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3885:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"3894:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3881:3:11"},"nodeType":"YulFunctionCall","src":"3881:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"3906:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3877:3:11"},"nodeType":"YulFunctionCall","src":"3877:32:11"},"nodeType":"YulIf","src":"3874:119:11"},{"nodeType":"YulBlock","src":"4003:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"4018:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"4032:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4022:6:11","type":""}]},{"nodeType":"YulAssignment","src":"4047:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4082:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"4093:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4078:3:11"},"nodeType":"YulFunctionCall","src":"4078:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4102:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4057:20:11"},"nodeType":"YulFunctionCall","src":"4057:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4047:6:11"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3834:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3845:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3857:6:11","type":""}],"src":"3798:329:11"},{"body":{"nodeType":"YulBlock","src":"4199:263:11","statements":[{"body":{"nodeType":"YulBlock","src":"4245:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4247:77:11"},"nodeType":"YulFunctionCall","src":"4247:79:11"},"nodeType":"YulExpressionStatement","src":"4247:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4220:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"4229:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4216:3:11"},"nodeType":"YulFunctionCall","src":"4216:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"4241:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4212:3:11"},"nodeType":"YulFunctionCall","src":"4212:32:11"},"nodeType":"YulIf","src":"4209:119:11"},{"nodeType":"YulBlock","src":"4338:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"4353:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"4367:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4357:6:11","type":""}]},{"nodeType":"YulAssignment","src":"4382:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4417:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"4428:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4413:3:11"},"nodeType":"YulFunctionCall","src":"4413:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4437:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4392:20:11"},"nodeType":"YulFunctionCall","src":"4392:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4382:6:11"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4169:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4180:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4192:6:11","type":""}],"src":"4133:329:11"},{"body":{"nodeType":"YulBlock","src":"4568:519:11","statements":[{"body":{"nodeType":"YulBlock","src":"4614:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4616:77:11"},"nodeType":"YulFunctionCall","src":"4616:79:11"},"nodeType":"YulExpressionStatement","src":"4616:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4589:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"4598:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4585:3:11"},"nodeType":"YulFunctionCall","src":"4585:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"4610:2:11","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4581:3:11"},"nodeType":"YulFunctionCall","src":"4581:32:11"},"nodeType":"YulIf","src":"4578:119:11"},{"nodeType":"YulBlock","src":"4707:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"4722:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"4736:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4726:6:11","type":""}]},{"nodeType":"YulAssignment","src":"4751:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4786:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"4797:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4782:3:11"},"nodeType":"YulFunctionCall","src":"4782:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4806:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4761:20:11"},"nodeType":"YulFunctionCall","src":"4761:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4751:6:11"}]}]},{"nodeType":"YulBlock","src":"4834:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"4849:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"4863:2:11","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4853:6:11","type":""}]},{"nodeType":"YulAssignment","src":"4879:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4914:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"4925:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4910:3:11"},"nodeType":"YulFunctionCall","src":"4910:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4934:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4889:20:11"},"nodeType":"YulFunctionCall","src":"4889:53:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4879:6:11"}]}]},{"nodeType":"YulBlock","src":"4962:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"4977:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"4991:2:11","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4981:6:11","type":""}]},{"nodeType":"YulAssignment","src":"5007:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5042:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"5053:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5038:3:11"},"nodeType":"YulFunctionCall","src":"5038:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5062:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5017:20:11"},"nodeType":"YulFunctionCall","src":"5017:53:11"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5007:6:11"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4522:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4533:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4545:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4553:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4561:6:11","type":""}],"src":"4468:619:11"},{"body":{"nodeType":"YulBlock","src":"5136:43:11","statements":[{"nodeType":"YulAssignment","src":"5146:27:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5161:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"5168:4:11","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5157:3:11"},"nodeType":"YulFunctionCall","src":"5157:16:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5146:7:11"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5118:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5128:7:11","type":""}],"src":"5093:86:11"},{"body":{"nodeType":"YulBlock","src":"5246:51:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5263:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5284:5:11"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"5268:15:11"},"nodeType":"YulFunctionCall","src":"5268:22:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5256:6:11"},"nodeType":"YulFunctionCall","src":"5256:35:11"},"nodeType":"YulExpressionStatement","src":"5256:35:11"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5234:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5241:3:11","type":""}],"src":"5185:112:11"},{"body":{"nodeType":"YulBlock","src":"5397:120:11","statements":[{"nodeType":"YulAssignment","src":"5407:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5419:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"5430:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5415:3:11"},"nodeType":"YulFunctionCall","src":"5415:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5407:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5483:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5496:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"5507:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5492:3:11"},"nodeType":"YulFunctionCall","src":"5492:17:11"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"5443:39:11"},"nodeType":"YulFunctionCall","src":"5443:67:11"},"nodeType":"YulExpressionStatement","src":"5443:67:11"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5369:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5381:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5392:4:11","type":""}],"src":"5303:214:11"},{"body":{"nodeType":"YulBlock","src":"5733:454:11","statements":[{"nodeType":"YulAssignment","src":"5743:27:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5755:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"5766:3:11","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5751:3:11"},"nodeType":"YulFunctionCall","src":"5751:19:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5743:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5824:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5837:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"5848:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5833:3:11"},"nodeType":"YulFunctionCall","src":"5833:17:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"5780:43:11"},"nodeType":"YulFunctionCall","src":"5780:71:11"},"nodeType":"YulExpressionStatement","src":"5780:71:11"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"5905:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5918:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"5929:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5914:3:11"},"nodeType":"YulFunctionCall","src":"5914:18:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"5861:43:11"},"nodeType":"YulFunctionCall","src":"5861:72:11"},"nodeType":"YulExpressionStatement","src":"5861:72:11"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"5987:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6000:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"6011:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5996:3:11"},"nodeType":"YulFunctionCall","src":"5996:18:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"5943:43:11"},"nodeType":"YulFunctionCall","src":"5943:72:11"},"nodeType":"YulExpressionStatement","src":"5943:72:11"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"6069:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6082:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"6093:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6078:3:11"},"nodeType":"YulFunctionCall","src":"6078:18:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"6025:43:11"},"nodeType":"YulFunctionCall","src":"6025:72:11"},"nodeType":"YulExpressionStatement","src":"6025:72:11"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"6151:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6164:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"6175:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6160:3:11"},"nodeType":"YulFunctionCall","src":"6160:19:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"6107:43:11"},"nodeType":"YulFunctionCall","src":"6107:73:11"},"nodeType":"YulExpressionStatement","src":"6107:73:11"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5673:9:11","type":""},{"name":"value4","nodeType":"YulTypedName","src":"5685:6:11","type":""},{"name":"value3","nodeType":"YulTypedName","src":"5693:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5701:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5709:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5717:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5728:4:11","type":""}],"src":"5523:664:11"},{"body":{"nodeType":"YulBlock","src":"6258:53:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6275:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6298:5:11"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"6280:17:11"},"nodeType":"YulFunctionCall","src":"6280:24:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6268:6:11"},"nodeType":"YulFunctionCall","src":"6268:37:11"},"nodeType":"YulExpressionStatement","src":"6268:37:11"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6246:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6253:3:11","type":""}],"src":"6193:118:11"},{"body":{"nodeType":"YulBlock","src":"6415:124:11","statements":[{"nodeType":"YulAssignment","src":"6425:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6437:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"6448:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6433:3:11"},"nodeType":"YulFunctionCall","src":"6433:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6425:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6505:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6518:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"6529:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6514:3:11"},"nodeType":"YulFunctionCall","src":"6514:17:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"6461:43:11"},"nodeType":"YulFunctionCall","src":"6461:71:11"},"nodeType":"YulExpressionStatement","src":"6461:71:11"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6387:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6399:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6410:4:11","type":""}],"src":"6317:222:11"},{"body":{"nodeType":"YulBlock","src":"6628:391:11","statements":[{"body":{"nodeType":"YulBlock","src":"6674:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6676:77:11"},"nodeType":"YulFunctionCall","src":"6676:79:11"},"nodeType":"YulExpressionStatement","src":"6676:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6649:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"6658:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6645:3:11"},"nodeType":"YulFunctionCall","src":"6645:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"6670:2:11","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6641:3:11"},"nodeType":"YulFunctionCall","src":"6641:32:11"},"nodeType":"YulIf","src":"6638:119:11"},{"nodeType":"YulBlock","src":"6767:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"6782:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"6796:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6786:6:11","type":""}]},{"nodeType":"YulAssignment","src":"6811:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6846:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"6857:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6842:3:11"},"nodeType":"YulFunctionCall","src":"6842:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6866:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6821:20:11"},"nodeType":"YulFunctionCall","src":"6821:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6811:6:11"}]}]},{"nodeType":"YulBlock","src":"6894:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"6909:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"6923:2:11","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6913:6:11","type":""}]},{"nodeType":"YulAssignment","src":"6939:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6974:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"6985:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6970:3:11"},"nodeType":"YulFunctionCall","src":"6970:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6994:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6949:20:11"},"nodeType":"YulFunctionCall","src":"6949:53:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6939:6:11"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6590:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6601:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6613:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6621:6:11","type":""}],"src":"6545:474:11"},{"body":{"nodeType":"YulBlock","src":"7179:288:11","statements":[{"nodeType":"YulAssignment","src":"7189:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7201:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"7212:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7197:3:11"},"nodeType":"YulFunctionCall","src":"7197:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7189:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7269:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7282:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"7293:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7278:3:11"},"nodeType":"YulFunctionCall","src":"7278:17:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"7225:43:11"},"nodeType":"YulFunctionCall","src":"7225:71:11"},"nodeType":"YulExpressionStatement","src":"7225:71:11"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"7350:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7363:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"7374:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7359:3:11"},"nodeType":"YulFunctionCall","src":"7359:18:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"7306:43:11"},"nodeType":"YulFunctionCall","src":"7306:72:11"},"nodeType":"YulExpressionStatement","src":"7306:72:11"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"7432:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7445:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"7456:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7441:3:11"},"nodeType":"YulFunctionCall","src":"7441:18:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"7388:43:11"},"nodeType":"YulFunctionCall","src":"7388:72:11"},"nodeType":"YulExpressionStatement","src":"7388:72:11"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7135:9:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7147:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7155:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7163:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7174:4:11","type":""}],"src":"7025:442:11"},{"body":{"nodeType":"YulBlock","src":"7501:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7518:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7521:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7511:6:11"},"nodeType":"YulFunctionCall","src":"7511:88:11"},"nodeType":"YulExpressionStatement","src":"7511:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7615:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7618:4:11","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7608:6:11"},"nodeType":"YulFunctionCall","src":"7608:15:11"},"nodeType":"YulExpressionStatement","src":"7608:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7639:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7642:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7632:6:11"},"nodeType":"YulFunctionCall","src":"7632:15:11"},"nodeType":"YulExpressionStatement","src":"7632:15:11"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"7473:180:11"},{"body":{"nodeType":"YulBlock","src":"7710:269:11","statements":[{"nodeType":"YulAssignment","src":"7720:22:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7734:4:11"},{"kind":"number","nodeType":"YulLiteral","src":"7740:1:11","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7730:3:11"},"nodeType":"YulFunctionCall","src":"7730:12:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"7720:6:11"}]},{"nodeType":"YulVariableDeclaration","src":"7751:38:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7781:4:11"},{"kind":"number","nodeType":"YulLiteral","src":"7787:1:11","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7777:3:11"},"nodeType":"YulFunctionCall","src":"7777:12:11"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"7755:18:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"7828:51:11","statements":[{"nodeType":"YulAssignment","src":"7842:27:11","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7856:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"7864:4:11","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7852:3:11"},"nodeType":"YulFunctionCall","src":"7852:17:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"7842:6:11"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"7808:18:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7801:6:11"},"nodeType":"YulFunctionCall","src":"7801:26:11"},"nodeType":"YulIf","src":"7798:81:11"},{"body":{"nodeType":"YulBlock","src":"7931:42:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"7945:16:11"},"nodeType":"YulFunctionCall","src":"7945:18:11"},"nodeType":"YulExpressionStatement","src":"7945:18:11"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"7895:18:11"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7918:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"7926:2:11","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7915:2:11"},"nodeType":"YulFunctionCall","src":"7915:14:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7892:2:11"},"nodeType":"YulFunctionCall","src":"7892:38:11"},"nodeType":"YulIf","src":"7889:84:11"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"7694:4:11","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"7703:6:11","type":""}],"src":"7659:320:11"},{"body":{"nodeType":"YulBlock","src":"8013:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8030:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8033:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8023:6:11"},"nodeType":"YulFunctionCall","src":"8023:88:11"},"nodeType":"YulExpressionStatement","src":"8023:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8127:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8130:4:11","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8120:6:11"},"nodeType":"YulFunctionCall","src":"8120:15:11"},"nodeType":"YulExpressionStatement","src":"8120:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8151:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8154:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8144:6:11"},"nodeType":"YulFunctionCall","src":"8144:15:11"},"nodeType":"YulExpressionStatement","src":"8144:15:11"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"7985:180:11"},{"body":{"nodeType":"YulBlock","src":"8215:147:11","statements":[{"nodeType":"YulAssignment","src":"8225:25:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8248:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8230:17:11"},"nodeType":"YulFunctionCall","src":"8230:20:11"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"8225:1:11"}]},{"nodeType":"YulAssignment","src":"8259:25:11","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"8282:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8264:17:11"},"nodeType":"YulFunctionCall","src":"8264:20:11"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"8259:1:11"}]},{"nodeType":"YulAssignment","src":"8293:16:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8304:1:11"},{"name":"y","nodeType":"YulIdentifier","src":"8307:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8300:3:11"},"nodeType":"YulFunctionCall","src":"8300:9:11"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"8293:3:11"}]},{"body":{"nodeType":"YulBlock","src":"8333:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"8335:16:11"},"nodeType":"YulFunctionCall","src":"8335:18:11"},"nodeType":"YulExpressionStatement","src":"8335:18:11"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8325:1:11"},{"name":"sum","nodeType":"YulIdentifier","src":"8328:3:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8322:2:11"},"nodeType":"YulFunctionCall","src":"8322:10:11"},"nodeType":"YulIf","src":"8319:36:11"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"8202:1:11","type":""},{"name":"y","nodeType":"YulTypedName","src":"8205:1:11","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"8211:3:11","type":""}],"src":"8171:191:11"},{"body":{"nodeType":"YulBlock","src":"8416:362:11","statements":[{"nodeType":"YulAssignment","src":"8426:25:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8449:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8431:17:11"},"nodeType":"YulFunctionCall","src":"8431:20:11"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"8426:1:11"}]},{"nodeType":"YulAssignment","src":"8460:25:11","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"8483:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8465:17:11"},"nodeType":"YulFunctionCall","src":"8465:20:11"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"8460:1:11"}]},{"nodeType":"YulVariableDeclaration","src":"8494:28:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8517:1:11"},{"name":"y","nodeType":"YulIdentifier","src":"8520:1:11"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8513:3:11"},"nodeType":"YulFunctionCall","src":"8513:9:11"},"variables":[{"name":"product_raw","nodeType":"YulTypedName","src":"8498:11:11","type":""}]},{"nodeType":"YulAssignment","src":"8531:41:11","value":{"arguments":[{"name":"product_raw","nodeType":"YulIdentifier","src":"8560:11:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8542:17:11"},"nodeType":"YulFunctionCall","src":"8542:30:11"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"8531:7:11"}]},{"body":{"nodeType":"YulBlock","src":"8749:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"8751:16:11"},"nodeType":"YulFunctionCall","src":"8751:18:11"},"nodeType":"YulExpressionStatement","src":"8751:18:11"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8682:1:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8675:6:11"},"nodeType":"YulFunctionCall","src":"8675:9:11"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"8705:1:11"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"8712:7:11"},{"name":"x","nodeType":"YulIdentifier","src":"8721:1:11"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"8708:3:11"},"nodeType":"YulFunctionCall","src":"8708:15:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8702:2:11"},"nodeType":"YulFunctionCall","src":"8702:22:11"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"8655:2:11"},"nodeType":"YulFunctionCall","src":"8655:83:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8635:6:11"},"nodeType":"YulFunctionCall","src":"8635:113:11"},"nodeType":"YulIf","src":"8632:139:11"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"8399:1:11","type":""},{"name":"y","nodeType":"YulTypedName","src":"8402:1:11","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"8408:7:11","type":""}],"src":"8368:410:11"},{"body":{"nodeType":"YulBlock","src":"8812:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8829:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8832:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8822:6:11"},"nodeType":"YulFunctionCall","src":"8822:88:11"},"nodeType":"YulExpressionStatement","src":"8822:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8926:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8929:4:11","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8919:6:11"},"nodeType":"YulFunctionCall","src":"8919:15:11"},"nodeType":"YulExpressionStatement","src":"8919:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8950:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8953:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8943:6:11"},"nodeType":"YulFunctionCall","src":"8943:15:11"},"nodeType":"YulExpressionStatement","src":"8943:15:11"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"8784:180:11"},{"body":{"nodeType":"YulBlock","src":"9012:143:11","statements":[{"nodeType":"YulAssignment","src":"9022:25:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9045:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"9027:17:11"},"nodeType":"YulFunctionCall","src":"9027:20:11"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"9022:1:11"}]},{"nodeType":"YulAssignment","src":"9056:25:11","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"9079:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"9061:17:11"},"nodeType":"YulFunctionCall","src":"9061:20:11"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"9056:1:11"}]},{"body":{"nodeType":"YulBlock","src":"9103:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"9105:16:11"},"nodeType":"YulFunctionCall","src":"9105:18:11"},"nodeType":"YulExpressionStatement","src":"9105:18:11"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"9100:1:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9093:6:11"},"nodeType":"YulFunctionCall","src":"9093:9:11"},"nodeType":"YulIf","src":"9090:35:11"},{"nodeType":"YulAssignment","src":"9135:14:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9144:1:11"},{"name":"y","nodeType":"YulIdentifier","src":"9147:1:11"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9140:3:11"},"nodeType":"YulFunctionCall","src":"9140:9:11"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"9135:1:11"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"9001:1:11","type":""},{"name":"y","nodeType":"YulTypedName","src":"9004:1:11","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"9010:1:11","type":""}],"src":"8970:185:11"},{"body":{"nodeType":"YulBlock","src":"9206:149:11","statements":[{"nodeType":"YulAssignment","src":"9216:25:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9239:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"9221:17:11"},"nodeType":"YulFunctionCall","src":"9221:20:11"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"9216:1:11"}]},{"nodeType":"YulAssignment","src":"9250:25:11","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"9273:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"9255:17:11"},"nodeType":"YulFunctionCall","src":"9255:20:11"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"9250:1:11"}]},{"nodeType":"YulAssignment","src":"9284:17:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9296:1:11"},{"name":"y","nodeType":"YulIdentifier","src":"9299:1:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9292:3:11"},"nodeType":"YulFunctionCall","src":"9292:9:11"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"9284:4:11"}]},{"body":{"nodeType":"YulBlock","src":"9326:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"9328:16:11"},"nodeType":"YulFunctionCall","src":"9328:18:11"},"nodeType":"YulExpressionStatement","src":"9328:18:11"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"9317:4:11"},{"name":"x","nodeType":"YulIdentifier","src":"9323:1:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9314:2:11"},"nodeType":"YulFunctionCall","src":"9314:11:11"},"nodeType":"YulIf","src":"9311:37:11"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"9192:1:11","type":""},{"name":"y","nodeType":"YulTypedName","src":"9195:1:11","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"9201:4:11","type":""}],"src":"9161:194:11"},{"body":{"nodeType":"YulBlock","src":"9404:190:11","statements":[{"nodeType":"YulAssignment","src":"9414:33:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9441:5:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"9423:17:11"},"nodeType":"YulFunctionCall","src":"9423:24:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"9414:5:11"}]},{"body":{"nodeType":"YulBlock","src":"9537:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"9539:16:11"},"nodeType":"YulFunctionCall","src":"9539:18:11"},"nodeType":"YulExpressionStatement","src":"9539:18:11"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9462:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"9469:66:11","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"9459:2:11"},"nodeType":"YulFunctionCall","src":"9459:77:11"},"nodeType":"YulIf","src":"9456:103:11"},{"nodeType":"YulAssignment","src":"9568:20:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9579:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"9586:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9575:3:11"},"nodeType":"YulFunctionCall","src":"9575:13:11"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"9568:3:11"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9390:5:11","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"9400:3:11","type":""}],"src":"9361:233:11"},{"body":{"nodeType":"YulBlock","src":"9706:75:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9728:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"9736:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9724:3:11"},"nodeType":"YulFunctionCall","src":"9724:14:11"},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"9740:33:11","type":"","value":"ERC20: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9717:6:11"},"nodeType":"YulFunctionCall","src":"9717:57:11"},"nodeType":"YulExpressionStatement","src":"9717:57:11"}]},"name":"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"9698:6:11","type":""}],"src":"9600:181:11"},{"body":{"nodeType":"YulBlock","src":"9933:220:11","statements":[{"nodeType":"YulAssignment","src":"9943:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10009:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"10014:2:11","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9950:58:11"},"nodeType":"YulFunctionCall","src":"9950:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9943:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10115:3:11"}],"functionName":{"name":"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","nodeType":"YulIdentifier","src":"10026:88:11"},"nodeType":"YulFunctionCall","src":"10026:93:11"},"nodeType":"YulExpressionStatement","src":"10026:93:11"},{"nodeType":"YulAssignment","src":"10128:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10139:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"10144:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10135:3:11"},"nodeType":"YulFunctionCall","src":"10135:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10128:3:11"}]}]},"name":"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9921:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9929:3:11","type":""}],"src":"9787:366:11"},{"body":{"nodeType":"YulBlock","src":"10330:248:11","statements":[{"nodeType":"YulAssignment","src":"10340:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10352:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"10363:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10348:3:11"},"nodeType":"YulFunctionCall","src":"10348:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10340:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10387:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"10398:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10383:3:11"},"nodeType":"YulFunctionCall","src":"10383:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10406:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"10412:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10402:3:11"},"nodeType":"YulFunctionCall","src":"10402:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10376:6:11"},"nodeType":"YulFunctionCall","src":"10376:47:11"},"nodeType":"YulExpressionStatement","src":"10376:47:11"},{"nodeType":"YulAssignment","src":"10432:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10566:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10440:124:11"},"nodeType":"YulFunctionCall","src":"10440:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10432:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10310:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10325:4:11","type":""}],"src":"10159:419:11"},{"body":{"nodeType":"YulBlock","src":"10710:206:11","statements":[{"nodeType":"YulAssignment","src":"10720:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10732:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"10743:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10728:3:11"},"nodeType":"YulFunctionCall","src":"10728:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10720:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10800:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10813:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"10824:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10809:3:11"},"nodeType":"YulFunctionCall","src":"10809:17:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"10756:43:11"},"nodeType":"YulFunctionCall","src":"10756:71:11"},"nodeType":"YulExpressionStatement","src":"10756:71:11"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"10881:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10894:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"10905:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10890:3:11"},"nodeType":"YulFunctionCall","src":"10890:18:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"10837:43:11"},"nodeType":"YulFunctionCall","src":"10837:72:11"},"nodeType":"YulExpressionStatement","src":"10837:72:11"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10674:9:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10686:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10694:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10705:4:11","type":""}],"src":"10584:332:11"},{"body":{"nodeType":"YulBlock","src":"11028:118:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11050:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"11058:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11046:3:11"},"nodeType":"YulFunctionCall","src":"11046:14:11"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"11062:34:11","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11039:6:11"},"nodeType":"YulFunctionCall","src":"11039:58:11"},"nodeType":"YulExpressionStatement","src":"11039:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11118:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"11126:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11114:3:11"},"nodeType":"YulFunctionCall","src":"11114:15:11"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"11131:7:11","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11107:6:11"},"nodeType":"YulFunctionCall","src":"11107:32:11"},"nodeType":"YulExpressionStatement","src":"11107:32:11"}]},"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11020:6:11","type":""}],"src":"10922:224:11"},{"body":{"nodeType":"YulBlock","src":"11298:220:11","statements":[{"nodeType":"YulAssignment","src":"11308:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11374:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"11379:2:11","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11315:58:11"},"nodeType":"YulFunctionCall","src":"11315:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11308:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11480:3:11"}],"functionName":{"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulIdentifier","src":"11391:88:11"},"nodeType":"YulFunctionCall","src":"11391:93:11"},"nodeType":"YulExpressionStatement","src":"11391:93:11"},{"nodeType":"YulAssignment","src":"11493:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11504:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"11509:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11500:3:11"},"nodeType":"YulFunctionCall","src":"11500:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11493:3:11"}]}]},"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11286:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11294:3:11","type":""}],"src":"11152:366:11"},{"body":{"nodeType":"YulBlock","src":"11695:248:11","statements":[{"nodeType":"YulAssignment","src":"11705:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11717:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"11728:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11713:3:11"},"nodeType":"YulFunctionCall","src":"11713:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11705:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11752:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"11763:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11748:3:11"},"nodeType":"YulFunctionCall","src":"11748:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11771:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"11777:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11767:3:11"},"nodeType":"YulFunctionCall","src":"11767:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11741:6:11"},"nodeType":"YulFunctionCall","src":"11741:47:11"},"nodeType":"YulExpressionStatement","src":"11741:47:11"},{"nodeType":"YulAssignment","src":"11797:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11931:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11805:124:11"},"nodeType":"YulFunctionCall","src":"11805:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11797:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11675:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11690:4:11","type":""}],"src":"11524:419:11"},{"body":{"nodeType":"YulBlock","src":"12012:80:11","statements":[{"nodeType":"YulAssignment","src":"12022:22:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12037:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12031:5:11"},"nodeType":"YulFunctionCall","src":"12031:13:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"12022:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12080:5:11"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"12053:26:11"},"nodeType":"YulFunctionCall","src":"12053:33:11"},"nodeType":"YulExpressionStatement","src":"12053:33:11"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"11990:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"11998:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"12006:5:11","type":""}],"src":"11949:143:11"},{"body":{"nodeType":"YulBlock","src":"12175:274:11","statements":[{"body":{"nodeType":"YulBlock","src":"12221:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"12223:77:11"},"nodeType":"YulFunctionCall","src":"12223:79:11"},"nodeType":"YulExpressionStatement","src":"12223:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12196:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"12205:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12192:3:11"},"nodeType":"YulFunctionCall","src":"12192:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"12217:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12188:3:11"},"nodeType":"YulFunctionCall","src":"12188:32:11"},"nodeType":"YulIf","src":"12185:119:11"},{"nodeType":"YulBlock","src":"12314:128:11","statements":[{"nodeType":"YulVariableDeclaration","src":"12329:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"12343:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12333:6:11","type":""}]},{"nodeType":"YulAssignment","src":"12358:74:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12404:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"12415:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12400:3:11"},"nodeType":"YulFunctionCall","src":"12400:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12424:7:11"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"12368:31:11"},"nodeType":"YulFunctionCall","src":"12368:64:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12358:6:11"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12145:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12156:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12168:6:11","type":""}],"src":"12098:351:11"},{"body":{"nodeType":"YulBlock","src":"12581:206:11","statements":[{"nodeType":"YulAssignment","src":"12591:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12603:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"12614:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12599:3:11"},"nodeType":"YulFunctionCall","src":"12599:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12591:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12671:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12684:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"12695:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12680:3:11"},"nodeType":"YulFunctionCall","src":"12680:17:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"12627:43:11"},"nodeType":"YulFunctionCall","src":"12627:71:11"},"nodeType":"YulExpressionStatement","src":"12627:71:11"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"12752:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12765:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"12776:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12761:3:11"},"nodeType":"YulFunctionCall","src":"12761:18:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"12708:43:11"},"nodeType":"YulFunctionCall","src":"12708:72:11"},"nodeType":"YulExpressionStatement","src":"12708:72:11"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12545:9:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12557:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12565:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12576:4:11","type":""}],"src":"12455:332:11"},{"body":{"nodeType":"YulBlock","src":"12899:117:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12921:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"12929:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12917:3:11"},"nodeType":"YulFunctionCall","src":"12917:14:11"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"12933:34:11","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12910:6:11"},"nodeType":"YulFunctionCall","src":"12910:58:11"},"nodeType":"YulExpressionStatement","src":"12910:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12989:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"12997:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12985:3:11"},"nodeType":"YulFunctionCall","src":"12985:15:11"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"13002:6:11","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12978:6:11"},"nodeType":"YulFunctionCall","src":"12978:31:11"},"nodeType":"YulExpressionStatement","src":"12978:31:11"}]},"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12891:6:11","type":""}],"src":"12793:223:11"},{"body":{"nodeType":"YulBlock","src":"13168:220:11","statements":[{"nodeType":"YulAssignment","src":"13178:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13244:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"13249:2:11","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13185:58:11"},"nodeType":"YulFunctionCall","src":"13185:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13178:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13350:3:11"}],"functionName":{"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulIdentifier","src":"13261:88:11"},"nodeType":"YulFunctionCall","src":"13261:93:11"},"nodeType":"YulExpressionStatement","src":"13261:93:11"},{"nodeType":"YulAssignment","src":"13363:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13374:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"13379:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13370:3:11"},"nodeType":"YulFunctionCall","src":"13370:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13363:3:11"}]}]},"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13156:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13164:3:11","type":""}],"src":"13022:366:11"},{"body":{"nodeType":"YulBlock","src":"13565:248:11","statements":[{"nodeType":"YulAssignment","src":"13575:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13587:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"13598:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13583:3:11"},"nodeType":"YulFunctionCall","src":"13583:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13575:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13622:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"13633:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13618:3:11"},"nodeType":"YulFunctionCall","src":"13618:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13641:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"13647:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13637:3:11"},"nodeType":"YulFunctionCall","src":"13637:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13611:6:11"},"nodeType":"YulFunctionCall","src":"13611:47:11"},"nodeType":"YulExpressionStatement","src":"13611:47:11"},{"nodeType":"YulAssignment","src":"13667:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13801:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13675:124:11"},"nodeType":"YulFunctionCall","src":"13675:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13667:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13545:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13560:4:11","type":""}],"src":"13394:419:11"},{"body":{"nodeType":"YulBlock","src":"13925:115:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13947:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"13955:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13943:3:11"},"nodeType":"YulFunctionCall","src":"13943:14:11"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"13959:34:11","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13936:6:11"},"nodeType":"YulFunctionCall","src":"13936:58:11"},"nodeType":"YulExpressionStatement","src":"13936:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14015:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"14023:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14011:3:11"},"nodeType":"YulFunctionCall","src":"14011:15:11"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"14028:4:11","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14004:6:11"},"nodeType":"YulFunctionCall","src":"14004:29:11"},"nodeType":"YulExpressionStatement","src":"14004:29:11"}]},"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13917:6:11","type":""}],"src":"13819:221:11"},{"body":{"nodeType":"YulBlock","src":"14192:220:11","statements":[{"nodeType":"YulAssignment","src":"14202:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14268:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"14273:2:11","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14209:58:11"},"nodeType":"YulFunctionCall","src":"14209:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14202:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14374:3:11"}],"functionName":{"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulIdentifier","src":"14285:88:11"},"nodeType":"YulFunctionCall","src":"14285:93:11"},"nodeType":"YulExpressionStatement","src":"14285:93:11"},{"nodeType":"YulAssignment","src":"14387:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14398:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"14403:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14394:3:11"},"nodeType":"YulFunctionCall","src":"14394:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14387:3:11"}]}]},"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14180:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14188:3:11","type":""}],"src":"14046:366:11"},{"body":{"nodeType":"YulBlock","src":"14589:248:11","statements":[{"nodeType":"YulAssignment","src":"14599:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14611:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"14622:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14607:3:11"},"nodeType":"YulFunctionCall","src":"14607:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14599:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14646:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"14657:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14642:3:11"},"nodeType":"YulFunctionCall","src":"14642:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14665:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"14671:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14661:3:11"},"nodeType":"YulFunctionCall","src":"14661:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14635:6:11"},"nodeType":"YulFunctionCall","src":"14635:47:11"},"nodeType":"YulExpressionStatement","src":"14635:47:11"},{"nodeType":"YulAssignment","src":"14691:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14825:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14699:124:11"},"nodeType":"YulFunctionCall","src":"14699:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14691:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14569:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14584:4:11","type":""}],"src":"14418:419:11"},{"body":{"nodeType":"YulBlock","src":"14949:75:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14971:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"14979:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14967:3:11"},"nodeType":"YulFunctionCall","src":"14967:14:11"},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","kind":"string","nodeType":"YulLiteral","src":"14983:33:11","type":"","value":"ReentrancyGuard: reentrant call"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14960:6:11"},"nodeType":"YulFunctionCall","src":"14960:57:11"},"nodeType":"YulExpressionStatement","src":"14960:57:11"}]},"name":"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"14941:6:11","type":""}],"src":"14843:181:11"},{"body":{"nodeType":"YulBlock","src":"15176:220:11","statements":[{"nodeType":"YulAssignment","src":"15186:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15252:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"15257:2:11","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15193:58:11"},"nodeType":"YulFunctionCall","src":"15193:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15186:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15358:3:11"}],"functionName":{"name":"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","nodeType":"YulIdentifier","src":"15269:88:11"},"nodeType":"YulFunctionCall","src":"15269:93:11"},"nodeType":"YulExpressionStatement","src":"15269:93:11"},{"nodeType":"YulAssignment","src":"15371:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15382:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"15387:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15378:3:11"},"nodeType":"YulFunctionCall","src":"15378:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15371:3:11"}]}]},"name":"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15164:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15172:3:11","type":""}],"src":"15030:366:11"},{"body":{"nodeType":"YulBlock","src":"15573:248:11","statements":[{"nodeType":"YulAssignment","src":"15583:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15595:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"15606:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15591:3:11"},"nodeType":"YulFunctionCall","src":"15591:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15583:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15630:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"15641:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15626:3:11"},"nodeType":"YulFunctionCall","src":"15626:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15649:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"15655:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15645:3:11"},"nodeType":"YulFunctionCall","src":"15645:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15619:6:11"},"nodeType":"YulFunctionCall","src":"15619:47:11"},"nodeType":"YulExpressionStatement","src":"15619:47:11"},{"nodeType":"YulAssignment","src":"15675:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15809:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15683:124:11"},"nodeType":"YulFunctionCall","src":"15683:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15675:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15553:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15568:4:11","type":""}],"src":"15402:419:11"},{"body":{"nodeType":"YulBlock","src":"15933:73:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15955:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"15963:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15951:3:11"},"nodeType":"YulFunctionCall","src":"15951:14:11"},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"15967:31:11","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15944:6:11"},"nodeType":"YulFunctionCall","src":"15944:55:11"},"nodeType":"YulExpressionStatement","src":"15944:55:11"}]},"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"15925:6:11","type":""}],"src":"15827:179:11"},{"body":{"nodeType":"YulBlock","src":"16158:220:11","statements":[{"nodeType":"YulAssignment","src":"16168:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16234:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"16239:2:11","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16175:58:11"},"nodeType":"YulFunctionCall","src":"16175:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16168:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16340:3:11"}],"functionName":{"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulIdentifier","src":"16251:88:11"},"nodeType":"YulFunctionCall","src":"16251:93:11"},"nodeType":"YulExpressionStatement","src":"16251:93:11"},{"nodeType":"YulAssignment","src":"16353:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16364:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"16369:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16360:3:11"},"nodeType":"YulFunctionCall","src":"16360:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16353:3:11"}]}]},"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16146:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16154:3:11","type":""}],"src":"16012:366:11"},{"body":{"nodeType":"YulBlock","src":"16555:248:11","statements":[{"nodeType":"YulAssignment","src":"16565:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16577:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"16588:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16573:3:11"},"nodeType":"YulFunctionCall","src":"16573:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16565:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16612:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"16623:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16608:3:11"},"nodeType":"YulFunctionCall","src":"16608:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16631:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"16637:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16627:3:11"},"nodeType":"YulFunctionCall","src":"16627:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16601:6:11"},"nodeType":"YulFunctionCall","src":"16601:47:11"},"nodeType":"YulExpressionStatement","src":"16601:47:11"},{"nodeType":"YulAssignment","src":"16657:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16791:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16665:124:11"},"nodeType":"YulFunctionCall","src":"16665:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16657:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16535:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16550:4:11","type":""}],"src":"16384:419:11"},{"body":{"nodeType":"YulBlock","src":"16915:118:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16937:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"16945:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16933:3:11"},"nodeType":"YulFunctionCall","src":"16933:14:11"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"16949:34:11","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16926:6:11"},"nodeType":"YulFunctionCall","src":"16926:58:11"},"nodeType":"YulExpressionStatement","src":"16926:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17005:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"17013:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17001:3:11"},"nodeType":"YulFunctionCall","src":"17001:15:11"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"17018:7:11","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16994:6:11"},"nodeType":"YulFunctionCall","src":"16994:32:11"},"nodeType":"YulExpressionStatement","src":"16994:32:11"}]},"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"16907:6:11","type":""}],"src":"16809:224:11"},{"body":{"nodeType":"YulBlock","src":"17185:220:11","statements":[{"nodeType":"YulAssignment","src":"17195:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17261:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"17266:2:11","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17202:58:11"},"nodeType":"YulFunctionCall","src":"17202:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17195:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17367:3:11"}],"functionName":{"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulIdentifier","src":"17278:88:11"},"nodeType":"YulFunctionCall","src":"17278:93:11"},"nodeType":"YulExpressionStatement","src":"17278:93:11"},{"nodeType":"YulAssignment","src":"17380:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17391:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"17396:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17387:3:11"},"nodeType":"YulFunctionCall","src":"17387:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17380:3:11"}]}]},"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17173:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17181:3:11","type":""}],"src":"17039:366:11"},{"body":{"nodeType":"YulBlock","src":"17582:248:11","statements":[{"nodeType":"YulAssignment","src":"17592:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17604:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"17615:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17600:3:11"},"nodeType":"YulFunctionCall","src":"17600:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17592:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17639:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"17650:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17635:3:11"},"nodeType":"YulFunctionCall","src":"17635:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17658:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"17664:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17654:3:11"},"nodeType":"YulFunctionCall","src":"17654:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17628:6:11"},"nodeType":"YulFunctionCall","src":"17628:47:11"},"nodeType":"YulExpressionStatement","src":"17628:47:11"},{"nodeType":"YulAssignment","src":"17684:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17818:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17692:124:11"},"nodeType":"YulFunctionCall","src":"17692:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17684:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17562:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17577:4:11","type":""}],"src":"17411:419:11"},{"body":{"nodeType":"YulBlock","src":"17942:116:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17964:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"17972:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17960:3:11"},"nodeType":"YulFunctionCall","src":"17960:14:11"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"17976:34:11","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17953:6:11"},"nodeType":"YulFunctionCall","src":"17953:58:11"},"nodeType":"YulExpressionStatement","src":"17953:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18032:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"18040:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18028:3:11"},"nodeType":"YulFunctionCall","src":"18028:15:11"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"18045:5:11","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18021:6:11"},"nodeType":"YulFunctionCall","src":"18021:30:11"},"nodeType":"YulExpressionStatement","src":"18021:30:11"}]},"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"17934:6:11","type":""}],"src":"17836:222:11"},{"body":{"nodeType":"YulBlock","src":"18210:220:11","statements":[{"nodeType":"YulAssignment","src":"18220:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18286:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"18291:2:11","type":"","value":"35"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18227:58:11"},"nodeType":"YulFunctionCall","src":"18227:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18220:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18392:3:11"}],"functionName":{"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulIdentifier","src":"18303:88:11"},"nodeType":"YulFunctionCall","src":"18303:93:11"},"nodeType":"YulExpressionStatement","src":"18303:93:11"},{"nodeType":"YulAssignment","src":"18405:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18416:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"18421:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18412:3:11"},"nodeType":"YulFunctionCall","src":"18412:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18405:3:11"}]}]},"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18198:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18206:3:11","type":""}],"src":"18064:366:11"},{"body":{"nodeType":"YulBlock","src":"18607:248:11","statements":[{"nodeType":"YulAssignment","src":"18617:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18629:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"18640:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18625:3:11"},"nodeType":"YulFunctionCall","src":"18625:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18617:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18664:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"18675:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18660:3:11"},"nodeType":"YulFunctionCall","src":"18660:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18683:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"18689:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18679:3:11"},"nodeType":"YulFunctionCall","src":"18679:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18653:6:11"},"nodeType":"YulFunctionCall","src":"18653:47:11"},"nodeType":"YulExpressionStatement","src":"18653:47:11"},{"nodeType":"YulAssignment","src":"18709:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18843:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18717:124:11"},"nodeType":"YulFunctionCall","src":"18717:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18709:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18587:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18602:4:11","type":""}],"src":"18436:419:11"},{"body":{"nodeType":"YulBlock","src":"18967:119:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18989:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"18997:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18985:3:11"},"nodeType":"YulFunctionCall","src":"18985:14:11"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062","kind":"string","nodeType":"YulLiteral","src":"19001:34:11","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18978:6:11"},"nodeType":"YulFunctionCall","src":"18978:58:11"},"nodeType":"YulExpressionStatement","src":"18978:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19057:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"19065:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19053:3:11"},"nodeType":"YulFunctionCall","src":"19053:15:11"},{"hexValue":"616c616e6365","kind":"string","nodeType":"YulLiteral","src":"19070:8:11","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19046:6:11"},"nodeType":"YulFunctionCall","src":"19046:33:11"},"nodeType":"YulExpressionStatement","src":"19046:33:11"}]},"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"18959:6:11","type":""}],"src":"18861:225:11"},{"body":{"nodeType":"YulBlock","src":"19238:220:11","statements":[{"nodeType":"YulAssignment","src":"19248:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19314:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"19319:2:11","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19255:58:11"},"nodeType":"YulFunctionCall","src":"19255:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19248:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19420:3:11"}],"functionName":{"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulIdentifier","src":"19331:88:11"},"nodeType":"YulFunctionCall","src":"19331:93:11"},"nodeType":"YulExpressionStatement","src":"19331:93:11"},{"nodeType":"YulAssignment","src":"19433:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19444:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"19449:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19440:3:11"},"nodeType":"YulFunctionCall","src":"19440:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19433:3:11"}]}]},"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19226:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"19234:3:11","type":""}],"src":"19092:366:11"},{"body":{"nodeType":"YulBlock","src":"19635:248:11","statements":[{"nodeType":"YulAssignment","src":"19645:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19657:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"19668:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19653:3:11"},"nodeType":"YulFunctionCall","src":"19653:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19645:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19692:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"19703:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19688:3:11"},"nodeType":"YulFunctionCall","src":"19688:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19711:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"19717:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19707:3:11"},"nodeType":"YulFunctionCall","src":"19707:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19681:6:11"},"nodeType":"YulFunctionCall","src":"19681:47:11"},"nodeType":"YulExpressionStatement","src":"19681:47:11"},{"nodeType":"YulAssignment","src":"19737:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19871:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19745:124:11"},"nodeType":"YulFunctionCall","src":"19745:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19737:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19615:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19630:4:11","type":""}],"src":"19464:419:11"},{"body":{"nodeType":"YulBlock","src":"19929:76:11","statements":[{"body":{"nodeType":"YulBlock","src":"19983:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19992:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19995:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19985:6:11"},"nodeType":"YulFunctionCall","src":"19985:12:11"},"nodeType":"YulExpressionStatement","src":"19985:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19952:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19974:5:11"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"19959:14:11"},"nodeType":"YulFunctionCall","src":"19959:21:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"19949:2:11"},"nodeType":"YulFunctionCall","src":"19949:32:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"19942:6:11"},"nodeType":"YulFunctionCall","src":"19942:40:11"},"nodeType":"YulIf","src":"19939:60:11"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19922:5:11","type":""}],"src":"19889:116:11"},{"body":{"nodeType":"YulBlock","src":"20071:77:11","statements":[{"nodeType":"YulAssignment","src":"20081:22:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"20096:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20090:5:11"},"nodeType":"YulFunctionCall","src":"20090:13:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"20081:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20136:5:11"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"20112:23:11"},"nodeType":"YulFunctionCall","src":"20112:30:11"},"nodeType":"YulExpressionStatement","src":"20112:30:11"}]},"name":"abi_decode_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"20049:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"20057:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"20065:5:11","type":""}],"src":"20011:137:11"},{"body":{"nodeType":"YulBlock","src":"20228:271:11","statements":[{"body":{"nodeType":"YulBlock","src":"20274:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"20276:77:11"},"nodeType":"YulFunctionCall","src":"20276:79:11"},"nodeType":"YulExpressionStatement","src":"20276:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"20249:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"20258:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20245:3:11"},"nodeType":"YulFunctionCall","src":"20245:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"20270:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"20241:3:11"},"nodeType":"YulFunctionCall","src":"20241:32:11"},"nodeType":"YulIf","src":"20238:119:11"},{"nodeType":"YulBlock","src":"20367:125:11","statements":[{"nodeType":"YulVariableDeclaration","src":"20382:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"20396:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"20386:6:11","type":""}]},{"nodeType":"YulAssignment","src":"20411:71:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20454:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"20465:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20450:3:11"},"nodeType":"YulFunctionCall","src":"20450:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"20474:7:11"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"20421:28:11"},"nodeType":"YulFunctionCall","src":"20421:61:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"20411:6:11"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20198:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"20209:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"20221:6:11","type":""}],"src":"20154:345:11"},{"body":{"nodeType":"YulBlock","src":"20611:123:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20633:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"20641:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20629:3:11"},"nodeType":"YulFunctionCall","src":"20629:14:11"},{"hexValue":"5361666545524332303a204552433230206f7065726174696f6e20646964206e","kind":"string","nodeType":"YulLiteral","src":"20645:34:11","type":"","value":"SafeERC20: ERC20 operation did n"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20622:6:11"},"nodeType":"YulFunctionCall","src":"20622:58:11"},"nodeType":"YulExpressionStatement","src":"20622:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20701:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"20709:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20697:3:11"},"nodeType":"YulFunctionCall","src":"20697:15:11"},{"hexValue":"6f742073756363656564","kind":"string","nodeType":"YulLiteral","src":"20714:12:11","type":"","value":"ot succeed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20690:6:11"},"nodeType":"YulFunctionCall","src":"20690:37:11"},"nodeType":"YulExpressionStatement","src":"20690:37:11"}]},"name":"store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20603:6:11","type":""}],"src":"20505:229:11"},{"body":{"nodeType":"YulBlock","src":"20886:220:11","statements":[{"nodeType":"YulAssignment","src":"20896:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20962:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"20967:2:11","type":"","value":"42"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20903:58:11"},"nodeType":"YulFunctionCall","src":"20903:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20896:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21068:3:11"}],"functionName":{"name":"store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","nodeType":"YulIdentifier","src":"20979:88:11"},"nodeType":"YulFunctionCall","src":"20979:93:11"},"nodeType":"YulExpressionStatement","src":"20979:93:11"},{"nodeType":"YulAssignment","src":"21081:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21092:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"21097:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21088:3:11"},"nodeType":"YulFunctionCall","src":"21088:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21081:3:11"}]}]},"name":"abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20874:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20882:3:11","type":""}],"src":"20740:366:11"},{"body":{"nodeType":"YulBlock","src":"21283:248:11","statements":[{"nodeType":"YulAssignment","src":"21293:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21305:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"21316:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21301:3:11"},"nodeType":"YulFunctionCall","src":"21301:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21293:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21340:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"21351:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21336:3:11"},"nodeType":"YulFunctionCall","src":"21336:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21359:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"21365:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21355:3:11"},"nodeType":"YulFunctionCall","src":"21355:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21329:6:11"},"nodeType":"YulFunctionCall","src":"21329:47:11"},"nodeType":"YulExpressionStatement","src":"21329:47:11"},{"nodeType":"YulAssignment","src":"21385:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21519:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21393:124:11"},"nodeType":"YulFunctionCall","src":"21393:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21385:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21263:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21278:4:11","type":""}],"src":"21112:419:11"},{"body":{"nodeType":"YulBlock","src":"21643:119:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21665:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"21673:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21661:3:11"},"nodeType":"YulFunctionCall","src":"21661:14:11"},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f","kind":"string","nodeType":"YulLiteral","src":"21677:34:11","type":"","value":"Address: insufficient balance fo"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21654:6:11"},"nodeType":"YulFunctionCall","src":"21654:58:11"},"nodeType":"YulExpressionStatement","src":"21654:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21733:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"21741:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21729:3:11"},"nodeType":"YulFunctionCall","src":"21729:15:11"},{"hexValue":"722063616c6c","kind":"string","nodeType":"YulLiteral","src":"21746:8:11","type":"","value":"r call"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21722:6:11"},"nodeType":"YulFunctionCall","src":"21722:33:11"},"nodeType":"YulExpressionStatement","src":"21722:33:11"}]},"name":"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21635:6:11","type":""}],"src":"21537:225:11"},{"body":{"nodeType":"YulBlock","src":"21914:220:11","statements":[{"nodeType":"YulAssignment","src":"21924:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21990:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"21995:2:11","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21931:58:11"},"nodeType":"YulFunctionCall","src":"21931:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21924:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22096:3:11"}],"functionName":{"name":"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","nodeType":"YulIdentifier","src":"22007:88:11"},"nodeType":"YulFunctionCall","src":"22007:93:11"},"nodeType":"YulExpressionStatement","src":"22007:93:11"},{"nodeType":"YulAssignment","src":"22109:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22120:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"22125:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22116:3:11"},"nodeType":"YulFunctionCall","src":"22116:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"22109:3:11"}]}]},"name":"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21902:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21910:3:11","type":""}],"src":"21768:366:11"},{"body":{"nodeType":"YulBlock","src":"22311:248:11","statements":[{"nodeType":"YulAssignment","src":"22321:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22333:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"22344:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22329:3:11"},"nodeType":"YulFunctionCall","src":"22329:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22321:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22368:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"22379:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22364:3:11"},"nodeType":"YulFunctionCall","src":"22364:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22387:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"22393:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22383:3:11"},"nodeType":"YulFunctionCall","src":"22383:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22357:6:11"},"nodeType":"YulFunctionCall","src":"22357:47:11"},"nodeType":"YulExpressionStatement","src":"22357:47:11"},{"nodeType":"YulAssignment","src":"22413:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22547:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22421:124:11"},"nodeType":"YulFunctionCall","src":"22421:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22413:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22291:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22306:4:11","type":""}],"src":"22140:419:11"},{"body":{"nodeType":"YulBlock","src":"22623:40:11","statements":[{"nodeType":"YulAssignment","src":"22634:22:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22650:5:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22644:5:11"},"nodeType":"YulFunctionCall","src":"22644:12:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"22634:6:11"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22606:5:11","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"22616:6:11","type":""}],"src":"22565:98:11"},{"body":{"nodeType":"YulBlock","src":"22782:34:11","statements":[{"nodeType":"YulAssignment","src":"22792:18:11","value":{"name":"pos","nodeType":"YulIdentifier","src":"22807:3:11"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"22792:11:11"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"22754:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"22759:6:11","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"22770:11:11","type":""}],"src":"22669:147:11"},{"body":{"nodeType":"YulBlock","src":"22930:278:11","statements":[{"nodeType":"YulVariableDeclaration","src":"22940:52:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22986:5:11"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"22954:31:11"},"nodeType":"YulFunctionCall","src":"22954:38:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"22944:6:11","type":""}]},{"nodeType":"YulAssignment","src":"23001:95:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23084:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"23089:6:11"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"23008:75:11"},"nodeType":"YulFunctionCall","src":"23008:88:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23001:3:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23144:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"23151:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23140:3:11"},"nodeType":"YulFunctionCall","src":"23140:16:11"},{"name":"pos","nodeType":"YulIdentifier","src":"23158:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"23163:6:11"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"23105:34:11"},"nodeType":"YulFunctionCall","src":"23105:65:11"},"nodeType":"YulExpressionStatement","src":"23105:65:11"},{"nodeType":"YulAssignment","src":"23179:23:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23190:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"23195:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23186:3:11"},"nodeType":"YulFunctionCall","src":"23186:16:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"23179:3:11"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22911:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"22918:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"22926:3:11","type":""}],"src":"22822:386:11"},{"body":{"nodeType":"YulBlock","src":"23348:137:11","statements":[{"nodeType":"YulAssignment","src":"23359:100:11","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"23446:6:11"},{"name":"pos","nodeType":"YulIdentifier","src":"23455:3:11"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"23366:79:11"},"nodeType":"YulFunctionCall","src":"23366:93:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23359:3:11"}]},{"nodeType":"YulAssignment","src":"23469:10:11","value":{"name":"pos","nodeType":"YulIdentifier","src":"23476:3:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"23469:3:11"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"23327:3:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"23333:6:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"23344:3:11","type":""}],"src":"23214:271:11"},{"body":{"nodeType":"YulBlock","src":"23597:73:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23619:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"23627:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23615:3:11"},"nodeType":"YulFunctionCall","src":"23615:14:11"},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","kind":"string","nodeType":"YulLiteral","src":"23631:31:11","type":"","value":"Address: call to non-contract"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23608:6:11"},"nodeType":"YulFunctionCall","src":"23608:55:11"},"nodeType":"YulExpressionStatement","src":"23608:55:11"}]},"name":"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23589:6:11","type":""}],"src":"23491:179:11"},{"body":{"nodeType":"YulBlock","src":"23822:220:11","statements":[{"nodeType":"YulAssignment","src":"23832:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23898:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"23903:2:11","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23839:58:11"},"nodeType":"YulFunctionCall","src":"23839:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23832:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24004:3:11"}],"functionName":{"name":"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","nodeType":"YulIdentifier","src":"23915:88:11"},"nodeType":"YulFunctionCall","src":"23915:93:11"},"nodeType":"YulExpressionStatement","src":"23915:93:11"},{"nodeType":"YulAssignment","src":"24017:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24028:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"24033:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24024:3:11"},"nodeType":"YulFunctionCall","src":"24024:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"24017:3:11"}]}]},"name":"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"23810:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"23818:3:11","type":""}],"src":"23676:366:11"},{"body":{"nodeType":"YulBlock","src":"24219:248:11","statements":[{"nodeType":"YulAssignment","src":"24229:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24241:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"24252:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24237:3:11"},"nodeType":"YulFunctionCall","src":"24237:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24229:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24276:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"24287:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24272:3:11"},"nodeType":"YulFunctionCall","src":"24272:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24295:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"24301:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24291:3:11"},"nodeType":"YulFunctionCall","src":"24291:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24265:6:11"},"nodeType":"YulFunctionCall","src":"24265:47:11"},"nodeType":"YulExpressionStatement","src":"24265:47:11"},{"nodeType":"YulAssignment","src":"24321:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24455:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24329:124:11"},"nodeType":"YulFunctionCall","src":"24329:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24321:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24199:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24214:4:11","type":""}],"src":"24048:419:11"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: mint to the zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: insufficient allowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(memPtr, 32), \"alance\")\n\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeERC20: ERC20 operation did n\")\n\n        mstore(add(memPtr, 32), \"ot succeed\")\n\n    }\n\n    function abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: insufficient balance fo\")\n\n        mstore(add(memPtr, 32), \"r call\")\n\n    }\n\n    function abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: call to non-contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":11,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"1733":[{"length":32,"start":3223},{"length":32,"start":4730},{"length":32,"start":5719},{"length":32,"start":8884}]},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x21C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x796D3FAE GT PUSH2 0x125 JUMPI DUP1 PUSH4 0xC7EE005E GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xEDED3FDA GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xEDED3FDA EQ PUSH2 0x6E5 JUMPI DUP1 PUSH4 0xEE5508F9 EQ PUSH2 0x703 JUMPI DUP1 PUSH4 0xF2888DBB EQ PUSH2 0x721 JUMPI DUP1 PUSH4 0xF85F91B4 EQ PUSH2 0x73D JUMPI DUP1 PUSH4 0xFA2A9DA9 EQ PUSH2 0x75B JUMPI PUSH2 0x21C JUMP JUMPDEST DUP1 PUSH4 0xC7EE005E EQ PUSH2 0x637 JUMPI DUP1 PUSH4 0xD429A5EA EQ PUSH2 0x655 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x685 JUMPI DUP1 PUSH4 0xEA905CDF EQ PUSH2 0x6B5 JUMPI PUSH2 0x21C JUMP JUMPDEST DUP1 PUSH4 0x8F71A265 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x8F71A265 EQ PUSH2 0x57F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x59D JUMPI DUP1 PUSH4 0xA07B10D6 EQ PUSH2 0x5BB JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x5D7 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x607 JUMPI PUSH2 0x21C JUMP JUMPDEST DUP1 PUSH4 0x796D3FAE EQ PUSH2 0x4E1 JUMPI DUP1 PUSH4 0x79C65068 EQ PUSH2 0x511 JUMPI DUP1 PUSH4 0x7A260B3F EQ PUSH2 0x52D JUMPI DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x561 JUMPI PUSH2 0x21C JUMP JUMPDEST DUP1 PUSH4 0x2A745DD0 GT PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x57B4702F GT PUSH2 0x177 JUMPI DUP1 PUSH4 0x57B4702F EQ PUSH2 0x411 JUMPI DUP1 PUSH4 0x65C65C1E EQ PUSH2 0x42F JUMPI DUP1 PUSH4 0x675CDD63 EQ PUSH2 0x45F JUMPI DUP1 PUSH4 0x692B69AE EQ PUSH2 0x48F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x4B1 JUMPI PUSH2 0x21C JUMP JUMPDEST DUP1 PUSH4 0x2A745DD0 EQ PUSH2 0x387 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x3A5 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x3C3 JUMPI DUP1 PUSH4 0x3E0DC34E EQ PUSH2 0x3F3 JUMPI PUSH2 0x21C JUMP JUMPDEST DUP1 PUSH4 0x15FAD854 GT PUSH2 0x1EF JUMPI DUP1 PUSH4 0x15FAD854 EQ PUSH2 0x2BD JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2ED JUMPI DUP1 PUSH4 0x19BEB249 EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0x1E83409A EQ PUSH2 0x33B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x357 JUMPI PUSH2 0x21C JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x81E3EDA EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0x9639761 EQ PUSH2 0x28D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x229 PUSH2 0x78D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x2817 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x247 PUSH2 0x81F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x254 SWAP2 SWAP1 PUSH2 0x2852 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x277 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x272 SWAP2 SWAP1 PUSH2 0x28FC JUMP JUMPDEST PUSH2 0x825 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x284 SWAP2 SWAP1 PUSH2 0x2957 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A2 SWAP2 SWAP1 PUSH2 0x2972 JUMP JUMPDEST PUSH2 0x848 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B4 SWAP2 SWAP1 PUSH2 0x2852 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D2 SWAP2 SWAP1 PUSH2 0x299F JUMP JUMPDEST PUSH2 0x860 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E4 SWAP2 SWAP1 PUSH2 0x2852 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F5 PUSH2 0x8BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x302 SWAP2 SWAP1 PUSH2 0x2852 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x325 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x320 SWAP2 SWAP1 PUSH2 0x2972 JUMP JUMPDEST PUSH2 0x8C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x332 SWAP2 SWAP1 PUSH2 0x2852 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x355 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x350 SWAP2 SWAP1 PUSH2 0x2972 JUMP JUMPDEST PUSH2 0x962 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x371 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36C SWAP2 SWAP1 PUSH2 0x29CC JUMP JUMPDEST PUSH2 0xCE8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37E SWAP2 SWAP1 PUSH2 0x2957 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38F PUSH2 0xD17 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39C SWAP2 SWAP1 PUSH2 0x2852 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3AD PUSH2 0xD3F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BA SWAP2 SWAP1 PUSH2 0x2A3B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D8 SWAP2 SWAP1 PUSH2 0x28FC JUMP JUMPDEST PUSH2 0xD48 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3EA SWAP2 SWAP1 PUSH2 0x2957 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3FB PUSH2 0xD7F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x408 SWAP2 SWAP1 PUSH2 0x2852 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x419 PUSH2 0xD85 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x426 SWAP2 SWAP1 PUSH2 0x2852 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x449 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x444 SWAP2 SWAP1 PUSH2 0x2972 JUMP JUMPDEST PUSH2 0xD8B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x456 SWAP2 SWAP1 PUSH2 0x2852 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x479 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x474 SWAP2 SWAP1 PUSH2 0x28FC JUMP JUMPDEST PUSH2 0xDA3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x486 SWAP2 SWAP1 PUSH2 0x2852 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x497 PUSH2 0xDC8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A8 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2A56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C6 SWAP2 SWAP1 PUSH2 0x2972 JUMP JUMPDEST PUSH2 0xDEC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D8 SWAP2 SWAP1 PUSH2 0x2852 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4FB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F6 SWAP2 SWAP1 PUSH2 0x28FC JUMP JUMPDEST PUSH2 0xE35 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x508 SWAP2 SWAP1 PUSH2 0x2957 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x52B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x526 SWAP2 SWAP1 PUSH2 0x28FC JUMP JUMPDEST PUSH2 0xE64 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x547 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x542 SWAP2 SWAP1 PUSH2 0x299F JUMP JUMPDEST PUSH2 0xEE3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x558 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2A56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x569 PUSH2 0xF19 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x576 SWAP2 SWAP1 PUSH2 0x2852 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x587 PUSH2 0xF1F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x594 SWAP2 SWAP1 PUSH2 0x2852 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5A5 PUSH2 0xF25 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B2 SWAP2 SWAP1 PUSH2 0x2817 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5D0 SWAP2 SWAP1 PUSH2 0x299F JUMP JUMPDEST PUSH2 0xFB7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5EC SWAP2 SWAP1 PUSH2 0x28FC JUMP JUMPDEST PUSH2 0x11DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5FE SWAP2 SWAP1 PUSH2 0x2957 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x621 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x61C SWAP2 SWAP1 PUSH2 0x28FC JUMP JUMPDEST PUSH2 0x1255 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62E SWAP2 SWAP1 PUSH2 0x2957 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x63F PUSH2 0x1278 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x64C SWAP2 SWAP1 PUSH2 0x2AB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x66F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x66A SWAP2 SWAP1 PUSH2 0x28FC JUMP JUMPDEST PUSH2 0x129C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x67C SWAP2 SWAP1 PUSH2 0x2852 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x69F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x69A SWAP2 SWAP1 PUSH2 0x2AD3 JUMP JUMPDEST PUSH2 0x1483 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6AC SWAP2 SWAP1 PUSH2 0x2852 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6CA SWAP2 SWAP1 PUSH2 0x28FC JUMP JUMPDEST PUSH2 0x150A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6DC SWAP2 SWAP1 PUSH2 0x2852 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6ED PUSH2 0x1650 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6FA SWAP2 SWAP1 PUSH2 0x2852 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x70B PUSH2 0x16FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x718 SWAP2 SWAP1 PUSH2 0x2852 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x736 SWAP2 SWAP1 PUSH2 0x2972 JUMP JUMPDEST PUSH2 0x1704 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x745 PUSH2 0x1963 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x752 SWAP2 SWAP1 PUSH2 0x2852 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x775 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x770 SWAP2 SWAP1 PUSH2 0x2972 JUMP JUMPDEST PUSH2 0x1969 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x784 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x79C SWAP1 PUSH2 0x2B79 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7C8 SWAP1 PUSH2 0x2B79 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x815 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7EA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x815 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7F8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x830 PUSH2 0x1993 JUMP JUMPDEST SWAP1 POP PUSH2 0x83D DUP2 DUP6 DUP6 PUSH2 0x199B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x19 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x6 SLOAD GT PUSH2 0x89D JUMPI PUSH1 0x40 MLOAD PUSH32 0x2083CD4000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x18 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x17 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x947 TIMESTAMP DUP4 PUSH1 0x20 ADD MLOAD DUP5 PUSH1 0x0 ADD MLOAD PUSH2 0x1B64 JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x40 ADD MLOAD DUP2 PUSH2 0x959 SWAP2 SWAP1 PUSH2 0x2BD9 JUMP JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x96A PUSH2 0x1BC4 JUMP JUMPDEST PUSH2 0x973 CALLER PUSH2 0x1C13 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x19 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x6 SLOAD DUP2 SUB PUSH2 0x9F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x845EFA9B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0xC31 JUMPI PUSH1 0x15 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xA71 JUMPI POP PUSH1 0x0 PUSH2 0xA6F DUP3 PUSH2 0x860 JUMP JUMPDEST GT JUMPDEST ISZERO PUSH2 0xC20 JUMPI PUSH1 0x1 PUSH1 0x15 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x18 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 PUSH1 0x16 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH2 0xB93 DUP5 PUSH2 0x860 JUMP JUMPDEST DUP3 DUP5 PUSH1 0x0 ADD MLOAD PUSH2 0xBA3 SWAP2 SWAP1 PUSH2 0x2C0D JUMP JUMPDEST PUSH2 0xBAD SWAP2 SWAP1 PUSH2 0x2C7E JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x0 ADD MLOAD DUP2 DUP5 PUSH1 0x20 ADD MLOAD PUSH2 0xBC4 SWAP2 SWAP1 PUSH2 0x2BD9 JUMP JUMPDEST GT ISZERO PUSH2 0xBE1 JUMPI DUP3 PUSH1 0x20 ADD MLOAD DUP4 PUSH1 0x0 ADD MLOAD PUSH2 0xBDE SWAP2 SWAP1 PUSH2 0x2CAF JUMP JUMPDEST SWAP1 POP JUMPDEST DUP1 DUP6 PUSH2 0xBED SWAP2 SWAP1 PUSH2 0x2BD9 JUMP JUMPDEST SWAP5 POP DUP1 PUSH1 0x18 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xC15 SWAP2 SWAP1 PUSH2 0x2BD9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP JUMPDEST DUP1 PUSH2 0xC2A SWAP1 PUSH2 0x2CE3 JUMP JUMPDEST SWAP1 POP PUSH2 0x9F4 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x19 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0xB PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xC89 SWAP2 SWAP1 PUSH2 0x2CAF JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xCDB DUP4 DUP4 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1E17 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP PUSH2 0xCE5 PUSH2 0x1E9D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xCF3 PUSH2 0x1993 JUMP JUMPDEST SWAP1 POP PUSH2 0xD00 DUP6 DUP3 DUP6 PUSH2 0x1EA7 JUMP JUMPDEST PUSH2 0xD0B DUP6 DUP6 DUP6 PUSH2 0x1F33 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xD29 TIMESTAMP PUSH1 0x9 SLOAD PUSH1 0x7 SLOAD PUSH2 0x1B64 JUMP JUMPDEST SWAP1 POP PUSH1 0xA SLOAD DUP2 PUSH2 0xD39 SWAP2 SWAP1 PUSH2 0x2BD9 JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xD53 PUSH2 0x1993 JUMP JUMPDEST SWAP1 POP PUSH2 0xD74 DUP2 DUP6 DUP6 PUSH2 0xD65 DUP6 DUP10 PUSH2 0x1483 JUMP JUMPDEST PUSH2 0xD6F SWAP2 SWAP1 PUSH2 0x2BD9 JUMP JUMPDEST PUSH2 0x199B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x16 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x10 DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 POP DUP6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xF PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x15 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xED3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xECA SWAP1 PUSH2 0x2D77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEDF PUSH1 0x0 DUP4 DUP4 PUSH2 0x2021 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x18 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 POP DUP6 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xF34 SWAP1 PUSH2 0x2B79 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xF60 SWAP1 PUSH2 0x2B79 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xFAD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xF82 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xFAD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF90 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH2 0xFC1 CALLER PUSH2 0xDEC JUMP JUMPDEST LT ISZERO PUSH2 0xFF9 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB0D79D6700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1003 ADDRESS DUP3 PUSH2 0x1255 JUMP JUMPDEST POP PUSH2 0x100C PUSH2 0x2243 JUMP JUMPDEST PUSH2 0x1015 CALLER PUSH2 0x1C13 JUMP JUMPDEST PUSH2 0x1020 PUSH1 0x1 DUP3 PUSH2 0x2425 JUMP JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1032 SWAP2 SWAP1 PUSH2 0x2BD9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x17 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD GT ISZERO PUSH2 0x10F3 JUMPI PUSH1 0x0 PUSH2 0x10C7 TIMESTAMP DUP4 PUSH1 0x20 ADD MLOAD DUP5 PUSH1 0x0 ADD MLOAD PUSH2 0x1B64 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 PUSH2 0x10D5 SWAP2 SWAP1 PUSH2 0x2BD9 JUMP JUMPDEST DUP3 PUSH1 0x40 ADD DUP2 DUP2 MLOAD PUSH2 0x10E6 SWAP2 SWAP1 PUSH2 0x2BD9 JUMP JUMPDEST SWAP2 POP DUP2 DUP2 MSTORE POP POP POP PUSH2 0x10FE JUMP JUMPDEST DUP2 DUP2 PUSH1 0x40 ADD DUP2 DUP2 MSTORE POP POP JUMPDEST DUP2 DUP2 PUSH1 0x0 ADD DUP2 DUP2 MLOAD PUSH2 0x1110 SWAP2 SWAP1 PUSH2 0x2BD9 JUMP JUMPDEST SWAP2 POP DUP2 DUP2 MSTORE POP POP TIMESTAMP DUP2 PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x17 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x58BC26FB087F2767999C63D19083D6F2A8DB51605DF3E2901ECD5C0E54591AE8 DUP3 PUSH1 0x0 ADD MLOAD DUP4 PUSH1 0x40 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x11D2 SWAP3 SWAP2 SWAP1 PUSH2 0x2D97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x11E9 PUSH2 0x1993 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x11F7 DUP3 DUP7 PUSH2 0x1483 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x123C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1233 SWAP1 PUSH2 0x2E32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1249 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x199B JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1260 PUSH2 0x1993 JUMP JUMPDEST SWAP1 POP PUSH2 0x126D DUP2 DUP6 DUP6 PUSH2 0x1F33 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x6 SLOAD GT PUSH2 0x12D9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2083CD4000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x17 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP4 DUP3 GT ISZERO PUSH2 0x13E9 JUMPI PUSH1 0x16 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP3 POP PUSH2 0x147B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x18 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD MLOAD GT ISZERO PUSH2 0x1479 JUMPI PUSH1 0x0 PUSH2 0x1463 DUP3 PUSH1 0x60 ADD MLOAD DUP5 PUSH1 0x20 ADD MLOAD DUP6 PUSH1 0x0 ADD MLOAD PUSH2 0x1B64 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x40 ADD MLOAD DUP2 PUSH2 0x1475 SWAP2 SWAP1 PUSH2 0x2BD9 JUMP JUMPDEST SWAP5 POP POP JUMPDEST POP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x6 SLOAD GT PUSH2 0x1547 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2083CD4000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x15 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x15B8 JUMPI POP PUSH1 0x0 PUSH2 0x15B6 DUP4 PUSH2 0x860 JUMP JUMPDEST EQ JUMPDEST ISZERO PUSH2 0x15C6 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x164A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x18 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH2 0x1623 DUP4 PUSH2 0x860 JUMP JUMPDEST PUSH2 0x162D DUP6 DUP6 PUSH2 0x129C JUMP JUMPDEST DUP3 PUSH1 0x0 ADD MLOAD PUSH2 0x163C SWAP2 SWAP1 PUSH2 0x2C0D JUMP JUMPDEST PUSH2 0x1646 SWAP2 SWAP1 PUSH2 0x2C7E JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB SLOAD PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16AE SWAP2 SWAP1 PUSH2 0x2AB8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x16CB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16EF SWAP2 SWAP1 PUSH2 0x2E67 JUMP JUMPDEST PUSH2 0x16F9 SWAP2 SWAP1 PUSH2 0x2CAF JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x170C PUSH2 0x1BC4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x17 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD SWAP1 POP PUSH1 0x0 DUP2 SUB PUSH2 0x17BB JUMPI PUSH1 0x40 MLOAD PUSH32 0x9FE7BFD900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x17C3 PUSH2 0x2243 JUMP JUMPDEST PUSH2 0x17CC CALLER PUSH2 0x1C13 JUMP JUMPDEST PUSH2 0x17D7 PUSH1 0x0 DUP3 PUSH2 0x2425 JUMP JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x17E9 SWAP2 SWAP1 PUSH2 0x2CAF JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP2 DUP2 MSTORE POP POP TIMESTAMP DUP3 PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x0 DUP3 PUSH1 0x40 ADD DUP2 DUP2 MSTORE POP POP DUP2 PUSH1 0x17 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP DUP1 PUSH1 0xF PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x18C0 SWAP2 SWAP1 PUSH2 0x2CAF JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xF PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1916 SWAP2 SWAP1 PUSH2 0x2BD9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0xF5BB82176FEB1B5E747E28471AA92156A04D9F3AB9F45F28E2D704232B93F75 CALLER DUP3 PUSH1 0x40 MLOAD PUSH2 0x194E SWAP3 SWAP2 SWAP1 PUSH2 0x2E94 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP PUSH2 0x1960 PUSH2 0x1E9D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x17 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A0A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A01 SWAP1 PUSH2 0x2F2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A79 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A70 SWAP1 PUSH2 0x2FC1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1B57 SWAP2 SWAP1 PUSH2 0x2852 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP6 PUSH2 0x1B73 SWAP2 SWAP1 PUSH2 0x2CAF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x8 SLOAD DUP3 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1B8E SWAP2 SWAP1 PUSH2 0x2C0D JUMP JUMPDEST PUSH2 0x1B98 SWAP2 SWAP1 PUSH2 0x2C7E JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 DUP2 DUP6 PUSH2 0x1BAF SWAP2 SWAP1 PUSH2 0x2C0D JUMP JUMPDEST PUSH2 0x1BB9 SWAP2 SWAP1 PUSH2 0x2C7E JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x5 SLOAD SUB PUSH2 0x1C09 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C00 SWAP1 PUSH2 0x302D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x5 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x6 SLOAD DUP2 EQ PUSH2 0x1E13 JUMPI PUSH1 0x0 PUSH1 0x17 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD GT ISZERO PUSH2 0x1DCB JUMPI JUMPDEST PUSH1 0x6 SLOAD DUP3 LT ISZERO PUSH2 0x1DCA JUMPI PUSH1 0x0 PUSH1 0x18 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x1D51 DUP3 PUSH1 0x60 ADD MLOAD DUP5 PUSH1 0x20 ADD MLOAD DUP6 PUSH1 0x0 ADD MLOAD PUSH2 0x1B64 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x40 ADD MLOAD DUP2 PUSH2 0x1D63 SWAP2 SWAP1 PUSH2 0x2BD9 JUMP JUMPDEST PUSH1 0x16 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP DUP2 PUSH2 0x1DC3 SWAP1 PUSH2 0x2CE3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CDA JUMP JUMPDEST JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xE PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1E98 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1E36 SWAP3 SWAP2 SWAP1 PUSH2 0x2E94 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x24C3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EB3 DUP5 DUP5 PUSH2 0x1483 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x1F2D JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1F1F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F16 SWAP1 PUSH2 0x3099 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1F2C DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x199B JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1FA2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F99 SWAP1 PUSH2 0x312B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2011 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2008 SWAP1 PUSH2 0x31BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x201C DUP4 DUP4 DUP4 PUSH2 0x2021 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2073 JUMPI DUP1 PUSH1 0xD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2067 SWAP2 SWAP1 PUSH2 0x2BD9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x2142 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xF PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x20FA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20F1 SWAP1 PUSH2 0x324F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0xF PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x218B JUMPI DUP1 PUSH1 0xD PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x21D9 JUMP JUMPDEST DUP1 PUSH1 0xF PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x2236 SWAP2 SWAP1 PUSH2 0x2852 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x10 PUSH1 0x3 ADD SLOAD TIMESTAMP LT PUSH2 0x2423 JUMPI PUSH1 0x0 PUSH2 0x2265 PUSH1 0x10 PUSH1 0x3 ADD SLOAD PUSH1 0x9 SLOAD PUSH1 0x7 SLOAD PUSH2 0x1B64 JUMP JUMPDEST SWAP1 POP PUSH1 0xA SLOAD DUP2 PUSH2 0x2275 SWAP2 SWAP1 PUSH2 0x2BD9 JUMP JUMPDEST PUSH1 0x18 PUSH1 0x0 PUSH1 0x6 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x6 PUSH1 0x0 DUP2 SLOAD PUSH2 0x22A0 SWAP1 PUSH2 0x2CE3 JUMP JUMPDEST SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE POP PUSH2 0x22AF PUSH2 0x2758 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x230B SWAP2 SWAP1 PUSH2 0x2AB8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2328 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x234C SWAP2 SWAP1 PUSH2 0x2E67 JUMP JUMPDEST PUSH2 0x2356 SWAP2 SWAP1 PUSH2 0x2CAF JUMP JUMPDEST DUP2 PUSH1 0x0 ADD DUP2 DUP2 MSTORE POP POP TIMESTAMP DUP2 PUSH1 0x40 ADD DUP2 DUP2 MSTORE POP POP PUSH1 0xC SLOAD TIMESTAMP PUSH2 0x2377 SWAP2 SWAP1 PUSH2 0x2BD9 JUMP JUMPDEST DUP2 PUSH1 0x60 ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x10 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE SWAP1 POP POP DUP1 PUSH1 0x18 PUSH1 0x0 PUSH1 0x6 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE SWAP1 POP POP DUP1 PUSH1 0x0 ADD MLOAD PUSH1 0xB PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2419 SWAP2 SWAP1 PUSH2 0x2BD9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2436 TIMESTAMP PUSH1 0x9 SLOAD PUSH1 0x7 SLOAD PUSH2 0x1B64 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xA PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x244A SWAP2 SWAP1 PUSH2 0x2BD9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 ISZERO PUSH2 0x2475 JUMPI DUP2 PUSH1 0xA PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2469 SWAP2 SWAP1 PUSH2 0x2BD9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x24B7 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x2481 CALLER PUSH2 0x8C5 JUMP JUMPDEST GT ISZERO PUSH2 0x2494 JUMPI PUSH1 0x0 PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH2 0x24B6 JUMP JUMPDEST PUSH2 0x249D CALLER PUSH2 0x8C5 JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x24AE SWAP2 SWAP1 PUSH2 0x2CAF JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST TIMESTAMP PUSH1 0x9 DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2525 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x258B SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD EQ DUP1 PUSH2 0x2547 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x2546 SWAP2 SWAP1 PUSH2 0x329B JUMP JUMPDEST JUMPDEST PUSH2 0x2586 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x257D SWAP1 PUSH2 0x333A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x259A DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x25A3 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x25E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25DF SWAP1 PUSH2 0x33CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x2611 SWAP2 SWAP1 PUSH2 0x3433 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x264E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2653 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2664 DUP8 DUP4 DUP4 DUP8 PUSH2 0x2670 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x26D2 JUMPI PUSH1 0x0 DUP4 MLOAD SUB PUSH2 0x26CA JUMPI PUSH2 0x268A DUP6 PUSH2 0x26E5 JUMP JUMPDEST PUSH2 0x26C9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26C0 SWAP1 PUSH2 0x3496 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH2 0x26DD JUMP JUMPDEST PUSH2 0x26DC DUP4 DUP4 PUSH2 0x2708 JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x271B JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x274F SWAP2 SWAP1 PUSH2 0x2817 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x27C1 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x27A6 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27E9 DUP3 PUSH2 0x2787 JUMP JUMPDEST PUSH2 0x27F3 DUP2 DUP6 PUSH2 0x2792 JUMP JUMPDEST SWAP4 POP PUSH2 0x2803 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x27A3 JUMP JUMPDEST PUSH2 0x280C DUP2 PUSH2 0x27CD JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2831 DUP2 DUP5 PUSH2 0x27DE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x284C DUP2 PUSH2 0x2839 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2867 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2843 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x289D DUP3 PUSH2 0x2872 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x28AD DUP2 PUSH2 0x2892 JUMP JUMPDEST DUP2 EQ PUSH2 0x28B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x28CA DUP2 PUSH2 0x28A4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x28D9 DUP2 PUSH2 0x2839 JUMP JUMPDEST DUP2 EQ PUSH2 0x28E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x28F6 DUP2 PUSH2 0x28D0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2913 JUMPI PUSH2 0x2912 PUSH2 0x286D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2921 DUP6 DUP3 DUP7 ADD PUSH2 0x28BB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2932 DUP6 DUP3 DUP7 ADD PUSH2 0x28E7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2951 DUP2 PUSH2 0x293C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x296C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2948 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2988 JUMPI PUSH2 0x2987 PUSH2 0x286D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2996 DUP5 DUP3 DUP6 ADD PUSH2 0x28BB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x29B5 JUMPI PUSH2 0x29B4 PUSH2 0x286D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x29C3 DUP5 DUP3 DUP6 ADD PUSH2 0x28E7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x29E5 JUMPI PUSH2 0x29E4 PUSH2 0x286D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x29F3 DUP7 DUP3 DUP8 ADD PUSH2 0x28BB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2A04 DUP7 DUP3 DUP8 ADD PUSH2 0x28BB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2A15 DUP7 DUP3 DUP8 ADD PUSH2 0x28E7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2A35 DUP2 PUSH2 0x2A1F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2A50 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2A2C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2A6B PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x2843 JUMP JUMPDEST PUSH2 0x2A78 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x2843 JUMP JUMPDEST PUSH2 0x2A85 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x2843 JUMP JUMPDEST PUSH2 0x2A92 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x2843 JUMP JUMPDEST PUSH2 0x2A9F PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x2843 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2AB2 DUP2 PUSH2 0x2892 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2ACD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2AA9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2AEA JUMPI PUSH2 0x2AE9 PUSH2 0x286D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2AF8 DUP6 DUP3 DUP7 ADD PUSH2 0x28BB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2B09 DUP6 DUP3 DUP7 ADD PUSH2 0x28BB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2B28 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2843 JUMP JUMPDEST PUSH2 0x2B35 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2843 JUMP JUMPDEST PUSH2 0x2B42 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2843 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2B91 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2BA4 JUMPI PUSH2 0x2BA3 PUSH2 0x2B4A JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2BE4 DUP3 PUSH2 0x2839 JUMP JUMPDEST SWAP2 POP PUSH2 0x2BEF DUP4 PUSH2 0x2839 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2C07 JUMPI PUSH2 0x2C06 PUSH2 0x2BAA JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C18 DUP3 PUSH2 0x2839 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C23 DUP4 PUSH2 0x2839 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2C31 DUP2 PUSH2 0x2839 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2C48 JUMPI PUSH2 0x2C47 PUSH2 0x2BAA JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2C89 DUP3 PUSH2 0x2839 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C94 DUP4 PUSH2 0x2839 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2CA4 JUMPI PUSH2 0x2CA3 PUSH2 0x2C4F JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CBA DUP3 PUSH2 0x2839 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CC5 DUP4 PUSH2 0x2839 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2CDD JUMPI PUSH2 0x2CDC PUSH2 0x2BAA JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CEE DUP3 PUSH2 0x2839 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2D20 JUMPI PUSH2 0x2D1F PUSH2 0x2BAA JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D61 PUSH1 0x1F DUP4 PUSH2 0x2792 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D6C DUP3 PUSH2 0x2D2B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2D90 DUP2 PUSH2 0x2D54 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2DAC PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2843 JUMP JUMPDEST PUSH2 0x2DB9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2843 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E1C PUSH1 0x25 DUP4 PUSH2 0x2792 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E27 DUP3 PUSH2 0x2DC0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E4B DUP2 PUSH2 0x2E0F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2E61 DUP2 PUSH2 0x28D0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2E7D JUMPI PUSH2 0x2E7C PUSH2 0x286D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2E8B DUP5 DUP3 DUP6 ADD PUSH2 0x2E52 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2EA9 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2AA9 JUMP JUMPDEST PUSH2 0x2EB6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2843 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F19 PUSH1 0x24 DUP4 PUSH2 0x2792 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F24 DUP3 PUSH2 0x2EBD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2F48 DUP2 PUSH2 0x2F0C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FAB PUSH1 0x22 DUP4 PUSH2 0x2792 JUMP JUMPDEST SWAP2 POP PUSH2 0x2FB6 DUP3 PUSH2 0x2F4F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2FDA DUP2 PUSH2 0x2F9E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3017 PUSH1 0x1F DUP4 PUSH2 0x2792 JUMP JUMPDEST SWAP2 POP PUSH2 0x3022 DUP3 PUSH2 0x2FE1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3046 DUP2 PUSH2 0x300A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3083 PUSH1 0x1D DUP4 PUSH2 0x2792 JUMP JUMPDEST SWAP2 POP PUSH2 0x308E DUP3 PUSH2 0x304D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x30B2 DUP2 PUSH2 0x3076 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3115 PUSH1 0x25 DUP4 PUSH2 0x2792 JUMP JUMPDEST SWAP2 POP PUSH2 0x3120 DUP3 PUSH2 0x30B9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3144 DUP2 PUSH2 0x3108 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31A7 PUSH1 0x23 DUP4 PUSH2 0x2792 JUMP JUMPDEST SWAP2 POP PUSH2 0x31B2 DUP3 PUSH2 0x314B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x31D6 DUP2 PUSH2 0x319A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3239 PUSH1 0x26 DUP4 PUSH2 0x2792 JUMP JUMPDEST SWAP2 POP PUSH2 0x3244 DUP3 PUSH2 0x31DD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3268 DUP2 PUSH2 0x322C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3278 DUP2 PUSH2 0x293C JUMP JUMPDEST DUP2 EQ PUSH2 0x3283 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3295 DUP2 PUSH2 0x326F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x32B1 JUMPI PUSH2 0x32B0 PUSH2 0x286D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x32BF DUP5 DUP3 DUP6 ADD PUSH2 0x3286 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3324 PUSH1 0x2A DUP4 PUSH2 0x2792 JUMP JUMPDEST SWAP2 POP PUSH2 0x332F DUP3 PUSH2 0x32C8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3353 DUP2 PUSH2 0x3317 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33B6 PUSH1 0x26 DUP4 PUSH2 0x2792 JUMP JUMPDEST SWAP2 POP PUSH2 0x33C1 DUP3 PUSH2 0x335A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x33E5 DUP2 PUSH2 0x33A9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x340D DUP3 PUSH2 0x33EC JUMP JUMPDEST PUSH2 0x3417 DUP2 DUP6 PUSH2 0x33F7 JUMP JUMPDEST SWAP4 POP PUSH2 0x3427 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x27A3 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x343F DUP3 DUP5 PUSH2 0x3402 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3480 PUSH1 0x1D DUP4 PUSH2 0x2792 JUMP JUMPDEST SWAP2 POP PUSH2 0x348B DUP3 PUSH2 0x344A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x34AF DUP2 PUSH2 0x3473 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY XOR 0xCE SDIV DUP4 0xED 0xFB PUSH12 0x5742A2A71A7A0499B5970F4B DUP4 SIGNEXTEND SLT 0xD8 DUP16 SHR 0xC5 KECCAK256 0xEE 0xC 0xB6 PUSH2 0x6473 PUSH16 0x6C634300081200330000000000000000 ","sourceMap":"349:17366:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2106:25:10;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4444:197:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2907:47:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;16000:237;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6807:108;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;15358:431;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8236:1268;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5203:256:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;16378:309:10;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3104:91:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5854:234;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1565:21:10;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1963:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2253:46;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2606:72;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2431:23;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;4403:128;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2497:67;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4003:191;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2818:43;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;1633:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1866:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2369:102:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7048:1039:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6575:427:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6086:193:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1791:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10639:798;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3987:149:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;17285:419:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;16850:157;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1708:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9657:732;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2037:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2730:45;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;2158:98:2;2212:13;2244:5;2237:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;:::o;2106:25:10:-;;;;:::o;4444:197:2:-;4527:4;4543:13;4559:12;:10;:12::i;:::-;4543:28;;4581:32;4590:5;4597:7;4606:6;4581:8;:32::i;:::-;4630:4;4623:11;;;4444:197;;;;:::o;2907:47:10:-;;;;;;;;;;;;;;;;;:::o;16000:237::-;16095:23;16150:7;16140:6;;:17;16136:43;;16166:13;;;;;;;;;;;;;;16136:43;16197:11;:20;16209:7;16197:20;;;;;;;;;;;:32;;;16190:39;;16000:237;;;:::o;6807:108::-;6868:7;6895:12;;6888:19;;6807:108;:::o;15358:431::-;15446:19;15483;15505:12;:19;15518:5;15505:19;;;;;;;;;;;;;;;15483:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15535:25;15563:143;15609:15;15639:6;:22;;;15676:6;:19;;;15563:31;:143::i;:::-;15535:171;;15751:6;:30;;;15731:17;:50;;;;:::i;:::-;15717:64;;15472:317;;15358:431;;;:::o;8236:1268::-;2261:21:1;:19;:21::i;:::-;8297:32:10::1;8318:10;8297:20;:32::i;:::-;8342:23;8376:21:::0;8400:12:::1;:24;8413:10;8400:24;;;;;;;;;;;;;;;;8376:48;;8458:6;;8441:13;:23:::0;8437:53:::1;;8473:17;;;;;;;;;;;;;;8437:53;8503:837;8539:6;;8523:13;:22;8503:837;;;8584:15;:27;8600:10;8584:27;;;;;;;;;;;;;;;:42;8612:13;8584:42;;;;;;;;;;;;;;;;;;;;;8583:43;:86;;;;;8668:1;8630:35;8651:13;8630:20;:35::i;:::-;:39;8583:86;8579:750;;;8735:4;8690:15;:27;8706:10;8690:27;;;;;;;;;;;;;;;:42;8718:13;8690:42;;;;;;;;;;;;:49;;;;;;;;;;;;;;;;;;8758:17;8778:11;:26;8790:13;8778:26;;;;;;;;;;;8758:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;8823:21;8847:17;:29;8865:10;8847:29;;;;;;;;;;;;;;;:44;8877:13;8847:44;;;;;;;;;;;;8823:68;;8912:20;8989:35;9010:13;8989:20;:35::i;:::-;8951:13;8936:5;:12;;;:28;;;;:::i;:::-;8935:89;;;;:::i;:::-;8912:112;;9083:5;:12;;;9068;9047:5;:18;;;:33;;;;:::i;:::-;:48;9043:145;;;9150:5;:18;;;9135:5;:12;;;:33;;;;:::i;:::-;9120:48;;9043:145;9227:12;9208:31;;;;;:::i;:::-;;;9301:12;9258:11;:26;9270:13;9258:26;;;;;;;;;;;:39;;;:55;;;;;;;:::i;:::-;;;;;;;;8671:658;;;8579:750;8547:15;;;;:::i;:::-;;;8503:837;;;9385:6;;9358:12;:24;9371:10;9358:24;;;;;;;;;;;;;;;:33;;;;9422:15;9402:16;;:35;;;;;;;:::i;:::-;;;;;;;;9448:48;9475:3;9480:15;9455:5;9448:26;;;;:48;;;;;:::i;:::-;8286:1218;;2303:20:1::0;:18;:20::i;:::-;8236:1268:10;:::o;5203:256:2:-;5300:4;5316:15;5334:12;:10;:12::i;:::-;5316:30;;5356:38;5372:4;5378:7;5387:6;5356:15;:38::i;:::-;5404:27;5414:4;5420:2;5424:6;5404:9;:27::i;:::-;5448:4;5441:11;;;5203:256;;;;;:::o;16378:309:10:-;16427:23;16463;16489:128;16535:15;16565;;16595:11;;16489:31;:128::i;:::-;16463:154;;16664:15;;16646;:33;;;;:::i;:::-;16628:51;;16452:235;16378:309;:::o;3104:91:2:-;3162:5;3186:2;3179:9;;3104:91;:::o;5854:234::-;5942:4;5958:13;5974:12;:10;:12::i;:::-;5958:28;;5996:64;6005:5;6012:7;6049:10;6021:25;6031:5;6038:7;6021:9;:25::i;:::-;:38;;;;:::i;:::-;5996:8;:64::i;:::-;6077:4;6070:11;;;5854:234;;;;:::o;1565:21:10:-;;;;:::o;1963:30::-;;;;:::o;2253:46::-;;;;;;;;;;;;;;;;;:::o;2606:72::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2431:23::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4403:128::-;4478:7;4505:9;:18;4515:7;4505:18;;;;;;;;;;;;;;;;4498:25;;4403:128;;;:::o;2497:67::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4003:191::-;4101:1;4082:21;;:7;:21;;;4074:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;4150:36;4166:1;4170:7;4179:6;4150:7;:36::i;:::-;4003:191;;:::o;2818:43::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1633:26::-;;;;:::o;1866:30::-;;;;:::o;2369:102:2:-;2425:13;2457:7;2450:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2369:102;:::o;7048:1039:10:-;7126:6;7102:21;7112:10;7102:9;:21::i;:::-;:30;7098:90;;;7156:20;;;;;;;;;;;;;;7098:90;7198:31;7215:4;7222:6;7198:8;:31::i;:::-;;7241:12;:10;:12::i;:::-;7264:32;7285:10;7264:20;:32::i;:::-;7307:35;7329:4;7335:6;7307:21;:35::i;:::-;7378:6;7363:11;;:21;;;;;;;:::i;:::-;;;;;;;;7395:19;7417:12;:24;7430:10;7417:24;;;;;;;;;;;;;;;7395:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7480:1;7458:6;:19;;;:23;7454:392;;;7498:25;7526:159;7576:15;7610:6;:22;;;7651:6;:19;;;7526:31;:159::i;:::-;7498:187;;7755:6;7735:17;:26;;;;:::i;:::-;7700:6;:30;;:62;;;;;;;:::i;:::-;;;;;;;;7483:291;7454:392;;;7828:6;7795;:30;;:39;;;;;7454:392;7881:6;7858;:19;;:29;;;;;;;:::i;:::-;;;;;;;;7923:15;7898:6;:22;;:40;;;;;7978:6;7951:12;:24;7964:10;7951:24;;;;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;8015:10;8002:77;;;8027:6;:19;;;8048:6;:30;;;8002:77;;;;;;;:::i;:::-;;;;;;;;7087:1000;7048:1039;:::o;6575:427:2:-;6668:4;6684:13;6700:12;:10;:12::i;:::-;6684:28;;6722:24;6749:25;6759:5;6766:7;6749:9;:25::i;:::-;6722:52;;6812:15;6792:16;:35;;6784:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;6903:60;6912:5;6919:7;6947:15;6928:16;:34;6903:8;:60::i;:::-;6991:4;6984:11;;;;6575:427;;;;:::o;6086:193:10:-;6166:4;6183:13;6198:12;:10;:12::i;:::-;6183:27;;6221:28;6231:5;6238:2;6242:6;6221:9;:28::i;:::-;6267:4;6260:11;;;6086:193;;;;:::o;1791:30::-;;;:::o;10639:798::-;10718:19;10764:7;10754:6;;:17;10750:43;;10780:13;;;;;;;;;;;;;;10750:43;10804:20;10827:11;:18;10839:5;10827:18;;;;;;;;;;;;;;;;10804:41;;10856:19;10878:12;:19;10891:5;10878:19;;;;;;;;;;;;;;;10856:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10929:7;10914:12;:22;10910:520;;;10952:17;:24;10970:5;10952:24;;;;;;;;;;;;;;;:33;10977:7;10952:33;;;;;;;;;;;;10938:47;;10910:520;;;11016:17;11036:11;:20;11048:7;11036:20;;;;;;;;;;;11016:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11097:1;11075:6;:19;;;:23;11071:348;;;11119:25;11147:173;11201:5;:13;;;11237:6;:22;;;11282:6;:19;;;11147:31;:173::i;:::-;11119:201;;11373:6;:30;;;11353:17;:50;;;;:::i;:::-;11339:64;;11100:319;11071:348;11001:429;10910:520;10739:698;;10639:798;;;;:::o;3987:149:2:-;4076:7;4102:11;:18;4114:5;4102:18;;;;;;;;;;;;;;;:27;4121:7;4102:27;;;;;;;;;;;;;;;;4095:34;;3987:149;;;;:::o;17285:419:10:-;17368:18;17413:7;17403:6;;:17;17399:43;;17429:13;;;;;;;;;;;;;;17399:43;17457:15;:22;17473:5;17457:22;;;;;;;;;;;;;;;:31;17480:7;17457:31;;;;;;;;;;;;;;;;;;;;;:69;;;;17525:1;17492:29;17513:7;17492:20;:29::i;:::-;:34;17457:69;17453:83;;;17535:1;17528:8;;;;17453:83;17549:17;17569:11;:20;17581:7;17569:20;;;;;;;;;;;17549:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17667:29;17688:7;17667:20;:29::i;:::-;17631:32;17648:5;17655:7;17631:16;:32::i;:::-;17616:5;:12;;;:47;;;;:::i;:::-;17615:81;;;;:::i;:::-;17602:94;;17388:316;17285:419;;;;;:::o;16850:157::-;16899:23;16983:16;;16949:5;16942:23;;;16974:4;16942:38;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:57;;;;:::i;:::-;16935:64;;16850:157;:::o;1708:27::-;;;;:::o;9657:732::-;2261:21:1;:19;:21::i;:::-;9720:19:10::1;9742:12;:24;9755:10;9742:24;;;;;;;;;;;;;;;9720:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;9787:21;9811:6;:19;;;9787:43;;9864:1;9847:13;:18:::0;9843:46:::1;;9874:15;;;;;;;;;;;;;;9843:46;9902:12;:10;:12::i;:::-;9925:32;9946:10;9925:20;:32::i;:::-;9968:43;9990:5;9997:13;9968:21;:43::i;:::-;10039:13;10024:11;;:28;;;;;;;:::i;:::-;;;;;;;;10087:1;10065:6;:19;;:23;;;::::0;::::1;10124:15;10099:6;:22;;:40;;;::::0;::::1;10183:1;10150:6;:30;;:34;;;::::0;::::1;10224:6;10197:12;:24;10210:10;10197:24;;;;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;10267:13;10241:9;:24;10259:4;10241:24;;;;;;;;;;;;;;;;:39;;;;;;;:::i;:::-;;;;;;;;10307:13;10291:9;:14;10301:3;10291:14;;;;;;;;;;;;;;;;:29;;;;;;;:::i;:::-;;;;;;;;10346:35;10355:10;10367:13;10346:35;;;;;;;:::i;:::-;;;;;;;;9709:680;;2303:20:1::0;:18;:20::i;:::-;9657:732:10;:::o;2037:31::-;;;;:::o;2730:45::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6573:108::-;6636:7;6663:10;6656:17;;6573:108;:::o;10457:340:2:-;10575:1;10558:19;;:5;:19;;;10550:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10655:1;10636:21;;:7;:21;;;10628:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10737:6;10707:11;:18;10719:5;10707:18;;;;;;;;;;;;;;;:27;10726:7;10707:27;;;;;;;;;;;;;;;:36;;;;10774:7;10758:32;;10767:5;10758:32;;;10783:6;10758:32;;;;;;:::i;:::-;;;;;;;;10457:340;;;:::o;13866:411:10:-;14031:25;14069:19;14104:16;14091:10;:29;;;;:::i;:::-;14069:51;;14131:27;14184:12;;14169:11;14162:4;:18;;;;:::i;:::-;14161:35;;;;:::i;:::-;14131:65;;14265:4;14242:19;14228:11;:33;;;;:::i;:::-;14227:42;;;;:::i;:::-;14207:62;;14058:219;;13866:411;;;;;:::o;2336:287:1:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;11575:945:10:-;11640:20;11663:11;:18;11675:5;11663:18;;;;;;;;;;;;;;;;11640:41;;11714:6;;11698:12;:22;11694:819;;11737:19;11759:12;:19;11772:5;11759:19;;;;;;;;;;;;;;;11737:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11819:1;11797:6;:19;;;:23;11793:656;;;11841:593;11875:6;;11860:12;:21;11841:593;;;11922:17;11942:11;:25;11954:12;11942:25;;;;;;;;;;;11922:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12011:25;12039:189;12097:5;:13;;;12137:6;:22;;;12186:6;:19;;;12039:31;:189::i;:::-;12011:217;;12384:6;:30;;;12339:17;:75;;;;:::i;:::-;12273:17;:24;12291:5;12273:24;;;;;;;;;;;;;;;:38;12298:12;12273:38;;;;;;;;;;;:141;;;;11899:535;;11883:14;;;;:::i;:::-;;;11841:593;;;11793:656;12495:6;;12474:11;:18;12486:5;12474:18;;;;;;;;;;;;;;;:27;;;;11722:791;11694:819;11629:891;11575:945;:::o;941:175:6:-;1023:86;1043:5;1073:23;;;1098:2;1102:5;1050:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1023:19;:86::i;:::-;941:175;;;:::o;2629:209:1:-;1716:1;2809:7;:22;;;;2629:209::o;11078:411:2:-;11178:24;11205:25;11215:5;11222:7;11205:9;:25::i;:::-;11178:52;;11264:17;11244:16;:37;11240:243;;11325:6;11305:16;:26;;11297:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11407:51;11416:5;11423:7;11451:6;11432:16;:25;11407:8;:51::i;:::-;11240:243;11168:321;11078:411;;;:::o;6288:277:10:-;6402:1;6386:18;;:4;:18;;;6378:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;6479:1;6465:16;;:2;:16;;;6457:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;6532:25;6540:4;6546:2;6550:6;6532:7;:25::i;:::-;6288:277;;;:::o;4801:999::-;4909:1;4893:18;;:4;:18;;;4889:408;;4944:6;4928:12;;:22;;;;;;;:::i;:::-;;;;;;;;4889:408;;;4983:19;5005:9;:15;5015:4;5005:15;;;;;;;;;;;;;;;;4983:37;;5058:6;5043:11;:21;;5035:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;5264:6;5250:11;:20;5232:9;:15;5242:4;5232:15;;;;;;;;;;;;;;;:38;;;;4968:329;4889:408;5327:1;5313:16;;:2;:16;;;5309:440;;5497:6;5481:12;;:22;;;;;;;;;;;5309:440;;;5716:6;5699:9;:13;5709:2;5699:13;;;;;;;;;;;;;;;;:23;;;;;;;;;;;5309:440;5781:2;5766:26;;5775:4;5766:26;;;5785:6;5766:26;;;;;;:::i;:::-;;;;;;;;4801:999;;;:::o;12635:849::-;12700:11;:19;;;12681:15;:38;12677:800;;12749:25;12777:148;12827:11;:19;;;12865:15;;12899:11;;12777:31;:148::i;:::-;12749:176;;13041:15;;13004:17;:52;;;;:::i;:::-;12953:11;:19;12965:6;;12953:19;;;;;;;;;;;:31;;:103;;;;13084:6;;13082:8;;;;;:::i;:::-;;;;;;;;13107:17;;:::i;:::-;13195:16;;13161:5;13154:23;;;13186:4;13154:38;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:57;;;;:::i;:::-;13139:5;:12;;:72;;;;;13244:15;13226:5;:15;;:33;;;;;13308:10;;13290:15;:28;;;;:::i;:::-;13274:5;:13;;:44;;;;;13359:5;13345:11;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13401:5;13379:11;:19;13391:6;;13379:19;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13453:5;:12;;;13433:16;;:32;;;;;;;:::i;:::-;;;;;;;;12721:756;;12677:800;12635:849::o;14539:645::-;14620:39;14662:144;14712:15;14746;;14780:11;;14662:31;:144::i;:::-;14620:186;;14836:31;14817:15;;:50;;;;;;;:::i;:::-;;;;;;;;14884:6;14880:251;;;14926:7;14907:15;;:26;;;;;;;:::i;:::-;;;;;;;;14880:251;;;15000:15;;14970:27;14986:10;14970:15;:27::i;:::-;:45;14966:153;;;15052:1;15034:15;:19;;;;14966:153;;;15092:27;15108:10;15092:15;:27::i;:::-;15073:15;;:46;;;;;;;:::i;:::-;;;;;;;;14966:153;14880:251;15161:15;15143;:33;;;;14609:575;14539:645;;:::o;5173:642:6:-;5592:23;5618:69;5646:4;5618:69;;;;;;;;;;;;;;;;;5626:5;5618:27;;;;:69;;;;;:::i;:::-;5592:95;;5726:1;5705:10;:17;:22;:56;;;;5742:10;5731:30;;;;;;;;;;;;:::i;:::-;5705:56;5697:111;;;;;;;;;;;;:::i;:::-;;;;;;;;;5243:572;5173:642;;:::o;4108:223:7:-;4241:12;4272:52;4294:6;4302:4;4308:1;4311:12;4272:21;:52::i;:::-;4265:59;;4108:223;;;;;:::o;5165:446::-;5330:12;5387:5;5362:21;:30;;5354:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;5446:12;5460:23;5487:6;:11;;5506:5;5513:4;5487:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:73;;;;5535:69;5562:6;5570:7;5579:10;5591:12;5535:26;:69::i;:::-;5528:76;;;;5165:446;;;;;;:::o;7671:628::-;7851:12;7879:7;7875:418;;;7927:1;7906:10;:17;:22;7902:286;;8121:18;8132:6;8121:10;:18::i;:::-;8113:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;7902:286;8208:10;8201:17;;;;7875:418;8249:33;8257:10;8269:12;8249:7;:33::i;:::-;7671:628;;;;;;;:::o;1412:320::-;1472:4;1724:1;1702:7;:19;;;:23;1695:30;;1412:320;;;:::o;8821:540::-;9000:1;8980:10;:17;:21;8976:379;;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:99:11:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1349:77::-;1386:7;1415:5;1404:16;;1349:77;;;:::o;1432:118::-;1519:24;1537:5;1519:24;:::i;:::-;1514:3;1507:37;1432:118;;:::o;1556:222::-;1649:4;1687:2;1676:9;1672:18;1664:26;;1700:71;1768:1;1757:9;1753:17;1744:6;1700:71;:::i;:::-;1556:222;;;;:::o;1865:117::-;1974:1;1971;1964:12;2111:126;2148:7;2188:42;2181:5;2177:54;2166:65;;2111:126;;;:::o;2243:96::-;2280:7;2309:24;2327:5;2309:24;:::i;:::-;2298:35;;2243:96;;;:::o;2345:122::-;2418:24;2436:5;2418:24;:::i;:::-;2411:5;2408:35;2398:63;;2457:1;2454;2447:12;2398:63;2345:122;:::o;2473:139::-;2519:5;2557:6;2544:20;2535:29;;2573:33;2600:5;2573:33;:::i;:::-;2473:139;;;;:::o;2618:122::-;2691:24;2709:5;2691:24;:::i;:::-;2684:5;2681:35;2671:63;;2730:1;2727;2720:12;2671:63;2618:122;:::o;2746:139::-;2792:5;2830:6;2817:20;2808:29;;2846:33;2873:5;2846:33;:::i;:::-;2746:139;;;;:::o;2891:474::-;2959:6;2967;3016:2;3004:9;2995:7;2991:23;2987:32;2984:119;;;3022:79;;:::i;:::-;2984:119;3142:1;3167:53;3212:7;3203:6;3192:9;3188:22;3167:53;:::i;:::-;3157:63;;3113:117;3269:2;3295:53;3340:7;3331:6;3320:9;3316:22;3295:53;:::i;:::-;3285:63;;3240:118;2891:474;;;;;:::o;3371:90::-;3405:7;3448:5;3441:13;3434:21;3423:32;;3371:90;;;:::o;3467:109::-;3548:21;3563:5;3548:21;:::i;:::-;3543:3;3536:34;3467:109;;:::o;3582:210::-;3669:4;3707:2;3696:9;3692:18;3684:26;;3720:65;3782:1;3771:9;3767:17;3758:6;3720:65;:::i;:::-;3582:210;;;;:::o;3798:329::-;3857:6;3906:2;3894:9;3885:7;3881:23;3877:32;3874:119;;;3912:79;;:::i;:::-;3874:119;4032:1;4057:53;4102:7;4093:6;4082:9;4078:22;4057:53;:::i;:::-;4047:63;;4003:117;3798:329;;;;:::o;4133:::-;4192:6;4241:2;4229:9;4220:7;4216:23;4212:32;4209:119;;;4247:79;;:::i;:::-;4209:119;4367:1;4392:53;4437:7;4428:6;4417:9;4413:22;4392:53;:::i;:::-;4382:63;;4338:117;4133:329;;;;:::o;4468:619::-;4545:6;4553;4561;4610:2;4598:9;4589:7;4585:23;4581:32;4578:119;;;4616:79;;:::i;:::-;4578:119;4736:1;4761:53;4806:7;4797:6;4786:9;4782:22;4761:53;:::i;:::-;4751:63;;4707:117;4863:2;4889:53;4934:7;4925:6;4914:9;4910:22;4889:53;:::i;:::-;4879:63;;4834:118;4991:2;5017:53;5062:7;5053:6;5042:9;5038:22;5017:53;:::i;:::-;5007:63;;4962:118;4468:619;;;;;:::o;5093:86::-;5128:7;5168:4;5161:5;5157:16;5146:27;;5093:86;;;:::o;5185:112::-;5268:22;5284:5;5268:22;:::i;:::-;5263:3;5256:35;5185:112;;:::o;5303:214::-;5392:4;5430:2;5419:9;5415:18;5407:26;;5443:67;5507:1;5496:9;5492:17;5483:6;5443:67;:::i;:::-;5303:214;;;;:::o;5523:664::-;5728:4;5766:3;5755:9;5751:19;5743:27;;5780:71;5848:1;5837:9;5833:17;5824:6;5780:71;:::i;:::-;5861:72;5929:2;5918:9;5914:18;5905:6;5861:72;:::i;:::-;5943;6011:2;6000:9;5996:18;5987:6;5943:72;:::i;:::-;6025;6093:2;6082:9;6078:18;6069:6;6025:72;:::i;:::-;6107:73;6175:3;6164:9;6160:19;6151:6;6107:73;:::i;:::-;5523:664;;;;;;;;:::o;6193:118::-;6280:24;6298:5;6280:24;:::i;:::-;6275:3;6268:37;6193:118;;:::o;6317:222::-;6410:4;6448:2;6437:9;6433:18;6425:26;;6461:71;6529:1;6518:9;6514:17;6505:6;6461:71;:::i;:::-;6317:222;;;;:::o;6545:474::-;6613:6;6621;6670:2;6658:9;6649:7;6645:23;6641:32;6638:119;;;6676:79;;:::i;:::-;6638:119;6796:1;6821:53;6866:7;6857:6;6846:9;6842:22;6821:53;:::i;:::-;6811:63;;6767:117;6923:2;6949:53;6994:7;6985:6;6974:9;6970:22;6949:53;:::i;:::-;6939:63;;6894:118;6545:474;;;;;:::o;7025:442::-;7174:4;7212:2;7201:9;7197:18;7189:26;;7225:71;7293:1;7282:9;7278:17;7269:6;7225:71;:::i;:::-;7306:72;7374:2;7363:9;7359:18;7350:6;7306:72;:::i;:::-;7388;7456:2;7445:9;7441:18;7432:6;7388:72;:::i;:::-;7025:442;;;;;;:::o;7473:180::-;7521:77;7518:1;7511:88;7618:4;7615:1;7608:15;7642:4;7639:1;7632:15;7659:320;7703:6;7740:1;7734:4;7730:12;7720:22;;7787:1;7781:4;7777:12;7808:18;7798:81;;7864:4;7856:6;7852:17;7842:27;;7798:81;7926:2;7918:6;7915:14;7895:18;7892:38;7889:84;;7945:18;;:::i;:::-;7889:84;7710:269;7659:320;;;:::o;7985:180::-;8033:77;8030:1;8023:88;8130:4;8127:1;8120:15;8154:4;8151:1;8144:15;8171:191;8211:3;8230:20;8248:1;8230:20;:::i;:::-;8225:25;;8264:20;8282:1;8264:20;:::i;:::-;8259:25;;8307:1;8304;8300:9;8293:16;;8328:3;8325:1;8322:10;8319:36;;;8335:18;;:::i;:::-;8319:36;8171:191;;;;:::o;8368:410::-;8408:7;8431:20;8449:1;8431:20;:::i;:::-;8426:25;;8465:20;8483:1;8465:20;:::i;:::-;8460:25;;8520:1;8517;8513:9;8542:30;8560:11;8542:30;:::i;:::-;8531:41;;8721:1;8712:7;8708:15;8705:1;8702:22;8682:1;8675:9;8655:83;8632:139;;8751:18;;:::i;:::-;8632:139;8416:362;8368:410;;;;:::o;8784:180::-;8832:77;8829:1;8822:88;8929:4;8926:1;8919:15;8953:4;8950:1;8943:15;8970:185;9010:1;9027:20;9045:1;9027:20;:::i;:::-;9022:25;;9061:20;9079:1;9061:20;:::i;:::-;9056:25;;9100:1;9090:35;;9105:18;;:::i;:::-;9090:35;9147:1;9144;9140:9;9135:14;;8970:185;;;;:::o;9161:194::-;9201:4;9221:20;9239:1;9221:20;:::i;:::-;9216:25;;9255:20;9273:1;9255:20;:::i;:::-;9250:25;;9299:1;9296;9292:9;9284:17;;9323:1;9317:4;9314:11;9311:37;;;9328:18;;:::i;:::-;9311:37;9161:194;;;;:::o;9361:233::-;9400:3;9423:24;9441:5;9423:24;:::i;:::-;9414:33;;9469:66;9462:5;9459:77;9456:103;;9539:18;;:::i;:::-;9456:103;9586:1;9579:5;9575:13;9568:20;;9361:233;;;:::o;9600:181::-;9740:33;9736:1;9728:6;9724:14;9717:57;9600:181;:::o;9787:366::-;9929:3;9950:67;10014:2;10009:3;9950:67;:::i;:::-;9943:74;;10026:93;10115:3;10026:93;:::i;:::-;10144:2;10139:3;10135:12;10128:19;;9787:366;;;:::o;10159:419::-;10325:4;10363:2;10352:9;10348:18;10340:26;;10412:9;10406:4;10402:20;10398:1;10387:9;10383:17;10376:47;10440:131;10566:4;10440:131;:::i;:::-;10432:139;;10159:419;;;:::o;10584:332::-;10705:4;10743:2;10732:9;10728:18;10720:26;;10756:71;10824:1;10813:9;10809:17;10800:6;10756:71;:::i;:::-;10837:72;10905:2;10894:9;10890:18;10881:6;10837:72;:::i;:::-;10584:332;;;;;:::o;10922:224::-;11062:34;11058:1;11050:6;11046:14;11039:58;11131:7;11126:2;11118:6;11114:15;11107:32;10922:224;:::o;11152:366::-;11294:3;11315:67;11379:2;11374:3;11315:67;:::i;:::-;11308:74;;11391:93;11480:3;11391:93;:::i;:::-;11509:2;11504:3;11500:12;11493:19;;11152:366;;;:::o;11524:419::-;11690:4;11728:2;11717:9;11713:18;11705:26;;11777:9;11771:4;11767:20;11763:1;11752:9;11748:17;11741:47;11805:131;11931:4;11805:131;:::i;:::-;11797:139;;11524:419;;;:::o;11949:143::-;12006:5;12037:6;12031:13;12022:22;;12053:33;12080:5;12053:33;:::i;:::-;11949:143;;;;:::o;12098:351::-;12168:6;12217:2;12205:9;12196:7;12192:23;12188:32;12185:119;;;12223:79;;:::i;:::-;12185:119;12343:1;12368:64;12424:7;12415:6;12404:9;12400:22;12368:64;:::i;:::-;12358:74;;12314:128;12098:351;;;;:::o;12455:332::-;12576:4;12614:2;12603:9;12599:18;12591:26;;12627:71;12695:1;12684:9;12680:17;12671:6;12627:71;:::i;:::-;12708:72;12776:2;12765:9;12761:18;12752:6;12708:72;:::i;:::-;12455:332;;;;;:::o;12793:223::-;12933:34;12929:1;12921:6;12917:14;12910:58;13002:6;12997:2;12989:6;12985:15;12978:31;12793:223;:::o;13022:366::-;13164:3;13185:67;13249:2;13244:3;13185:67;:::i;:::-;13178:74;;13261:93;13350:3;13261:93;:::i;:::-;13379:2;13374:3;13370:12;13363:19;;13022:366;;;:::o;13394:419::-;13560:4;13598:2;13587:9;13583:18;13575:26;;13647:9;13641:4;13637:20;13633:1;13622:9;13618:17;13611:47;13675:131;13801:4;13675:131;:::i;:::-;13667:139;;13394:419;;;:::o;13819:221::-;13959:34;13955:1;13947:6;13943:14;13936:58;14028:4;14023:2;14015:6;14011:15;14004:29;13819:221;:::o;14046:366::-;14188:3;14209:67;14273:2;14268:3;14209:67;:::i;:::-;14202:74;;14285:93;14374:3;14285:93;:::i;:::-;14403:2;14398:3;14394:12;14387:19;;14046:366;;;:::o;14418:419::-;14584:4;14622:2;14611:9;14607:18;14599:26;;14671:9;14665:4;14661:20;14657:1;14646:9;14642:17;14635:47;14699:131;14825:4;14699:131;:::i;:::-;14691:139;;14418:419;;;:::o;14843:181::-;14983:33;14979:1;14971:6;14967:14;14960:57;14843:181;:::o;15030:366::-;15172:3;15193:67;15257:2;15252:3;15193:67;:::i;:::-;15186:74;;15269:93;15358:3;15269:93;:::i;:::-;15387:2;15382:3;15378:12;15371:19;;15030:366;;;:::o;15402:419::-;15568:4;15606:2;15595:9;15591:18;15583:26;;15655:9;15649:4;15645:20;15641:1;15630:9;15626:17;15619:47;15683:131;15809:4;15683:131;:::i;:::-;15675:139;;15402:419;;;:::o;15827:179::-;15967:31;15963:1;15955:6;15951:14;15944:55;15827:179;:::o;16012:366::-;16154:3;16175:67;16239:2;16234:3;16175:67;:::i;:::-;16168:74;;16251:93;16340:3;16251:93;:::i;:::-;16369:2;16364:3;16360:12;16353:19;;16012:366;;;:::o;16384:419::-;16550:4;16588:2;16577:9;16573:18;16565:26;;16637:9;16631:4;16627:20;16623:1;16612:9;16608:17;16601:47;16665:131;16791:4;16665:131;:::i;:::-;16657:139;;16384:419;;;:::o;16809:224::-;16949:34;16945:1;16937:6;16933:14;16926:58;17018:7;17013:2;17005:6;17001:15;16994:32;16809:224;:::o;17039:366::-;17181:3;17202:67;17266:2;17261:3;17202:67;:::i;:::-;17195:74;;17278:93;17367:3;17278:93;:::i;:::-;17396:2;17391:3;17387:12;17380:19;;17039:366;;;:::o;17411:419::-;17577:4;17615:2;17604:9;17600:18;17592:26;;17664:9;17658:4;17654:20;17650:1;17639:9;17635:17;17628:47;17692:131;17818:4;17692:131;:::i;:::-;17684:139;;17411:419;;;:::o;17836:222::-;17976:34;17972:1;17964:6;17960:14;17953:58;18045:5;18040:2;18032:6;18028:15;18021:30;17836:222;:::o;18064:366::-;18206:3;18227:67;18291:2;18286:3;18227:67;:::i;:::-;18220:74;;18303:93;18392:3;18303:93;:::i;:::-;18421:2;18416:3;18412:12;18405:19;;18064:366;;;:::o;18436:419::-;18602:4;18640:2;18629:9;18625:18;18617:26;;18689:9;18683:4;18679:20;18675:1;18664:9;18660:17;18653:47;18717:131;18843:4;18717:131;:::i;:::-;18709:139;;18436:419;;;:::o;18861:225::-;19001:34;18997:1;18989:6;18985:14;18978:58;19070:8;19065:2;19057:6;19053:15;19046:33;18861:225;:::o;19092:366::-;19234:3;19255:67;19319:2;19314:3;19255:67;:::i;:::-;19248:74;;19331:93;19420:3;19331:93;:::i;:::-;19449:2;19444:3;19440:12;19433:19;;19092:366;;;:::o;19464:419::-;19630:4;19668:2;19657:9;19653:18;19645:26;;19717:9;19711:4;19707:20;19703:1;19692:9;19688:17;19681:47;19745:131;19871:4;19745:131;:::i;:::-;19737:139;;19464:419;;;:::o;19889:116::-;19959:21;19974:5;19959:21;:::i;:::-;19952:5;19949:32;19939:60;;19995:1;19992;19985:12;19939:60;19889:116;:::o;20011:137::-;20065:5;20096:6;20090:13;20081:22;;20112:30;20136:5;20112:30;:::i;:::-;20011:137;;;;:::o;20154:345::-;20221:6;20270:2;20258:9;20249:7;20245:23;20241:32;20238:119;;;20276:79;;:::i;:::-;20238:119;20396:1;20421:61;20474:7;20465:6;20454:9;20450:22;20421:61;:::i;:::-;20411:71;;20367:125;20154:345;;;;:::o;20505:229::-;20645:34;20641:1;20633:6;20629:14;20622:58;20714:12;20709:2;20701:6;20697:15;20690:37;20505:229;:::o;20740:366::-;20882:3;20903:67;20967:2;20962:3;20903:67;:::i;:::-;20896:74;;20979:93;21068:3;20979:93;:::i;:::-;21097:2;21092:3;21088:12;21081:19;;20740:366;;;:::o;21112:419::-;21278:4;21316:2;21305:9;21301:18;21293:26;;21365:9;21359:4;21355:20;21351:1;21340:9;21336:17;21329:47;21393:131;21519:4;21393:131;:::i;:::-;21385:139;;21112:419;;;:::o;21537:225::-;21677:34;21673:1;21665:6;21661:14;21654:58;21746:8;21741:2;21733:6;21729:15;21722:33;21537:225;:::o;21768:366::-;21910:3;21931:67;21995:2;21990:3;21931:67;:::i;:::-;21924:74;;22007:93;22096:3;22007:93;:::i;:::-;22125:2;22120:3;22116:12;22109:19;;21768:366;;;:::o;22140:419::-;22306:4;22344:2;22333:9;22329:18;22321:26;;22393:9;22387:4;22383:20;22379:1;22368:9;22364:17;22357:47;22421:131;22547:4;22421:131;:::i;:::-;22413:139;;22140:419;;;:::o;22565:98::-;22616:6;22650:5;22644:12;22634:22;;22565:98;;;:::o;22669:147::-;22770:11;22807:3;22792:18;;22669:147;;;;:::o;22822:386::-;22926:3;22954:38;22986:5;22954:38;:::i;:::-;23008:88;23089:6;23084:3;23008:88;:::i;:::-;23001:95;;23105:65;23163:6;23158:3;23151:4;23144:5;23140:16;23105:65;:::i;:::-;23195:6;23190:3;23186:16;23179:23;;22930:278;22822:386;;;;:::o;23214:271::-;23344:3;23366:93;23455:3;23446:6;23366:93;:::i;:::-;23359:100;;23476:3;23469:10;;23214:271;;;;:::o;23491:179::-;23631:31;23627:1;23619:6;23615:14;23608:55;23491:179;:::o;23676:366::-;23818:3;23839:67;23903:2;23898:3;23839:67;:::i;:::-;23832:74;;23915:93;24004:3;23915:93;:::i;:::-;24033:2;24028:3;24024:12;24017:19;;23676:366;;;:::o;24048:419::-;24214:4;24252:2;24241:9;24237:18;24229:26;;24301:9;24295:4;24291:20;24287:1;24276:9;24272:17;24265:47;24329:131;24455:4;24329:131;:::i;:::-;24321:139;;24048:419;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"2709600","executionCost":"infinite","totalCost":"infinite"},"external":{"_contractWeight()":"2474","_userWeightAtPool(address,uint256)":"infinite","allowance(address,address)":"infinite","approve(address,uint256)":"infinite","balanceOf(address)":"2974","claim(address)":"infinite","claimAmountForPool(address,uint256)":"infinite","claimLeftOff(address)":"2927","contractWeight()":"infinite","contractWeightAtPool(uint256)":"infinite","currentPool()":"infinite","decimals()":"411","decreaseAllowance(address,uint256)":"infinite","increaseAllowance(address,uint256)":"infinite","lastInteraction()":"2474","mintToken(address,uint256)":"infinite","name()":"infinite","pendingRewards()":"infinite","poolDetails(uint256)":"infinite","poolId()":"2541","poolLeftOff(address)":"2881","poolLength()":"2498","prime()":"infinite","stak(uint256)":"infinite","stakeDetails(address)":"infinite","symbol()":"infinite","timeToDouble()":"2495","totalStaked()":"2541","totalSupply()":"2505","transfer(address,uint256)":"infinite","transferFrom(address,address,uint256)":"infinite","unclaimedRewards()":"2539","unstake(address)":"infinite","userClaimedPool(address,uint256)":"3133","userTotalWeight(address)":"infinite","userWeightAtPool(address,uint256)":"infinite"},"internal":{"_adjustContractWeight(bool,uint256)":"infinite","_msgData()":"infinite","_msgSender()":"22","_setUserWeightAtPool(address)":"infinite","_transfer(address,address,uint256)":"infinite","_update(address,address,uint256)":"infinite","_weightIncreaseSinceInteraction(uint256,uint256,uint256)":"infinite","updatePool()":"infinite"}},"methodIdentifiers":{"_contractWeight()":"57b4702f","_userWeightAtPool(address,uint256)":"675cdd63","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","claim(address)":"1e83409a","claimAmountForPool(address,uint256)":"ea905cdf","claimLeftOff(address)":"09639761","contractWeight()":"2a745dd0","contractWeightAtPool(uint256)":"15fad854","currentPool()":"692b69ae","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","lastInteraction()":"8f71a265","mintToken(address,uint256)":"79c65068","name()":"06fdde03","pendingRewards()":"eded3fda","poolDetails(uint256)":"7a260b3f","poolId()":"3e0dc34e","poolLeftOff(address)":"65c65c1e","poolLength()":"081e3eda","prime()":"c7ee005e","stak(uint256)":"a07b10d6","stakeDetails(address)":"fa2a9da9","symbol()":"95d89b41","timeToDouble()":"ee5508f9","totalStaked()":"817b1cd2","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","unclaimedRewards()":"f85f91b4","unstake(address)":"f2888dbb","userClaimedPool(address,uint256)":"796d3fae","userTotalWeight(address)":"19beb249","userWeightAtPool(address,uint256)":"d429a5ea"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_timeToDouble\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_poolLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_firstPoolStartIn\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_prime\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ClaimedUpToPool\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Insuffient_balance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPool\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NothingStaked\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newWeightAmount\",\"type\":\"uint256\"}],\"name\":\"StakeDetails\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Unstaked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_contractWeight\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_userWeightAtPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"}],\"name\":\"claimAmountForPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"claimable_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"claimLeftOff\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractWeight\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"contractWeight_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"}],\"name\":\"contractWeightAtPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"contractWeight_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"volume\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"weightAtEnd\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastInteraction\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mintToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"pendingRewards_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolDetails\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"volume\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"weightAtEnd\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"poolLeftOff\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"prime\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stak\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakeDetails\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountStaked\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastInteraction\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"weightAtLastInteraction\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timeToDouble\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unclaimedRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userClaimedPool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"userTotalWeight\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"userWeight_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"}],\"name\":\"userWeightAtPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"userWeight_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the token balance of the specified account.\",\"params\":{\"account\":\"The account to retrieve the balance for.\"},\"returns\":{\"_0\":\"The token balance of the account.\"}},\"claim(address)\":{\"details\":\"Claims the pending rewards for the caller.\",\"params\":{\"_to\":\"The address to send the claimed rewards to.\"}},\"claimAmountForPool(address,uint256)\":{\"details\":\"Calculates the claimable rewards for a specific pool and user.\",\"params\":{\"_poolId\":\"The ID of the pool.\",\"_user\":\"The user's address.\"},\"returns\":{\"claimable_\":\"The amount of rewards claimable by the user in the specified pool.\"}},\"constructor\":{\"details\":\"Constructor function.\",\"params\":{\"_firstPoolStartIn\":\"Time until the first pool starts\",\"_poolLength\":\"Total number of pools\",\"_prime\":\"Address of the prime contract\",\"_timeToDouble\":\"Time period for doubling stake weight\"}},\"contractWeight()\":{\"details\":\"Retrieves the current contract's weight.\",\"returns\":{\"contractWeight_\":\"The current contract's weight.\"}},\"contractWeightAtPool(uint256)\":{\"details\":\"Retrieves the contract's weight at a specific pool.\",\"params\":{\"_poolId\":\"The ID of the pool.\"},\"returns\":{\"contractWeight_\":\"The contract's weight at the specified pool.\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"mintToken(address,uint256)\":{\"details\":\"Mints new tokens and assigns them to the specified account.\",\"params\":{\"account\":\"The account to mint tokens for.\",\"amount\":\"The amount of tokens to mint.\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"pendingRewards()\":{\"details\":\"Retrieves the pending rewards that haven't been claimed yet.\",\"returns\":{\"pendingRewards_\":\"The amount of pending rewards.\"}},\"stak(uint256)\":{\"details\":\"Stakes a specified amount of tokens.\",\"params\":{\"amount\":\"The amount of tokens to stake.\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"Transfers tokens from the sender's account to the specified account.\",\"params\":{\"amount\":\"The amount of tokens to transfer.\",\"to\":\"The account to transfer tokens to.\"},\"returns\":{\"_0\":\"True if the transfer is successful, false otherwise.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"unstake(address)\":{\"details\":\"Unstakes the tokens currently staked by the caller.\",\"params\":{\"_to\":\"The address to send the unstaked tokens to.\"}},\"userTotalWeight(address)\":{\"details\":\"Retrieves the total weight of a user.\",\"params\":{\"_user\":\"The user's address.\"},\"returns\":{\"userWeight_\":\"The total weight of the user.\"}},\"userWeightAtPool(address,uint256)\":{\"details\":\"Returns the weight of the specified user at the specified pool.\",\"params\":{\"_poolId\":\"The pool ID.\",\"_user\":\"The user address.\"},\"returns\":{\"userWeight_\":\"The weight of the user at the pool.\"}}},\"title\":\"Stacking Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"A smart contract for staking tokens and earning rewards\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Staking_Contract.sol\":\"Stacking\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == _ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(address from, address to, uint256 amount) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n}\\n\",\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../extensions/IERC20Permit.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    /**\\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 oldAllowance = token.allowance(address(this), spender);\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\\n    }\\n\\n    /**\\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\\n        }\\n    }\\n\\n    /**\\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful. Compatible with tokens that require the approval to be set to\\n     * 0 before setting it to a non-zero value.\\n     */\\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\\n\\n        if (!_callOptionalReturnBool(token, approvalCall)) {\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\\n            _callOptionalReturn(token, approvalCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\\n     * Revert on invalid signature.\\n     */\\n    function safePermit(\\n        IERC20Permit token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\\"SafeERC20: permit did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\\n     */\\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\\n        // and not revert is the subcall reverts.\\n\\n        (bool success, bytes memory returndata) = address(token).call(data);\\n        return\\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && Address.isContract(address(token));\\n    }\\n}\\n\",\"keccak256\":\"0x909d608c2db6eb165ca178c81289a07ed2e118e444d0025b2a85c97d0b44a4fa\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/Staking_Contract.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity 0.8.18;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\r\\n\\r\\n/// @title Stacking Contract\\r\\n/// @notice A smart contract for staking tokens and earning rewards\\r\\ncontract Stacking is ERC20,ReentrancyGuard {\\r\\n    using SafeERC20 for IERC20;\\r\\n   \\r\\n    // Error definitions\\r\\n    error Insuffient_balance();\\r\\n    error InvalidPool();\\r\\n    error ClaimedUpToPool();\\r\\n    error NothingStaked();\\r\\n    \\r\\n    // Events\\r\\n    event StakeDetails(\\r\\n        address indexed from,\\r\\n        uint256 newAmount,\\r\\n        uint256 newWeightAmount\\r\\n    );\\r\\n\\r\\n    event Unstaked(address from ,uint amount);\\r\\n    \\r\\n    // Structs\\r\\n\\r\\n    /// @dev Represents stake details for a user\\r\\n    struct Stake {\\r\\n        uint256 amountStaked;           // Amount of tokens staked by the user\\r\\n        uint256 lastInteraction;        // Timestamp of the last interaction with the stake\\r\\n        uint256 weightAtLastInteraction; // Stake weight at the time of the last interaction\\r\\n    }\\r\\n\\r\\n    /// @dev Represents a staking pool\\r\\n    struct Pool {\\r\\n        uint256 volume;         // Total volume of tokens in the pool\\r\\n        uint256 totalClaimed;   // Total tokens claimed from the pool\\r\\n        uint256 startTime;      // Start time of the pool\\r\\n        uint256 endTime;        // End time of the pool\\r\\n        uint256 weightAtEnd;    // Stake weight at the end of the pool\\r\\n    }\\r\\n   // State variables\\r\\n    uint256 public poolId;               // ID of the current pool\\r\\n    uint256 public totalStaked;          // Total amount of tokens staked\\r\\n    uint256 public timeToDouble;         // Time period for doubling stake weight\\r\\n    address public immutable prime;      // Address of the prime contract\\r\\n    uint256 public lastInteraction;      // Timestamp of the last interaction with the contract\\r\\n    uint256 public _contractWeight;      // Stake weight of the contract\\r\\n    uint256 public unclaimedRewards;     // Total unclaimed rewards\\r\\n    uint256 public poolLength;           // Total number of pools\\r\\n    uint256 private _totalSupply;        // Total supply of the stacking token\\r\\n    mapping(address => uint256) public poolLeftOff;  // Mapping of user's pool position\\r\\n    mapping(address => uint256) private _balances;  // Mapping of user's token balances\\r\\n    Pool public currentPool;             // Current pool details\\r\\n    mapping(address => mapping(uint256 => bool)) public userClaimedPool;  // Mapping of user's claimed pool\\r\\n    mapping(address => mapping(uint256 => uint256)) public _userWeightAtPool;  // Mapping of user's stake weight at a pool\\r\\n    mapping(address => Stake) public stakeDetails;  // Mapping of user's stake details\\r\\n    mapping(uint256 => Pool) public poolDetails;  // Mapping of pool ID to pool details\\r\\n    mapping(address => uint256) public claimLeftOff;  // Mapping of user's claim position\\r\\n\\r\\n    \\r\\n    /// @dev Constructor function.\\r\\n    /// @param _timeToDouble Time period for doubling stake weight\\r\\n    /// @param _poolLength Total number of pools\\r\\n    /// @param _firstPoolStartIn Time until the first pool starts\\r\\n    /// @param _prime Address of the prime contract\\r\\n    constructor(\\r\\n        uint256 _timeToDouble,\\r\\n        uint256 _poolLength,\\r\\n        uint256 _firstPoolStartIn,\\r\\n        address _prime\\r\\n    ) ERC20(\\\"MYToken\\\", \\\"MT\\\") {\\r\\n        prime =_prime;\\r\\n        timeToDouble = _timeToDouble;\\r\\n        poolLength = _poolLength;\\r\\n        currentPool.endTime = block.timestamp + _firstPoolStartIn;\\r\\n        poolDetails[0].endTime = block.timestamp + _firstPoolStartIn;\\r\\n        currentPool.startTime = block.timestamp;\\r\\n        poolDetails[0].startTime = block.timestamp;\\r\\n    }\\r\\n    \\r\\n    /**\\r\\n     * @dev Mints new tokens and assigns them to the specified account.\\r\\n     * @param account The account to mint tokens for.\\r\\n     * @param amount The amount of tokens to mint.\\r\\n     */\\r\\n    function mintToken(address account,uint256 amount) external {\\r\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\r\\n        _update(address(0), account, amount);\\r\\n    }\\r\\n    \\r\\n    /**\\r\\n     * @dev Returns the token balance of the specified account.\\r\\n     * @param account The account to retrieve the balance for.\\r\\n     * @return The token balance of the account.\\r\\n     */\\r\\n    function balanceOf(address account) public view virtual override  returns (uint256) {\\r\\n        return _balances[account];\\r\\n    }\\r\\n    \\r\\n    /**\\r\\n     * @dev Internal function to update token balances during transfers.\\r\\n     * @param from The account to transfer tokens from.\\r\\n     * @param to The account to transfer tokens to.\\r\\n     * @param amount The amount of tokens to transfer.\\r\\n     */\\r\\n    function _update(address from, address to, uint256 amount) internal virtual  {\\r\\n        if (from == address(0)) {\\r\\n            _totalSupply += amount;\\r\\n        } else {\\r\\n            uint256 fromBalance = _balances[from];\\r\\n            require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\r\\n            unchecked {\\r\\n                // Overflow not possible: amount <= fromBalance <= totalSupply.\\r\\n                _balances[from] = fromBalance - amount;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        if (to == address(0)) {\\r\\n            unchecked {\\r\\n                // Overflow not possible: amount <= totalSupply or amount <= fromBalance <= totalSupply.\\r\\n                _totalSupply -= amount;\\r\\n            }\\r\\n        } else {\\r\\n            unchecked {\\r\\n                // Overflow not possible: balance + amount is at most totalSupply, which we know fits into a uint256.\\r\\n                _balances[to] += amount;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        emit Transfer(from, to, amount);\\r\\n    }\\r\\n     /**\\r\\n     * @dev Transfers tokens from the sender's account to the specified account.\\r\\n     * @param to The account to transfer tokens to.\\r\\n     * @param amount The amount of tokens to transfer.\\r\\n     * @return True if the transfer is successful, false otherwise.\\r\\n     */\\r\\n     function transfer(address to, uint256 amount) public virtual override  returns (bool) {\\r\\n        address owner =_msgSender();\\r\\n        _transfer(owner, to, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n     function _transfer(address from, address to, uint256 amount) internal override {\\r\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\r\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\r\\n        _update(from, to, amount);\\r\\n    }\\r\\n\\r\\n    function _msgSender() internal view virtual override  returns (address) {\\r\\n        return msg.sender;\\r\\n    }\\r\\n\\r\\n    function _msgData() internal view virtual override returns (bytes calldata) {\\r\\n        return msg.data;\\r\\n    }\\r\\n\\r\\n    function totalSupply() public view virtual override returns (uint256) {\\r\\n        return _totalSupply;\\r\\n    }\\r\\n    \\r\\n    /**\\r\\n     * @dev Stakes a specified amount of tokens.\\r\\n     * @param amount The amount of tokens to stake.\\r\\n     */\\r\\n    function stak(uint256 amount) external {\\r\\n        if (balanceOf(msg.sender) < amount) {\\r\\n            revert Insuffient_balance();\\r\\n        }\\r\\n        transfer(address(this), amount);\\r\\n         updatePool();\\r\\n        _setUserWeightAtPool(msg.sender);\\r\\n        _adjustContractWeight(true, amount);\\r\\n        \\r\\n        totalStaked += amount; \\r\\n       Stake memory _stake = stakeDetails[msg.sender];\\r\\n\\r\\n        if (_stake.amountStaked > 0) {\\r\\n            uint256 _additionalWeight = _weightIncreaseSinceInteraction(\\r\\n                block.timestamp,\\r\\n                _stake.lastInteraction,\\r\\n                _stake.amountStaked\\r\\n            );\\r\\n            _stake.weightAtLastInteraction += (_additionalWeight + amount);\\r\\n        } else {\\r\\n            _stake.weightAtLastInteraction = amount;\\r\\n        }\\r\\n\\r\\n        _stake.amountStaked += amount;\\r\\n        _stake.lastInteraction = block.timestamp;\\r\\n\\r\\n        stakeDetails[msg.sender] = _stake;\\r\\n\\r\\n        emit StakeDetails(msg.sender, _stake.amountStaked, _stake.weightAtLastInteraction);\\r\\n    }\\r\\n    \\r\\n    /**\\r\\n     * @dev Claims the pending rewards for the caller.\\r\\n     * @param _to The address to send the claimed rewards to.\\r\\n     */\\r\\n    function claim(address _to) external nonReentrant {\\r\\n        _setUserWeightAtPool(msg.sender);\\r\\n\\r\\n        uint256 _pendingRewards;\\r\\n        uint256 _claimLeftOff = claimLeftOff[msg.sender];\\r\\n\\r\\n        if (_claimLeftOff == poolId) revert ClaimedUpToPool();\\r\\n\\r\\n        for (_claimLeftOff; _claimLeftOff < poolId; ++_claimLeftOff) {\\r\\n            if (!userClaimedPool[msg.sender][_claimLeftOff] && contractWeightAtPool(_claimLeftOff) > 0) {\\r\\n                userClaimedPool[msg.sender][_claimLeftOff] = true;\\r\\n                Pool memory _pool = poolDetails[_claimLeftOff];\\r\\n                uint256 _weightAtPool = _userWeightAtPool[msg.sender][_claimLeftOff];\\r\\n\\r\\n                uint256 _poolRewards = (_pool.volume * _weightAtPool) /\\r\\n                    contractWeightAtPool(_claimLeftOff);\\r\\n                if (_pool.totalClaimed + _poolRewards > _pool.volume) {\\r\\n                    _poolRewards = _pool.volume - _pool.totalClaimed;\\r\\n                }\\r\\n\\r\\n                _pendingRewards += _poolRewards;\\r\\n                poolDetails[_claimLeftOff].totalClaimed += _poolRewards;\\r\\n            }\\r\\n        }\\r\\n      \\r\\n        claimLeftOff[msg.sender] = poolId;\\r\\n        unclaimedRewards -= _pendingRewards;\\r\\n        IERC20(prime).safeTransfer(_to, _pendingRewards);\\r\\n    }\\r\\n    /**\\r\\n     * @dev Unstakes the tokens currently staked by the caller.\\r\\n     * @param _to The address to send the unstaked tokens to.\\r\\n     */\\r\\n     function unstake(address _to) external nonReentrant {\\r\\n        Stake memory _stake = stakeDetails[msg.sender];\\r\\n        \\r\\n        uint256 _stakedAmount = _stake.amountStaked;\\r\\n\\r\\n        if (_stakedAmount == 0) revert NothingStaked();\\r\\n\\r\\n        updatePool();\\r\\n        _setUserWeightAtPool(msg.sender);\\r\\n        _adjustContractWeight(false, _stakedAmount);\\r\\n\\r\\n        totalStaked -= _stakedAmount;\\r\\n\\r\\n        _stake.amountStaked = 0;\\r\\n        _stake.lastInteraction = block.timestamp;\\r\\n        _stake.weightAtLastInteraction = 0;\\r\\n\\r\\n        stakeDetails[msg.sender] = _stake;\\r\\n        _balances[address(this)]-=_stakedAmount;\\r\\n        _balances[_to]+=_stakedAmount;\\r\\n      \\r\\n\\r\\n        emit Unstaked(msg.sender, _stakedAmount);\\r\\n    }\\r\\n\\r\\n     /**\\r\\n     * @dev Returns the weight of the specified user at the specified pool.\\r\\n     * @param _user The user address.\\r\\n     * @param _poolId The pool ID.\\r\\n     * @return userWeight_ The weight of the user at the pool.\\r\\n     */\\r\\n     \\r\\n    function userWeightAtPool(address _user, uint256 _poolId) public view returns (uint256 userWeight_) {\\r\\n        if (poolId <= _poolId) revert InvalidPool();\\r\\n        uint256 _poolLeftOff = poolLeftOff[_user];\\r\\n        Stake memory _stake = stakeDetails[_user];\\r\\n\\r\\n        if (_poolLeftOff > _poolId) userWeight_ = _userWeightAtPool[_user][_poolId];\\r\\n        else {\\r\\n            Pool memory _pool = poolDetails[_poolId];\\r\\n            if (_stake.amountStaked > 0) {\\r\\n                uint256 _additionalWeight = _weightIncreaseSinceInteraction(\\r\\n                    _pool.endTime,\\r\\n                    _stake.lastInteraction,\\r\\n                    _stake.amountStaked\\r\\n                );\\r\\n                userWeight_ = _additionalWeight + _stake.weightAtLastInteraction;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Sets the user's weight at each pool up to the current pool.\\r\\n     * @param _user The user address.\\r\\n     */\\r\\n    function _setUserWeightAtPool(address _user) internal {\\r\\n        uint256 _poolLeftOff = poolLeftOff[_user];\\r\\n\\r\\n        if (_poolLeftOff != poolId) {\\r\\n            Stake memory _stake = stakeDetails[_user];\\r\\n            if (_stake.amountStaked > 0) {\\r\\n                for (_poolLeftOff; _poolLeftOff < poolId; ++_poolLeftOff) {\\r\\n                    Pool memory _pool = poolDetails[_poolLeftOff];\\r\\n                   \\r\\n                    uint256 _additionalWeight = _weightIncreaseSinceInteraction(\\r\\n                        _pool.endTime,\\r\\n                        _stake.lastInteraction,\\r\\n                        _stake.amountStaked\\r\\n                    );\\r\\n                    \\r\\n                    _userWeightAtPool[_user][_poolLeftOff] =\\r\\n                        _additionalWeight +\\r\\n                        _stake.weightAtLastInteraction;\\r\\n                }\\r\\n            }\\r\\n         \\r\\n            poolLeftOff[_user] = poolId;\\r\\n        }\\r\\n    }\\r\\n    \\r\\n    /**\\r\\n     * @dev Updates the current pool if the current time exceeds the pool end time.\\r\\n     */\\r\\n    function updatePool() internal {\\r\\n        if (block.timestamp >= currentPool.endTime) {\\r\\n           \\r\\n            uint256 _additionalWeight = _weightIncreaseSinceInteraction(\\r\\n                currentPool.endTime,\\r\\n                lastInteraction,\\r\\n                totalStaked\\r\\n            );\\r\\n           \\r\\n            poolDetails[poolId].weightAtEnd =\\r\\n                _additionalWeight +\\r\\n                _contractWeight;\\r\\n         \\r\\n            ++poolId;\\r\\n\\r\\n            Pool memory _pool;\\r\\n            _pool.volume = IERC20(prime).balanceOf(address(this)) - unclaimedRewards;\\r\\n            _pool.startTime = block.timestamp;\\r\\n            _pool.endTime = block.timestamp + poolLength;\\r\\n          \\r\\n            currentPool = _pool;\\r\\n            poolDetails[poolId] = _pool;\\r\\n          \\r\\n            unclaimedRewards += _pool.volume;\\r\\n        }\\r\\n    }\\r\\n     /**\\r\\n     * @dev Calculates the additional weight increase since the last interaction.\\r\\n     * @param _timestamp The current timestamp.\\r\\n     * @param _lastInteraction The timestamp of the last interaction.\\r\\n     * @param _baseAmount The base amount to calculate the additional weight increase.\\r\\n     * @return additionalWeight_ The additional weight increase.\\r\\n     */\\r\\n    function _weightIncreaseSinceInteraction(\\r\\n        uint256 _timestamp,\\r\\n        uint256 _lastInteraction,\\r\\n        uint256 _baseAmount\\r\\n    ) internal view returns (uint256 additionalWeight_) {\\r\\n        uint256 _timePassed = _timestamp - _lastInteraction;\\r\\n        uint256 _multiplierReceived = (1e18 * _timePassed) / timeToDouble;\\r\\n        additionalWeight_ = (_baseAmount * _multiplierReceived) / 1e18;\\r\\n    }\\r\\n    /**\\r\\n     * @dev Adjusts the contract's weight based on stake or unstake actions.\\r\\n     * @param _stake A boolean indicating if it's a stake action (true) or unstake action (false).\\r\\n     * @param _amount The amount being staked or unstaked.\\r\\n     */\\r\\n    function _adjustContractWeight(bool _stake, uint256 _amount) internal {\\r\\n        uint256 _weightReceivedSinceInteraction = _weightIncreaseSinceInteraction(\\r\\n                block.timestamp,\\r\\n                lastInteraction,\\r\\n                totalStaked\\r\\n            );\\r\\n        _contractWeight += _weightReceivedSinceInteraction;\\r\\n\\r\\n        if (_stake) {\\r\\n            _contractWeight += _amount;\\r\\n        } else {\\r\\n            if (userTotalWeight(msg.sender) > _contractWeight)\\r\\n                _contractWeight = 0;\\r\\n            else _contractWeight -= userTotalWeight(msg.sender);\\r\\n        }\\r\\n\\r\\n        lastInteraction = block.timestamp;\\r\\n    }\\r\\n    /**\\r\\n     * @dev Retrieves the total weight of a user.\\r\\n     * @param _user The user's address.\\r\\n     * @return userWeight_ The total weight of the user.\\r\\n     */\\r\\n    function userTotalWeight(address _user)\\r\\n        public\\r\\n        view\\r\\n        returns (uint256 userWeight_)\\r\\n    {\\r\\n        Stake memory _stake = stakeDetails[_user];\\r\\n        uint256 _additionalWeight = _weightIncreaseSinceInteraction(\\r\\n            block.timestamp,\\r\\n            _stake.lastInteraction,\\r\\n            _stake.amountStaked\\r\\n        );\\r\\n        userWeight_ = _additionalWeight + _stake.weightAtLastInteraction;\\r\\n    }\\r\\n    /**\\r\\n     * @dev Retrieves the contract's weight at a specific pool.\\r\\n     * @param _poolId The ID of the pool.\\r\\n     * @return contractWeight_ The contract's weight at the specified pool.\\r\\n     */\\r\\n\\r\\n    function contractWeightAtPool(uint256 _poolId)\\r\\n        public\\r\\n        view\\r\\n        returns (uint256 contractWeight_)\\r\\n    {\\r\\n        if (poolId <= _poolId) revert InvalidPool();\\r\\n        return poolDetails[_poolId].weightAtEnd;\\r\\n    }\\r\\n    /**\\r\\n     * @dev Retrieves the current contract's weight.\\r\\n     * @return contractWeight_ The current contract's weight.\\r\\n     */\\r\\n    function contractWeight() external view returns (uint256 contractWeight_) {\\r\\n        uint256 _weightIncrease = _weightIncreaseSinceInteraction(\\r\\n            block.timestamp,\\r\\n            lastInteraction,\\r\\n            totalStaked\\r\\n        );\\r\\n        contractWeight_ = _weightIncrease + _contractWeight;\\r\\n    }\\r\\n\\r\\n     /**\\r\\n     * @dev Retrieves the pending rewards that haven't been claimed yet.\\r\\n     * @return pendingRewards_ The amount of pending rewards.\\r\\n     */\\r\\n   function pendingRewards() external view returns (uint256 pendingRewards_) {\\r\\n        return IERC20(prime).balanceOf(address(this)) - unclaimedRewards;\\r\\n    }\\r\\n    /**\\r\\n     * @dev Calculates the claimable rewards for a specific pool and user.\\r\\n     * @param _user The user's address.\\r\\n     * @param _poolId The ID of the pool.\\r\\n     * @return claimable_ The amount of rewards claimable by the user in the specified pool.\\r\\n     */\\r\\n    function claimAmountForPool(address _user, uint256 _poolId) external view returns (uint256 claimable_) {\\r\\n        if (poolId <= _poolId) revert InvalidPool();\\r\\n        if (userClaimedPool[_user][_poolId] || contractWeightAtPool(_poolId) == 0) return 0;\\r\\n\\r\\n        Pool memory _pool = poolDetails[_poolId];\\r\\n\\r\\n        claimable_ = (_pool.volume * userWeightAtPool(_user, _poolId)) / contractWeightAtPool(_poolId);\\r\\n    }\\r\\n\\r\\n    \\r\\n}\",\"keccak256\":\"0x09522a56371816577dabc078258acbb2faa1efeb22ddc278f74aba99859be28a\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":193,"contract":"contracts/Staking_Contract.sol:Stacking","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":199,"contract":"contracts/Staking_Contract.sol:Stacking","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":201,"contract":"contracts/Staking_Contract.sol:Stacking","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":203,"contract":"contracts/Staking_Contract.sol:Stacking","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":205,"contract":"contracts/Staking_Contract.sol:Stacking","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"},{"astId":123,"contract":"contracts/Staking_Contract.sol:Stacking","label":"_status","offset":0,"slot":"5","type":"t_uint256"},{"astId":1727,"contract":"contracts/Staking_Contract.sol:Stacking","label":"poolId","offset":0,"slot":"6","type":"t_uint256"},{"astId":1729,"contract":"contracts/Staking_Contract.sol:Stacking","label":"totalStaked","offset":0,"slot":"7","type":"t_uint256"},{"astId":1731,"contract":"contracts/Staking_Contract.sol:Stacking","label":"timeToDouble","offset":0,"slot":"8","type":"t_uint256"},{"astId":1735,"contract":"contracts/Staking_Contract.sol:Stacking","label":"lastInteraction","offset":0,"slot":"9","type":"t_uint256"},{"astId":1737,"contract":"contracts/Staking_Contract.sol:Stacking","label":"_contractWeight","offset":0,"slot":"10","type":"t_uint256"},{"astId":1739,"contract":"contracts/Staking_Contract.sol:Stacking","label":"unclaimedRewards","offset":0,"slot":"11","type":"t_uint256"},{"astId":1741,"contract":"contracts/Staking_Contract.sol:Stacking","label":"poolLength","offset":0,"slot":"12","type":"t_uint256"},{"astId":1743,"contract":"contracts/Staking_Contract.sol:Stacking","label":"_totalSupply","offset":0,"slot":"13","type":"t_uint256"},{"astId":1747,"contract":"contracts/Staking_Contract.sol:Stacking","label":"poolLeftOff","offset":0,"slot":"14","type":"t_mapping(t_address,t_uint256)"},{"astId":1751,"contract":"contracts/Staking_Contract.sol:Stacking","label":"_balances","offset":0,"slot":"15","type":"t_mapping(t_address,t_uint256)"},{"astId":1754,"contract":"contracts/Staking_Contract.sol:Stacking","label":"currentPool","offset":0,"slot":"16","type":"t_struct(Pool)1725_storage"},{"astId":1760,"contract":"contracts/Staking_Contract.sol:Stacking","label":"userClaimedPool","offset":0,"slot":"21","type":"t_mapping(t_address,t_mapping(t_uint256,t_bool))"},{"astId":1766,"contract":"contracts/Staking_Contract.sol:Stacking","label":"_userWeightAtPool","offset":0,"slot":"22","type":"t_mapping(t_address,t_mapping(t_uint256,t_uint256))"},{"astId":1771,"contract":"contracts/Staking_Contract.sol:Stacking","label":"stakeDetails","offset":0,"slot":"23","type":"t_mapping(t_address,t_struct(Stake)1714_storage)"},{"astId":1776,"contract":"contracts/Staking_Contract.sol:Stacking","label":"poolDetails","offset":0,"slot":"24","type":"t_mapping(t_uint256,t_struct(Pool)1725_storage)"},{"astId":1780,"contract":"contracts/Staking_Contract.sol:Stacking","label":"claimLeftOff","offset":0,"slot":"25","type":"t_mapping(t_address,t_uint256)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_mapping(t_uint256,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(uint256 => bool))","numberOfBytes":"32","value":"t_mapping(t_uint256,t_bool)"},"t_mapping(t_address,t_mapping(t_uint256,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(uint256 => uint256))","numberOfBytes":"32","value":"t_mapping(t_uint256,t_uint256)"},"t_mapping(t_address,t_struct(Stake)1714_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct Stacking.Stake)","numberOfBytes":"32","value":"t_struct(Stake)1714_storage"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_bool)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_uint256,t_struct(Pool)1725_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct Stacking.Pool)","numberOfBytes":"32","value":"t_struct(Pool)1725_storage"},"t_mapping(t_uint256,t_uint256)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(Pool)1725_storage":{"encoding":"inplace","label":"struct Stacking.Pool","members":[{"astId":1716,"contract":"contracts/Staking_Contract.sol:Stacking","label":"volume","offset":0,"slot":"0","type":"t_uint256"},{"astId":1718,"contract":"contracts/Staking_Contract.sol:Stacking","label":"totalClaimed","offset":0,"slot":"1","type":"t_uint256"},{"astId":1720,"contract":"contracts/Staking_Contract.sol:Stacking","label":"startTime","offset":0,"slot":"2","type":"t_uint256"},{"astId":1722,"contract":"contracts/Staking_Contract.sol:Stacking","label":"endTime","offset":0,"slot":"3","type":"t_uint256"},{"astId":1724,"contract":"contracts/Staking_Contract.sol:Stacking","label":"weightAtEnd","offset":0,"slot":"4","type":"t_uint256"}],"numberOfBytes":"160"},"t_struct(Stake)1714_storage":{"encoding":"inplace","label":"struct Stacking.Stake","members":[{"astId":1709,"contract":"contracts/Staking_Contract.sol:Stacking","label":"amountStaked","offset":0,"slot":"0","type":"t_uint256"},{"astId":1711,"contract":"contracts/Staking_Contract.sol:Stacking","label":"lastInteraction","offset":0,"slot":"1","type":"t_uint256"},{"astId":1713,"contract":"contracts/Staking_Contract.sol:Stacking","label":"weightAtLastInteraction","offset":0,"slot":"2","type":"t_uint256"}],"numberOfBytes":"96"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"notice":"A smart contract for staking tokens and earning rewards","version":1}}}}}}